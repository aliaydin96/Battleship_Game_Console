


ARM Macro Assembler    Page 1 


    1 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
    2 00000000 40038088 
                       ADC0_SSFIFO2
                               EQU              0x40038088  ; Channel 2 results
                                                            
    3 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                             
    4 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
    5 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C  ; ISC
    6 00000000 4003808C 
                       ADC0_SSFSTAT2
                               EQU              0X4003808C
    7 00000000 400043FC 
                       PORTA_DATA
                               EQU              0x400043FC
    8 00000000 20000400 
                       POSITION
                               EQU              0X20000400
    9 00000000                 AREA             main, CODE, READONLY
   10 00000000                 THUMB
   11 00000000                 IMPORT           LCD_INIT
   12 00000000                 IMPORT           Init
   13 00000000                 IMPORT           DELAY
   14 00000000                 EXTERN           OutChar
   15 00000000                 EXTERN           TRANSMIT
   16 00000000                 EXTERN           TIMER_INIT
   17 00000000                 EXTERN           BATTLESHIP
   18 00000000                 EXTERN           BOUNDARY
   19 00000000                 EXTERN           CIVILIAN
   20 00000000                 EXTERN           Timer0A_Handler
   21 00000000                 EXTERN           GPIOPortF_Handler
   22 00000000                 EXTERN           GPIO_INIT
   23 00000000                 EXPORT           __main
   24 00000000         
   25 00000000         __main
   26 00000000 F7FF FFFE       BL               Init
   27 00000004 F7FF FFFE       BL               LCD_INIT
   28 00000008 F7FF FFFE       BL               GPIO_INIT
   29 0000000C 498A            LDR              R1,=PORTA_DATA
   30 0000000E 6808            LDR              R0,[R1]
   31 00000010 F040 0040       ORR              R0,#0x40
   32 00000014 6008            STR              R0,[R1]
   33 00000016 F000 F89E       BL               CLEAR
   34 0000001A F7FF FFFE       BL               BOUNDARY
   35 0000001E         ;   BL  TIMER_INIT
   36 0000001E         ;   MOV R7, #21  ;this counter for timer 
   37 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   38 0000001E         ;;;;; REGISTERS
   39 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   40 0000001E         ;;;;; R0  ==> GENERAL PURPOSES
   41 0000001E         ;;;;; R1  ==> GENERAL PURPOSES



ARM Macro Assembler    Page 2 


   42 0000001E         ;;;;; R2  ==> CURSOR'S POSITION
   43 0000001E         ;;;;; R3  ==> X POSITION
   44 0000001E         ;;;;; R4  ==> CURSOR'S POSITION
   45 0000001E         ;;;;; R5  ==> DISPLAY REGISTER
   46 0000001E         ;;;;; R6  ==> FREE
   47 0000001E         ;;;;; R7  ==> TIMER'S COUNTER
   48 0000001E         ;;;;; R8  ==> ADC RESULT 
   49 0000001E         ;;;;; R9  ==> ADC RESULT
   50 0000001E         ;;;;; R10 ==> FREE
   51 0000001E         ;;;;; R11 ==> FREE
   52 0000001E         ;;;;; R12 ==> FREE
   53 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   54 0000001E 4987    getsample
                               LDR              R1,=ADC0_PSSI 
                                                            ; request a sample
   55 00000020 6808            LDR              R0,[R1]     ;
   56 00000022 F040 000C       ORR              R0,R0,#0x0C ; get a sample
   57 00000026 6008            STR              R0,[R1]     ;
   58 00000028         
   59 00000028 4985    loop    LDR              R1,=ADC0_RIS ; check for interr
                                                            up flag
   60 0000002A 6808            LDR              R0,[R1]     ;
   61 0000002C F010 000C       ANDS             R0,#0x0C    ;
   62 00000030 D0FA            BEQ              loop
   63 00000032         
   64 00000032 4984            LDR              R1,=ADC0_ISC ; clear the interr
                                                            upt flag
   65 00000034 6808            LDR              R0,[R1]     ;
   66 00000036 F040 000C       ORR              R0,#0x0C    ;
   67 0000003A 6008            STR              R0,[R1]     ; Interrupt flag is
                                                             cleared
   68 0000003C         
   69 0000003C 4982            LDR              R1,=ADC0_SSFIFO2 ;
   70 0000003E F8D1 8000       LDR              R8,[R1]     ; R8 is the data PE
                                                            3
   71 00000042         
   72 00000042         
   73 00000042 4982            LDR              R1, =ADC0_SSFIFO3
   74 00000044 F8D1 9000       LDR              R9,[R1]
   75 00000048         
   76 00000048         CURSOR
   77 00000048         ;   BL  BOUNDARY
   78 00000048         ;   BL  BATTLESHIP
   79 00000048         ;   BL  CIVILIAN
   80 00000048 F04F 004B       MOV              R0,#75      ; get the first dig
                                                            it
   81 0000004C FBB9 F3F0       UDIV             R3,R9,R0    ;
   82 00000050 F103 0384       ADD              R3, #0X84
   83 00000054 F04F 00AE       MOV              R0,#174     ; get the first dig
                                                            it
   84 00000058 FBB8 F8F0       UDIV             R8,R8,R0    ;
   85 0000005C         
   86 0000005C 4976            LDR              R1,=PORTA_DATA
   87 0000005E 6808            LDR              R0,[R1]
   88 00000060 F020 0040       BIC              R0,#0x40
   89 00000064 6008            STR              R0,[R1]
   90 00000066         
   91 00000066 461D            MOV              R5, R3
   92 00000068 F7FF FFFE       BL               TRANSMIT



ARM Macro Assembler    Page 3 


   93 0000006C F04F 0541       MOV              R5, #0x41
   94 00000070 F7FF FFFE       BL               TRANSMIT
   95 00000074         
   96 00000074 4970            LDR              R1,=PORTA_DATA
   97 00000076 6808            LDR              R0,[R1]
   98 00000078 F040 0040       ORR              R0,#0x40
   99 0000007C 6008            STR              R0,[R1]
  100 0000007E         
  101 0000007E F1B8 0801       SUBS             R8, #1
  102 00000082 BF0B 2201       MOVEQ            R2, #0X1
  103 00000086 2202            MOVNE            R2, #0X2
  104 00000088 2403            MOVEQ            R4, #0X3
  105 0000008A 2407            MOVNE            R4, #0X7
  106 0000008C FA02 F208       LSL              R2, R8
  107 00000090 FA04 F408       LSL              R4, R8
  108 00000094         
  109 00000094         
  110 00000094 2B85            CMP              R3, #0X85
  111 00000096 BF0C 25FF       MOVEQ            R5, #0XFF
  112 0000009A 2500            MOVNE            R5, #0X0
  113 0000009C F7FF FFFE       BL               TRANSMIT
  114 000000A0 4615            MOV              R5, R2      ;NE
  115 000000A2 F7FF FFFE       BL               TRANSMIT
  116 000000A6 4625            MOV              R5, R4
  117 000000A8 F7FF FFFE       BL               TRANSMIT
  118 000000AC 4615            MOV              R5, R2
  119 000000AE F7FF FFFE       BL               TRANSMIT
  120 000000B2 F04F 0500       MOV              R5, #0X0
  121 000000B6 F7FF FFFE       BL               TRANSMIT
  122 000000BA         
  123 000000BA         
  124 000000BA 495F            LDR              R1,=PORTA_DATA
  125 000000BC 6808            LDR              R0,[R1]
  126 000000BE F020 0040       BIC              R0,#0x40
  127 000000C2 6008            STR              R0,[R1]
  128 000000C4         
  129 000000C4 461D            MOV              R5, R3
  130 000000C6 F7FF FFFE       BL               TRANSMIT
  131 000000CA F04F 0542       MOV              R5, #0x42
  132 000000CE F7FF FFFE       BL               TRANSMIT
  133 000000D2         
  134 000000D2 4959            LDR              R1,=PORTA_DATA
  135 000000D4 6808            LDR              R0,[R1]
  136 000000D6 F040 0040       ORR              R0,#0x40
  137 000000DA 6008            STR              R0,[R1]
  138 000000DC         
  139 000000DC BA52            REV16            R2, R2
  140 000000DE BA64            REV16            R4, R4
  141 000000E0         
  142 000000E0 2B85            CMP              R3, #0X85
  143 000000E2 BF0C 25FF       MOVEQ            R5, #0XFF
  144 000000E6 2500            MOVNE            R5, #0X0
  145 000000E8 F7FF FFFE       BL               TRANSMIT
  146 000000EC 4615            MOV              R5, R2      ;NE
  147 000000EE F7FF FFFE       BL               TRANSMIT
  148 000000F2 4625            MOV              R5, R4
  149 000000F4 F7FF FFFE       BL               TRANSMIT
  150 000000F8 4615            MOV              R5, R2
  151 000000FA F7FF FFFE       BL               TRANSMIT



ARM Macro Assembler    Page 4 


  152 000000FE F04F 0500       MOV              R5, #0X0
  153 00000102 F7FF FFFE       BL               TRANSMIT
  154 00000106         
  155 00000106 494C            LDR              R1,=PORTA_DATA
  156 00000108 6808            LDR              R0,[R1]
  157 0000010A F020 0040       BIC              R0,#0x40
  158 0000010E 6008            STR              R0,[R1]
  159 00000110         
  160 00000110 461D            MOV              R5, R3
  161 00000112 F7FF FFFE       BL               TRANSMIT
  162 00000116 F04F 0543       MOV              R5, #0x43
  163 0000011A F7FF FFFE       BL               TRANSMIT
  164 0000011E         
  165 0000011E 4946            LDR              R1,=PORTA_DATA
  166 00000120 6808            LDR              R0,[R1]
  167 00000122 F040 0040       ORR              R0,#0x40
  168 00000126 6008            STR              R0,[R1]
  169 00000128         
  170 00000128 BA12            REV              R2, R2
  171 0000012A BA24            REV              R4, R4
  172 0000012C         
  173 0000012C 2B85            CMP              R3, #0X85
  174 0000012E BF0C 25FF       MOVEQ            R5, #0XFF
  175 00000132 2500            MOVNE            R5, #0X0
  176 00000134 F7FF FFFE       BL               TRANSMIT
  177 00000138 4615            MOV              R5, R2      ;NE
  178 0000013A F7FF FFFE       BL               TRANSMIT
  179 0000013E 4625            MOV              R5, R4
  180 00000140 F7FF FFFE       BL               TRANSMIT
  181 00000144 4615            MOV              R5, R2
  182 00000146 F7FF FFFE       BL               TRANSMIT
  183 0000014A F04F 0500       MOV              R5, #0X0
  184 0000014E F7FF FFFE       BL               TRANSMIT
  185 00000152 E764            B                getsample   ;      
  186 00000154         
  187 00000154         FIN
  188 00000154 E7FE            B                FIN
  189 00000156         
  190 00000156         
  191 00000156         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  192 00000156         ;;;;;; CLEAR WHOLE SCREEN
  193 00000156         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  194 00000156 B503    CLEAR   PUSH             {R0,R1,LR}
  195 00000158 F04F 0000       MOV              R0,#0
  196 0000015C F240 11F7       MOV              R1, #503
  197 00000160 F04F 0500 
                       LOOP    MOV              R5, #0X0
  198 00000164 F7FF FFFE       BL               TRANSMIT
  199 00000168 F100 0001       ADD              R0, #1
  200 0000016C 4288            CMP              R0,R1
  201 0000016E D1F7            BNE              LOOP
  202 00000170 E8BD 4003       POP              {R0,R1,LR}
  203 00000174 4770            BX               LR
  204 00000176         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  205 00000176         
  206 00000176         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  207 00000176         ;;;;;; CLEAR Y = 1 ROW
  208 00000176         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  209 00000176 B507    CLEARBOX1



ARM Macro Assembler    Page 5 


                               PUSH{R0,         R1, R2, LR}
  210 00000178 492F            LDR              R1,=PORTA_DATA
  211 0000017A 6808            LDR              R0,[R1]
  212 0000017C F020 0040       BIC              R0,#0x40
  213 00000180 6008            STR              R0,[R1]
  214 00000182         
  215 00000182 F04F 0586       MOV              R5, #0X86
  216 00000186 F7FF FFFE       BL               TRANSMIT
  217 0000018A F04F 0541       MOV              R5, #0X41
  218 0000018E F7FF FFFE       BL               TRANSMIT
  219 00000192         
  220 00000192 4929            LDR              R1,=PORTA_DATA
  221 00000194 6808            LDR              R0,[R1]
  222 00000196 F040 0040       ORR              R0,#0x40
  223 0000019A 6008            STR              R0,[R1]
  224 0000019C F04F 0286       MOV              R2, #0X86
  225 000001A0         
  226 000001A0 F04F 0500 
                       LOOP_C  MOV              R5, #0X0
  227 000001A4 F7FF FFFE       BL               TRANSMIT
  228 000001A8 F102 0201       ADD              R2, #1
  229 000001AC 2AC5            CMP              R2, #0XC5
  230 000001AE D1F7            BNE              LOOP_C
  231 000001B0         
  232 000001B0 E8BD 4007       POP{R0,          R1, R2, LR}
  233 000001B4 4770            BX               LR
  234 000001B6         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  235 000001B6         ;;;;;; CLEAR Y = 2 ROW
  236 000001B6         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  237 000001B6 B507    CLEARBOX2
                               PUSH{R0,         R1, R2, LR}
  238 000001B8 491F            LDR              R1,=PORTA_DATA
  239 000001BA 6808            LDR              R0,[R1]
  240 000001BC F020 0040       BIC              R0,#0x40
  241 000001C0 6008            STR              R0,[R1]
  242 000001C2         
  243 000001C2 F04F 0586       MOV              R5, #0X86
  244 000001C6 F7FF FFFE       BL               TRANSMIT
  245 000001CA F04F 0542       MOV              R5, #0X42
  246 000001CE F7FF FFFE       BL               TRANSMIT
  247 000001D2         
  248 000001D2 4919            LDR              R1,=PORTA_DATA
  249 000001D4 6808            LDR              R0,[R1]
  250 000001D6 F040 0040       ORR              R0,#0x40
  251 000001DA 6008            STR              R0,[R1]
  252 000001DC F04F 0286       MOV              R2, #0X86
  253 000001E0         
  254 000001E0 F04F 0500 
                       LOOP_C_2
                               MOV              R5, #0X0
  255 000001E4 F7FF FFFE       BL               TRANSMIT
  256 000001E8 F102 0201       ADD              R2, #1
  257 000001EC 2AC5            CMP              R2, #0XC5
  258 000001EE D1F7            BNE              LOOP_C_2
  259 000001F0         
  260 000001F0 E8BD 4007       POP{R0,          R1, R2, LR}
  261 000001F4 4770            BX               LR
  262 000001F6         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  263 000001F6         ;;;;;; CLEAR Y = 3 ROW



ARM Macro Assembler    Page 6 


  264 000001F6         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  265 000001F6 B507    CLEARBOX3
                               PUSH{R0,         R1, R2, LR}
  266 000001F8 490F            LDR              R1,=PORTA_DATA
  267 000001FA 6808            LDR              R0,[R1]
  268 000001FC F020 0040       BIC              R0,#0x40
  269 00000200 6008            STR              R0,[R1]
  270 00000202         
  271 00000202 F04F 0586       MOV              R5, #0X86
  272 00000206 F7FF FFFE       BL               TRANSMIT
  273 0000020A F04F 0543       MOV              R5, #0X43
  274 0000020E F7FF FFFE       BL               TRANSMIT
  275 00000212         
  276 00000212 4909            LDR              R1,=PORTA_DATA
  277 00000214 6808            LDR              R0,[R1]
  278 00000216 F040 0040       ORR              R0,#0x40
  279 0000021A 6008            STR              R0,[R1]
  280 0000021C F04F 0286       MOV              R2, #0X86
  281 00000220         
  282 00000220 F04F 0500 
                       LOOP_C_3
                               MOV              R5, #0X0
  283 00000224 F7FF FFFE       BL               TRANSMIT
  284 00000228 F102 0201       ADD              R2, #1
  285 0000022C 2AC5            CMP              R2, #0XC5
  286 0000022E D1F7            BNE              LOOP_C_3
  287 00000230         
  288 00000230 E8BD 4007       POP{R0,          R1, R2, LR}
  289 00000234 4770            BX               LR
  290 00000236         
  291 00000236         
  292 00000236         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  293 00000236         ;;;;; NUMBERS 0-9 BEGINNING
  294 00000236         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  295 00000236         ;N0   PUSH  {LR} 
  296 00000236         ;   MOV  R5, #0X3E
  297 00000236         ;   BL  TRANSMIT
  298 00000236         ;   MOV  R5, #0X51
  299 00000236         ;   BL  TRANSMIT
  300 00000236         ;   MOV  R5, #0X49
  301 00000236         ;   BL  TRANSMIT   
  302 00000236         ;   MOV  R5, #0X45
  303 00000236         ;   BL  TRANSMIT
  304 00000236         ;   MOV  R5, #0X3E
  305 00000236         ;   BL  TRANSMIT   
  306 00000236         ;   POP  {LR}
  307 00000236         ;   BX  LR
  308 00000236         
  309 00000236         ;N1   PUSH  {LR} 
  310 00000236         ;   MOV  R5, #0X0
  311 00000236         ;   BL  TRANSMIT
  312 00000236         ;   MOV  R5, #0X42
  313 00000236         ;   BL  TRANSMIT
  314 00000236         ;   MOV  R5, #0X7F
  315 00000236         ;   BL  TRANSMIT   
  316 00000236         ;   MOV  R5, #0X40
  317 00000236         ;   BL  TRANSMIT
  318 00000236         ;   MOV  R5, #0X0
  319 00000236         ;   BL  TRANSMIT   



ARM Macro Assembler    Page 7 


  320 00000236         ;   POP  {LR}
  321 00000236         ;   BX  LR
  322 00000236         
  323 00000236         ;N2   PUSH  {LR} 
  324 00000236         ;   MOV  R5, #0X42
  325 00000236         ;   BL  TRANSMIT
  326 00000236         ;   MOV  R5, #0X61
  327 00000236         ;   BL  TRANSMIT
  328 00000236         ;   MOV  R5, #0X51
  329 00000236         ;   BL  TRANSMIT   
  330 00000236         ;   MOV  R5, #0X49
  331 00000236         ;   BL  TRANSMIT
  332 00000236         ;   MOV  R5, #0X46
  333 00000236         ;   BL  TRANSMIT   
  334 00000236         ;   POP  {LR}
  335 00000236         ;   BX  LR
  336 00000236         ; 
  337 00000236         ;N3   PUSH  {LR} 
  338 00000236         ;   MOV  R5, #0X21
  339 00000236         ;   BL  TRANSMIT
  340 00000236         ;   MOV  R5, #0X41
  341 00000236         ;   BL  TRANSMIT
  342 00000236         ;   MOV  R5, #0X45
  343 00000236         ;   BL  TRANSMIT   
  344 00000236         ;   MOV  R5, #0X4B
  345 00000236         ;   BL  TRANSMIT
  346 00000236         ;   MOV  R5, #0X31
  347 00000236         ;   BL  TRANSMIT   
  348 00000236         ;   POP  {LR}
  349 00000236         ;   BX  LR
  350 00000236         
  351 00000236         ;N4   PUSH  {LR} 
  352 00000236         ;   MOV  R5, #0X18
  353 00000236         ;   BL  TRANSMIT
  354 00000236         ;   MOV  R5, #0X14
  355 00000236         ;   BL  TRANSMIT
  356 00000236         ;   MOV  R5, #0X12
  357 00000236         ;   BL  TRANSMIT   
  358 00000236         ;   MOV  R5, #0X7F
  359 00000236         ;   BL  TRANSMIT
  360 00000236         ;   MOV  R5, #0X10
  361 00000236         ;   BL  TRANSMIT   
  362 00000236         ;   POP  {LR}
  363 00000236         ;   BX  LR
  364 00000236         
  365 00000236         ;N5   PUSH  {LR} 
  366 00000236         ;   MOV  R5, #0X27
  367 00000236         ;   BL  TRANSMIT
  368 00000236         ;   MOV  R5, #0X45
  369 00000236         ;   BL  TRANSMIT
  370 00000236         ;   MOV  R5, #0X45
  371 00000236         ;   BL  TRANSMIT   
  372 00000236         ;   MOV  R5, #0X45
  373 00000236         ;   BL  TRANSMIT
  374 00000236         ;   MOV  R5, #0X39
  375 00000236         ;   BL  TRANSMIT   
  376 00000236         ;   POP  {LR}
  377 00000236         ;   BX  LR
  378 00000236         



ARM Macro Assembler    Page 8 


  379 00000236         ;N6   PUSH  {LR} 
  380 00000236         ;   MOV  R5, #0X3C
  381 00000236         ;   BL  TRANSMIT
  382 00000236         ;   MOV  R5, #0X4A
  383 00000236         ;   BL  TRANSMIT
  384 00000236         ;   MOV  R5, #0X49
  385 00000236         ;   BL  TRANSMIT   
  386 00000236         ;   MOV  R5, #0X49
  387 00000236         ;   BL  TRANSMIT
  388 00000236         ;   MOV  R5, #0X30
  389 00000236         ;   BL  TRANSMIT   
  390 00000236         ;   POP  {LR}
  391 00000236         ;   BX  LR
  392 00000236         
  393 00000236         ;N7   PUSH  {LR} 
  394 00000236         ;   MOV  R5, #0X1
  395 00000236         ;   BL  TRANSMIT
  396 00000236         ;   MOV  R5, #0X71
  397 00000236         ;   BL  TRANSMIT
  398 00000236         ;   MOV  R5, #0X9
  399 00000236         ;   BL  TRANSMIT   
  400 00000236         ;   MOV  R5, #0X5
  401 00000236         ;   BL  TRANSMIT
  402 00000236         ;   MOV  R5, #0X3
  403 00000236         ;   BL  TRANSMIT   
  404 00000236         ;   POP  {LR}
  405 00000236         ;   BX  LR
  406 00000236         
  407 00000236         ;N8   PUSH  {LR} 
  408 00000236         ;   MOV  R5, #0X36
  409 00000236         ;   BL  TRANSMIT
  410 00000236         ;   MOV  R5, #0X49
  411 00000236         ;   BL  TRANSMIT
  412 00000236         ;   MOV  R5, #0X49
  413 00000236         ;   BL  TRANSMIT   
  414 00000236         ;   MOV  R5, #0X49
  415 00000236         ;   BL  TRANSMIT
  416 00000236         ;   MOV  R5, #0X36
  417 00000236         ;   BL  TRANSMIT   
  418 00000236         ;   POP  {LR}
  419 00000236         ;   BX  LR
  420 00000236         
  421 00000236         ;N9   PUSH  {LR} 
  422 00000236         ;   MOV  R5, #0X6
  423 00000236         ;   BL  TRANSMIT
  424 00000236         ;   MOV  R5, #0X49
  425 00000236         ;   BL  TRANSMIT
  426 00000236         ;   MOV  R5, #0X49
  427 00000236         ;   BL  TRANSMIT   
  428 00000236         ;   MOV  R5, #0X29
  429 00000236         ;   BL  TRANSMIT
  430 00000236         ;   MOV  R5, #0X1E
  431 00000236         ;   BL  TRANSMIT   
  432 00000236         ;   POP  {LR}
  433 00000236         ;   BX  LR
  434 00000236         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  435 00000236         ;;;;; NUMBERS 0-9 FINISH
  436 00000236         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
  437 00000236         



ARM Macro Assembler    Page 9 


  438 00000236         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  439 00000236         ;;;;; CHAR A-Z BEGINNING
  440 00000236         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  441 00000236         ;A   
  442 00000236         ;   PUSH  {LR}
  443 00000236         ;   MOV  R5, #0X7E
  444 00000236         ;   BL  TRANSMIT
  445 00000236         ;   MOV  R5, #0X11
  446 00000236         ;   BL  TRANSMIT
  447 00000236         ;   MOV  R5, #0X11
  448 00000236         ;   BL  TRANSMIT   
  449 00000236         ;   MOV  R5, #0X11
  450 00000236         ;   BL  TRANSMIT
  451 00000236         ;   MOV  R5, #0X7E
  452 00000236         ;   BL  TRANSMIT 
  453 00000236         ;   POP  {LR}
  454 00000236         ;   BX  LR
  455 00000236         ;B_   PUSH  {LR} 
  456 00000236         ;   
  457 00000236         ;   POP  {LR}
  458 00000236         ;   BX  LR   
  459 00000236         ;C   PUSH  {LR} 
  460 00000236         ;   
  461 00000236         ;   POP  {LR}
  462 00000236         ;   BX  LR
  463 00000236         ;D   PUSH  {LR} 
  464 00000236         ;   
  465 00000236         ;   POP  {LR}
  466 00000236         ;   BX  LR
  467 00000236         ;E   PUSH  {LR} 
  468 00000236         ;   
  469 00000236         ;   POP  {LR}
  470 00000236         ;   BX  LR   
  471 00000236         
  472 00000236         ;I   PUSH  {LR} 
  473 00000236         ;   MOV  R5, #0X00
  474 00000236         ;   BL  TRANSMIT
  475 00000236         ;   MOV  R5, #0X41
  476 00000236         ;   BL  TRANSMIT
  477 00000236         ;   MOV  R5, #0X7F
  478 00000236         ;   BL  TRANSMIT   
  479 00000236         ;   MOV  R5, #0X41
  480 00000236         ;   BL  TRANSMIT
  481 00000236         ;   MOV  R5, #0X00
  482 00000236         ;   BL  TRANSMIT
  483 00000236         ;   POP  {LR}
  484 00000236         ;   BX  LR
  485 00000236         ; 
  486 00000236         ;K   PUSH  {LR}
  487 00000236         ;   MOV  R5, #0X7F
  488 00000236         ;   BL  TRANSMIT
  489 00000236         ;   MOV  R5, #0X8
  490 00000236         ;   BL  TRANSMIT
  491 00000236         ;   MOV  R5, #0X14
  492 00000236         ;   BL  TRANSMIT
  493 00000236         ;   MOV  R5, #0X22
  494 00000236         ;   BL  TRANSMIT   
  495 00000236         ;   MOV  R5, #0X41
  496 00000236         ;   BL  TRANSMIT



ARM Macro Assembler    Page 10 


  497 00000236         ;   POP  {LR}
  498 00000236         ;   BX  LR 
  499 00000236         ;   
  500 00000236         ;L   PUSH  {LR}
  501 00000236         ;   MOV  R5, #0X7F
  502 00000236         ;   BL  TRANSMIT
  503 00000236         ;   MOV  R5, #0X40
  504 00000236         ;   BL  TRANSMIT
  505 00000236         ;   MOV  R5, #0X40
  506 00000236         ;   BL  TRANSMIT
  507 00000236         ;   MOV  R5, #0X40
  508 00000236         ;   BL  TRANSMIT   
  509 00000236         ;   MOV  R5, #0X40
  510 00000236         ;   BL  TRANSMIT   
  511 00000236         ;   POP  {LR}
  512 00000236         ;   BX  LR 
  513 00000236         
  514 00000236         
  515 00000236         
  516 00000236         ;M   PUSH  {LR}
  517 00000236         ;   MOV  R5, #0X7F
  518 00000236         ;   BL  TRANSMIT
  519 00000236         ;   MOV  R5, #0X02
  520 00000236         ;   BL  TRANSMIT
  521 00000236         ;   MOV  R5, #0XC
  522 00000236         ;   BL  TRANSMIT
  523 00000236         ;   MOV  R5, #0X2
  524 00000236         ;   BL  TRANSMIT   
  525 00000236         ;   MOV  R5, #0X7F
  526 00000236         ;   BL  TRANSMIT    
  527 00000236         ;   POP  {LR}
  528 00000236         ;   BX  LR
  529 00000236         
  530 00000236         ;N   PUSH  {LR}   
  531 00000236         ;   MOV  R5, #0X7F
  532 00000236         ;   BL  TRANSMIT
  533 00000236         ;   MOV  R5, #0X04
  534 00000236         ;   BL  TRANSMIT
  535 00000236         ;   MOV  R5, #0X8
  536 00000236         ;   BL  TRANSMIT
  537 00000236         ;   MOV  R5, #0X10
  538 00000236         ;   BL  TRANSMIT   
  539 00000236         ;   MOV  R5, #0X7F
  540 00000236         ;   BL  TRANSMIT   
  541 00000236         ;   POP  {LR}
  542 00000236         ;   BX  LR 
  543 00000236         
  544 00000236         ;S   PUSH  {LR}   
  545 00000236         ;   MOV  R5, #0X46
  546 00000236         ;   BL  TRANSMIT
  547 00000236         ;   MOV  R5, #0X49
  548 00000236         ;   BL  TRANSMIT
  549 00000236         ;   MOV  R5, #0X49
  550 00000236         ;   BL  TRANSMIT
  551 00000236         ;   MOV  R5, #0X49
  552 00000236         ;   BL  TRANSMIT   
  553 00000236         ;   MOV  R5, #0X31
  554 00000236         ;   BL  TRANSMIT   
  555 00000236         ;   POP  {LR}



ARM Macro Assembler    Page 11 


  556 00000236         ;   BX  LR  
  557 00000236         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  558 00000236         ;;;;; CHAR A-Z FINISH
  559 00000236         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  560 00000236 00 00           ALIGN
  561 00000238                 END
              400043FC 
              40038028 
              40038004 
              4003800C 
              40038088 
              400380A8 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\__main.d -o.\objects\__main.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\__main.lst __main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CLEAR 00000156

Symbol: CLEAR
   Definitions
      At line 194 in file __main.s
   Uses
      At line 33 in file __main.s
Comment: CLEAR used once
CLEARBOX1 00000176

Symbol: CLEARBOX1
   Definitions
      At line 209 in file __main.s
   Uses
      None
Comment: CLEARBOX1 unused
CLEARBOX2 000001B6

Symbol: CLEARBOX2
   Definitions
      At line 237 in file __main.s
   Uses
      None
Comment: CLEARBOX2 unused
CLEARBOX3 000001F6

Symbol: CLEARBOX3
   Definitions
      At line 265 in file __main.s
   Uses
      None
Comment: CLEARBOX3 unused
CURSOR 00000048

Symbol: CURSOR
   Definitions
      At line 76 in file __main.s
   Uses
      None
Comment: CURSOR unused
FIN 00000154

Symbol: FIN
   Definitions
      At line 187 in file __main.s
   Uses
      At line 188 in file __main.s
Comment: FIN used once
LOOP 00000160

Symbol: LOOP
   Definitions
      At line 197 in file __main.s
   Uses
      At line 201 in file __main.s
Comment: LOOP used once
LOOP_C 000001A0

Symbol: LOOP_C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 226 in file __main.s
   Uses
      At line 230 in file __main.s
Comment: LOOP_C used once
LOOP_C_2 000001E0

Symbol: LOOP_C_2
   Definitions
      At line 254 in file __main.s
   Uses
      At line 258 in file __main.s
Comment: LOOP_C_2 used once
LOOP_C_3 00000220

Symbol: LOOP_C_3
   Definitions
      At line 282 in file __main.s
   Uses
      At line 286 in file __main.s
Comment: LOOP_C_3 used once
__main 00000000

Symbol: __main
   Definitions
      At line 25 in file __main.s
   Uses
      At line 23 in file __main.s
Comment: __main used once
getsample 0000001E

Symbol: getsample
   Definitions
      At line 54 in file __main.s
   Uses
      At line 185 in file __main.s
Comment: getsample used once
loop 00000028

Symbol: loop
   Definitions
      At line 59 in file __main.s
   Uses
      At line 62 in file __main.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 9 in file __main.s
   Uses
      None
Comment: main unused
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 5 in file __main.s
   Uses
      At line 64 in file __main.s
Comment: ADC0_ISC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 4 in file __main.s
   Uses
      At line 54 in file __main.s
Comment: ADC0_PSSI used once
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 1 in file __main.s
   Uses
      At line 59 in file __main.s
Comment: ADC0_RIS used once
ADC0_SSFIFO2 40038088

Symbol: ADC0_SSFIFO2
   Definitions
      At line 2 in file __main.s
   Uses
      At line 69 in file __main.s
Comment: ADC0_SSFIFO2 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 3 in file __main.s
   Uses
      At line 73 in file __main.s
Comment: ADC0_SSFIFO3 used once
ADC0_SSFSTAT2 4003808C

Symbol: ADC0_SSFSTAT2
   Definitions
      At line 6 in file __main.s
   Uses
      None
Comment: ADC0_SSFSTAT2 unused
PORTA_DATA 400043FC

Symbol: PORTA_DATA
   Definitions
      At line 7 in file __main.s
   Uses
      At line 29 in file __main.s
      At line 86 in file __main.s
      At line 96 in file __main.s
      At line 124 in file __main.s
      At line 134 in file __main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 155 in file __main.s
      At line 165 in file __main.s
      At line 210 in file __main.s
      At line 220 in file __main.s
      At line 238 in file __main.s
      At line 248 in file __main.s
      At line 266 in file __main.s
      At line 276 in file __main.s

POSITION 20000400

Symbol: POSITION
   Definitions
      At line 8 in file __main.s
   Uses
      None
Comment: POSITION unused
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BATTLESHIP 00000000

Symbol: BATTLESHIP
   Definitions
      At line 17 in file __main.s
   Uses
      None
Comment: BATTLESHIP unused
BOUNDARY 00000000

Symbol: BOUNDARY
   Definitions
      At line 18 in file __main.s
   Uses
      At line 34 in file __main.s
Comment: BOUNDARY used once
CIVILIAN 00000000

Symbol: CIVILIAN
   Definitions
      At line 19 in file __main.s
   Uses
      None
Comment: CIVILIAN unused
DELAY 00000000

Symbol: DELAY
   Definitions
      At line 13 in file __main.s
   Uses
      None
Comment: DELAY unused
GPIOPortF_Handler 00000000

Symbol: GPIOPortF_Handler
   Definitions
      At line 21 in file __main.s
   Uses
      None
Comment: GPIOPortF_Handler unused
GPIO_INIT 00000000

Symbol: GPIO_INIT
   Definitions
      At line 22 in file __main.s
   Uses
      At line 28 in file __main.s
Comment: GPIO_INIT used once
Init 00000000

Symbol: Init
   Definitions
      At line 12 in file __main.s
   Uses
      At line 26 in file __main.s
Comment: Init used once
LCD_INIT 00000000

Symbol: LCD_INIT



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 11 in file __main.s
   Uses
      At line 27 in file __main.s
Comment: LCD_INIT used once
OutChar 00000000

Symbol: OutChar
   Definitions
      At line 14 in file __main.s
   Uses
      None
Comment: OutChar unused
TIMER_INIT 00000000

Symbol: TIMER_INIT
   Definitions
      At line 16 in file __main.s
   Uses
      None
Comment: TIMER_INIT unused
TRANSMIT 00000000

Symbol: TRANSMIT
   Definitions
      At line 15 in file __main.s
   Uses
      At line 92 in file __main.s
      At line 94 in file __main.s
      At line 113 in file __main.s
      At line 115 in file __main.s
      At line 117 in file __main.s
      At line 119 in file __main.s
      At line 121 in file __main.s
      At line 130 in file __main.s
      At line 132 in file __main.s
      At line 145 in file __main.s
      At line 147 in file __main.s
      At line 149 in file __main.s
      At line 151 in file __main.s
      At line 153 in file __main.s
      At line 161 in file __main.s
      At line 163 in file __main.s
      At line 176 in file __main.s
      At line 178 in file __main.s
      At line 180 in file __main.s
      At line 182 in file __main.s
      At line 184 in file __main.s
      At line 198 in file __main.s
      At line 216 in file __main.s
      At line 218 in file __main.s
      At line 227 in file __main.s
      At line 244 in file __main.s
      At line 246 in file __main.s
      At line 255 in file __main.s
      At line 272 in file __main.s
      At line 274 in file __main.s
      At line 283 in file __main.s




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

Timer0A_Handler 00000000

Symbol: Timer0A_Handler
   Definitions
      At line 20 in file __main.s
   Uses
      None
Comment: Timer0A_Handler unused
12 symbols
370 symbols in table
