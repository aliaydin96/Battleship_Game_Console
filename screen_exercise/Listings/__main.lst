


ARM Macro Assembler    Page 1 


    1 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
    2 00000000 40038088 
                       ADC0_SSFIFO2
                               EQU              0x40038088  ; Channel 2 results
                                                            
    3 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                             
    4 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
    5 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C  ; ISC
    6 00000000 4003808C 
                       ADC0_SSFSTAT2
                               EQU              0X4003808C
    7 00000000 400043FC 
                       PORTA_DATA
                               EQU              0x400043FC
    8 00000000 20000400 
                       POSITION
                               EQU              0X20000400
    9 00000000 20000419 
                       BATTLE_COUNTER
                               EQU              0X20000419
   10 00000000 2000041A 
                       CIV_COUNTER
                               EQU              0X2000041A
   11 00000000 2000041B 
                       SCREEN_COUNTER
                               EQU              0X2000041B
   12 00000000                 AREA             main, CODE, READONLY
   13 00000000                 THUMB
   14 00000000                 IMPORT           LCD_INIT
   15 00000000                 IMPORT           Init
   16 00000000                 IMPORT           DELAY
   17 00000000                 EXTERN           OutChar
   18 00000000                 EXTERN           TRANSMIT
   19 00000000                 EXTERN           TIMER_INIT
   20 00000000                 EXTERN           BATTLESHIP
   21 00000000                 EXTERN           BOUNDARY
   22 00000000                 EXTERN           CIVILIAN
   23 00000000                 EXTERN           Timer0A_Handler
   24 00000000                 EXTERN           GPIOPortF_Handler
   25 00000000                 EXTERN           GPIO_INIT
   26 00000000                 EXPORT           __main
   27 00000000         
   28 00000000         __main
   29 00000000 F7FF FFFE       BL               Init
   30 00000004 F7FF FFFE       BL               LCD_INIT
   31 00000008 F7FF FFFE       BL               GPIO_INIT
   32 0000000C 4974            LDR              R1,=PORTA_DATA
   33 0000000E 6808            LDR              R0,[R1]
   34 00000010 F040 0040       ORR              R0,#0x40
   35 00000014 6008            STR              R0,[R1]



ARM Macro Assembler    Page 2 


   36 00000016 F000 F8A8       BL               CLEAR
   37 0000001A F7FF FFFE       BL               BOUNDARY
   38 0000001E         ;   BL  TIMER_INIT
   39 0000001E         ;   MOV R7, #21  ;this counter for timer 
   40 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   41 0000001E         ;;;;; REGISTERS
   42 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   43 0000001E         ;;;;; R0  ==> GENERAL PURPOSES
   44 0000001E         ;;;;; R1  ==> GENERAL PURPOSES
   45 0000001E         ;;;;; R2  ==> CURSOR'S POSITION
   46 0000001E         ;;;;; R3  ==> X POSITION
   47 0000001E         ;;;;; R4  ==> CURSOR'S POSITION
   48 0000001E         ;;;;; R5  ==> DISPLAY REGISTER
   49 0000001E         ;;;;; R6  ==> Y POSITION
   50 0000001E         ;;;;; R7  ==> TIMER'S COUNTER
   51 0000001E         ;;;;; R8  ==> ADC RESULT 
   52 0000001E         ;;;;; R9  ==> ADC RESULT
   53 0000001E         ;;;;; R10 ==> FREE
   54 0000001E         ;;;;; R11 ==> FREE
   55 0000001E         ;;;;; R12 ==> FREE
   56 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   57 0000001E F04F 0A00       MOV              R10, #0
   58 00000022 4870            LDR              R0, =BATTLE_COUNTER
   59 00000024 F880 A000       STRB             R10, [R0]
   60 00000028 496F            LDR              R1, =CIV_COUNTER
   61 0000002A F881 A000       STRB             R10, [R1]
   62 0000002E 496F            LDR              R1, =SCREEN_COUNTER
   63 00000030 F881 A000       STRB             R10, [R1]
   64 00000034         
   65 00000034 496E    getsample
                               LDR              R1,=ADC0_PSSI 
                                                            ; request a sample
   66 00000036 6808            LDR              R0,[R1]     ;
   67 00000038 F040 000C       ORR              R0,R0,#0x0C ; get a sample
   68 0000003C 6008            STR              R0,[R1]     ;
   69 0000003E         
   70 0000003E 496D    loop    LDR              R1,=ADC0_RIS ; check for interr
                                                            up flag
   71 00000040 6808            LDR              R0,[R1]     ;
   72 00000042 F010 000C       ANDS             R0,#0x0C    ;
   73 00000046 D0FA            BEQ              loop
   74 00000048         
   75 00000048 496B            LDR              R1,=ADC0_ISC ; clear the interr
                                                            upt flag
   76 0000004A 6808            LDR              R0,[R1]     ;
   77 0000004C F040 000C       ORR              R0,#0x0C    ;
   78 00000050 6008            STR              R0,[R1]     ; Interrupt flag is
                                                             cleared
   79 00000052         
   80 00000052 4864            LDR              R0, =BATTLE_COUNTER
   81 00000054 7802            LDRB             R2, [R0]
   82 00000056 4964            LDR              R1, =CIV_COUNTER
   83 00000058 780C            LDRB             R4, [R1]
   84 0000005A F04F 0000       MOV              R0, #0
   85 0000005E EB02 0004       ADD              R0, R2, R4
   86 00000062 2804            CMP              R0, #4
   87 00000064 4961            LDR              R1, =SCREEN_COUNTER
   88 00000066 780C            LDRB             R4, [R1]
   89 00000068 BF08 3401       ADDEQ            R4, #1



ARM Macro Assembler    Page 3 


   90 0000006C 700C            STRB             R4, [R1]
   91 0000006E 2C00            CMP              R4, #0
   92 00000070 D053            BEQ              DISPLAY_SHIP
   93 00000072 2C01            CMP              R4, #1
   94 00000074 BF08 F000 
              F888             BLEQ             CLEARBOX
   95 0000007A         
   96 0000007A         CURSOR
   97 0000007A 4960            LDR              R1,=ADC0_SSFIFO2 ;
   98 0000007C F8D1 8000       LDR              R8,[R1]     ; R8 is the data PE
                                                            3
   99 00000080 F04F 00AE       MOV              R0,#174     ; get the first dig
                                                            it
  100 00000084 FBB8 F8F0       UDIV             R8,R8,R0    ;   
  101 00000088 495D            LDR              R1, =ADC0_SSFIFO3
  102 0000008A F8D1 9000       LDR              R9,[R1]
  103 0000008E F04F 004B       MOV              R0,#75      ; get the first dig
                                                            it
  104 00000092 FBB9 F3F0       UDIV             R3,R9,R0    ;
  105 00000096 F103 0384       ADD              R3, #0X84
  106 0000009A F04F 0641       MOV              R6, #0X41
  107 0000009E F1B8 0801       SUBS             R8, #1
  108 000000A2 BF0B 2201       MOVEQ            R2, #0X1
  109 000000A6 2202            MOVNE            R2, #0X2
  110 000000A8 2403            MOVEQ            R4, #0X3
  111 000000AA 2407            MOVNE            R4, #0X7
  112 000000AC         
  113 000000AC         LOP
  114 000000AC 494C            LDR              R1,=PORTA_DATA
  115 000000AE 6808            LDR              R0,[R1]
  116 000000B0 F020 0040       BIC              R0,#0x40
  117 000000B4 6008            STR              R0,[R1]
  118 000000B6         
  119 000000B6 461D            MOV              R5, R3
  120 000000B8 F7FF FFFE       BL               TRANSMIT
  121 000000BC 4635            MOV              R5, R6
  122 000000BE F7FF FFFE       BL               TRANSMIT
  123 000000C2         
  124 000000C2 4947            LDR              R1,=PORTA_DATA
  125 000000C4 6808            LDR              R0,[R1]
  126 000000C6 F040 0040       ORR              R0,#0x40
  127 000000CA 6008            STR              R0,[R1]
  128 000000CC 2E41            CMP              R6, #0X41
  129 000000CE BF04 FA02 
              F208             LSLEQ            R2, R8
  130 000000D4 FA04 F408       LSLEQ            R4, R8
  131 000000D8 D007            BEQ              WORK
  132 000000DA 2E42            CMP              R6, #0X42
  133 000000DC BF04 BA52       REV16EQ          R2, R2
  134 000000E0 BA64            REV16EQ          R4, R4
  135 000000E2 2E43            CMP              R6, #0X43
  136 000000E4 BF04 BA12       REVEQ            R2, R2
  137 000000E8 BA24            REVEQ            R4, R4
  138 000000EA         WORK
  139 000000EA 2B85            CMP              R3, #0X85
  140 000000EC BF0C 25FF       MOVEQ            R5, #0XFF
  141 000000F0 2500            MOVNE            R5, #0X0
  142 000000F2 F7FF FFFE       BL               TRANSMIT
  143 000000F6 4615            MOV              R5, R2      ;NE



ARM Macro Assembler    Page 4 


  144 000000F8 F7FF FFFE       BL               TRANSMIT
  145 000000FC 4625            MOV              R5, R4
  146 000000FE F7FF FFFE       BL               TRANSMIT
  147 00000102 4615            MOV              R5, R2
  148 00000104 F7FF FFFE       BL               TRANSMIT
  149 00000108 F04F 0500       MOV              R5, #0X0
  150 0000010C F7FF FFFE       BL               TRANSMIT
  151 00000110 F106 0601       ADD              R6, #1
  152 00000114 2E44            CMP              R6, #0X44
  153 00000116 D1C9            BNE              LOP
  154 00000118 E78C            B                getsample   ;      
  155 0000011A         
  156 0000011A         DISPLAY_SHIP
  157 0000011A         
  158 0000011A 4933            LDR              R1, =CIV_COUNTER
  159 0000011C 780C            LDRB             R4, [R1]
  160 0000011E 2C00            CMP              R4, #0
  161 00000120 D90C            BLS              BATTLE
  162 00000122 4938            LDR              R1, =POSITION
  163 00000124 F7FF FFFE       BL               CIVILIAN
  164 00000128 2C01            CMP              R4, #1
  165 0000012A D907            BLS              BATTLE
  166 0000012C 4936            LDR              R1, =(POSITION + 3)
  167 0000012E F7FF FFFE       BL               CIVILIAN
  168 00000132 2C02            CMP              R4, #2
  169 00000134 D902            BLS              BATTLE
  170 00000136 4935            LDR              R1, =(POSITION + 6)
  171 00000138 F7FF FFFE       BL               CIVILIAN
  172 0000013C         
  173 0000013C         BATTLE
  174 0000013C 4829            LDR              R0, =BATTLE_COUNTER
  175 0000013E 7802            LDRB             R2, [R0]
  176 00000140 2A00            CMP              R2, #0
  177 00000142 D99A            BLS              CURSOR
  178 00000144 4932            LDR              R1, =(POSITION + 13)
  179 00000146 F7FF FFFE       BL               BATTLESHIP
  180 0000014A 2A01            CMP              R2, #1
  181 0000014C D995            BLS              CURSOR
  182 0000014E 4931            LDR              R1, =(POSITION + 16)
  183 00000150 F7FF FFFE       BL               BATTLESHIP
  184 00000154 2A02            CMP              R2, #2
  185 00000156 D990            BLS              CURSOR
  186 00000158 492F            LDR              R1, =(POSITION + 19)
  187 0000015A F7FF FFFE       BL               BATTLESHIP
  188 0000015E 2A03            CMP              R2, #3
  189 00000160 D98B            BLS              CURSOR
  190 00000162 492E            LDR              R1, =(POSITION + 22)
  191 00000164 F7FF FFFE       BL               BATTLESHIP
  192 00000168 E787            B                CURSOR
  193 0000016A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  194 0000016A         ;;;;;; CLEAR WHOLE SCREEN
  195 0000016A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  196 0000016A B503    CLEAR   PUSH             {R0,R1,LR}
  197 0000016C F04F 0000       MOV              R0,#0
  198 00000170 F240 11F7       MOV              R1, #503
  199 00000174 F04F 0500 
                       LOOP    MOV              R5, #0X0
  200 00000178 F7FF FFFE       BL               TRANSMIT
  201 0000017C F100 0001       ADD              R0, #1



ARM Macro Assembler    Page 5 


  202 00000180 4288            CMP              R0,R1
  203 00000182 D1F7            BNE              LOOP
  204 00000184 E8BD 4003       POP              {R0,R1,LR}
  205 00000188 4770            BX               LR
  206 0000018A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  207 0000018A         
  208 0000018A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  209 0000018A         ;;;;;; CLEAR Y = 1-2-3-4 ROWS
  210 0000018A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  211 0000018A B507    CLEARBOX
                               PUSH{R0,         R1, R2, LR}
  212 0000018C F04F 0641       MOV              R6, #0X41
  213 00000190         LOOP_CL
  214 00000190 4913            LDR              R1,=PORTA_DATA
  215 00000192 6808            LDR              R0,[R1]
  216 00000194 F020 0040       BIC              R0,#0x40
  217 00000198 6008            STR              R0,[R1]
  218 0000019A         
  219 0000019A F04F 0586       MOV              R5, #0X86
  220 0000019E F7FF FFFE       BL               TRANSMIT
  221 000001A2 4635            MOV              R5, R6
  222 000001A4 F7FF FFFE       BL               TRANSMIT
  223 000001A8         
  224 000001A8 490D            LDR              R1,=PORTA_DATA
  225 000001AA 6808            LDR              R0,[R1]
  226 000001AC F040 0040       ORR              R0,#0x40
  227 000001B0 6008            STR              R0,[R1]
  228 000001B2         
  229 000001B2 F04F 0286       MOV              R2, #0X86
  230 000001B6 F04F 0500 
                       LOOP_C  MOV              R5, #0X0
  231 000001BA F7FF FFFE       BL               TRANSMIT
  232 000001BE F102 0201       ADD              R2, #1
  233 000001C2 2AC5            CMP              R2, #0XC5
  234 000001C4 D1F7            BNE              LOOP_C
  235 000001C6 F106 0601       ADD              R6, #1
  236 000001CA 2E45            CMP              R6, #0X45
  237 000001CC D1E0            BNE              LOOP_CL
  238 000001CE         
  239 000001CE 4907            LDR              R1, =SCREEN_COUNTER
  240 000001D0 780C            LDRB             R4, [R1]
  241 000001D2 F104 0401       ADD              R4, #1
  242 000001D6 700C            STRB             R4, [R1]
  243 000001D8 E8BD 4007       POP{R0,          R1, R2, LR}
  244 000001DC 4770            BX               LR
  245 000001DE         
  246 000001DE         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  247 000001DE         ;;;;; NUMBERS 0-9 BEGINNING
  248 000001DE         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  249 000001DE         ;N0   PUSH  {LR} 
  250 000001DE         ;   MOV  R5, #0X3E
  251 000001DE         ;   BL  TRANSMIT
  252 000001DE         ;   MOV  R5, #0X51
  253 000001DE         ;   BL  TRANSMIT
  254 000001DE         ;   MOV  R5, #0X49
  255 000001DE         ;   BL  TRANSMIT   
  256 000001DE         ;   MOV  R5, #0X45
  257 000001DE         ;   BL  TRANSMIT
  258 000001DE         ;   MOV  R5, #0X3E



ARM Macro Assembler    Page 6 


  259 000001DE         ;   BL  TRANSMIT   
  260 000001DE         ;   POP  {LR}
  261 000001DE         ;   BX  LR
  262 000001DE         
  263 000001DE         ;N1   PUSH  {LR} 
  264 000001DE         ;   MOV  R5, #0X0
  265 000001DE         ;   BL  TRANSMIT
  266 000001DE         ;   MOV  R5, #0X42
  267 000001DE         ;   BL  TRANSMIT
  268 000001DE         ;   MOV  R5, #0X7F
  269 000001DE         ;   BL  TRANSMIT   
  270 000001DE         ;   MOV  R5, #0X40
  271 000001DE         ;   BL  TRANSMIT
  272 000001DE         ;   MOV  R5, #0X0
  273 000001DE         ;   BL  TRANSMIT   
  274 000001DE         ;   POP  {LR}
  275 000001DE         ;   BX  LR
  276 000001DE         
  277 000001DE         ;N2   PUSH  {LR} 
  278 000001DE         ;   MOV  R5, #0X42
  279 000001DE         ;   BL  TRANSMIT
  280 000001DE         ;   MOV  R5, #0X61
  281 000001DE         ;   BL  TRANSMIT
  282 000001DE         ;   MOV  R5, #0X51
  283 000001DE         ;   BL  TRANSMIT   
  284 000001DE         ;   MOV  R5, #0X49
  285 000001DE         ;   BL  TRANSMIT
  286 000001DE         ;   MOV  R5, #0X46
  287 000001DE         ;   BL  TRANSMIT   
  288 000001DE         ;   POP  {LR}
  289 000001DE         ;   BX  LR
  290 000001DE         ; 
  291 000001DE         ;N3   PUSH  {LR} 
  292 000001DE         ;   MOV  R5, #0X21
  293 000001DE         ;   BL  TRANSMIT
  294 000001DE         ;   MOV  R5, #0X41
  295 000001DE         ;   BL  TRANSMIT
  296 000001DE         ;   MOV  R5, #0X45
  297 000001DE         ;   BL  TRANSMIT   
  298 000001DE         ;   MOV  R5, #0X4B
  299 000001DE         ;   BL  TRANSMIT
  300 000001DE         ;   MOV  R5, #0X31
  301 000001DE         ;   BL  TRANSMIT   
  302 000001DE         ;   POP  {LR}
  303 000001DE         ;   BX  LR
  304 000001DE         
  305 000001DE         ;N4   PUSH  {LR} 
  306 000001DE         ;   MOV  R5, #0X18
  307 000001DE         ;   BL  TRANSMIT
  308 000001DE         ;   MOV  R5, #0X14
  309 000001DE         ;   BL  TRANSMIT
  310 000001DE         ;   MOV  R5, #0X12
  311 000001DE         ;   BL  TRANSMIT   
  312 000001DE         ;   MOV  R5, #0X7F
  313 000001DE         ;   BL  TRANSMIT
  314 000001DE         ;   MOV  R5, #0X10
  315 000001DE         ;   BL  TRANSMIT   
  316 000001DE         ;   POP  {LR}
  317 000001DE         ;   BX  LR



ARM Macro Assembler    Page 7 


  318 000001DE         
  319 000001DE         ;N5   PUSH  {LR} 
  320 000001DE         ;   MOV  R5, #0X27
  321 000001DE         ;   BL  TRANSMIT
  322 000001DE         ;   MOV  R5, #0X45
  323 000001DE         ;   BL  TRANSMIT
  324 000001DE         ;   MOV  R5, #0X45
  325 000001DE         ;   BL  TRANSMIT   
  326 000001DE         ;   MOV  R5, #0X45
  327 000001DE         ;   BL  TRANSMIT
  328 000001DE         ;   MOV  R5, #0X39
  329 000001DE         ;   BL  TRANSMIT   
  330 000001DE         ;   POP  {LR}
  331 000001DE         ;   BX  LR
  332 000001DE         
  333 000001DE         ;N6   PUSH  {LR} 
  334 000001DE         ;   MOV  R5, #0X3C
  335 000001DE         ;   BL  TRANSMIT
  336 000001DE         ;   MOV  R5, #0X4A
  337 000001DE         ;   BL  TRANSMIT
  338 000001DE         ;   MOV  R5, #0X49
  339 000001DE         ;   BL  TRANSMIT   
  340 000001DE         ;   MOV  R5, #0X49
  341 000001DE         ;   BL  TRANSMIT
  342 000001DE         ;   MOV  R5, #0X30
  343 000001DE         ;   BL  TRANSMIT   
  344 000001DE         ;   POP  {LR}
  345 000001DE         ;   BX  LR
  346 000001DE         
  347 000001DE         ;N7   PUSH  {LR} 
  348 000001DE         ;   MOV  R5, #0X1
  349 000001DE         ;   BL  TRANSMIT
  350 000001DE         ;   MOV  R5, #0X71
  351 000001DE         ;   BL  TRANSMIT
  352 000001DE         ;   MOV  R5, #0X9
  353 000001DE         ;   BL  TRANSMIT   
  354 000001DE         ;   MOV  R5, #0X5
  355 000001DE         ;   BL  TRANSMIT
  356 000001DE         ;   MOV  R5, #0X3
  357 000001DE         ;   BL  TRANSMIT   
  358 000001DE         ;   POP  {LR}
  359 000001DE         ;   BX  LR
  360 000001DE         
  361 000001DE         ;N8   PUSH  {LR} 
  362 000001DE         ;   MOV  R5, #0X36
  363 000001DE         ;   BL  TRANSMIT
  364 000001DE         ;   MOV  R5, #0X49
  365 000001DE         ;   BL  TRANSMIT
  366 000001DE         ;   MOV  R5, #0X49
  367 000001DE         ;   BL  TRANSMIT   
  368 000001DE         ;   MOV  R5, #0X49
  369 000001DE         ;   BL  TRANSMIT
  370 000001DE         ;   MOV  R5, #0X36
  371 000001DE         ;   BL  TRANSMIT   
  372 000001DE         ;   POP  {LR}
  373 000001DE         ;   BX  LR
  374 000001DE         
  375 000001DE         ;N9   PUSH  {LR} 
  376 000001DE         ;   MOV  R5, #0X6



ARM Macro Assembler    Page 8 


  377 000001DE         ;   BL  TRANSMIT
  378 000001DE         ;   MOV  R5, #0X49
  379 000001DE         ;   BL  TRANSMIT
  380 000001DE         ;   MOV  R5, #0X49
  381 000001DE         ;   BL  TRANSMIT   
  382 000001DE         ;   MOV  R5, #0X29
  383 000001DE         ;   BL  TRANSMIT
  384 000001DE         ;   MOV  R5, #0X1E
  385 000001DE         ;   BL  TRANSMIT   
  386 000001DE         ;   POP  {LR}
  387 000001DE         ;   BX  LR
  388 000001DE         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  389 000001DE         ;;;;; NUMBERS 0-9 FINISH
  390 000001DE         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
  391 000001DE         
  392 000001DE         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  393 000001DE         ;;;;; CHAR A-Z BEGINNING
  394 000001DE         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  395 000001DE         ;A   
  396 000001DE         ;   PUSH  {LR}
  397 000001DE         ;   MOV  R5, #0X7E
  398 000001DE         ;   BL  TRANSMIT
  399 000001DE         ;   MOV  R5, #0X11
  400 000001DE         ;   BL  TRANSMIT
  401 000001DE         ;   MOV  R5, #0X11
  402 000001DE         ;   BL  TRANSMIT   
  403 000001DE         ;   MOV  R5, #0X11
  404 000001DE         ;   BL  TRANSMIT
  405 000001DE         ;   MOV  R5, #0X7E
  406 000001DE         ;   BL  TRANSMIT 
  407 000001DE         ;   POP  {LR}
  408 000001DE         ;   BX  LR
  409 000001DE         ;B_   PUSH  {LR} 
  410 000001DE         ;   
  411 000001DE         ;   POP  {LR}
  412 000001DE         ;   BX  LR   
  413 000001DE         ;C   PUSH  {LR} 
  414 000001DE         ;   
  415 000001DE         ;   POP  {LR}
  416 000001DE         ;   BX  LR
  417 000001DE         ;D   PUSH  {LR} 
  418 000001DE         ;   
  419 000001DE         ;   POP  {LR}
  420 000001DE         ;   BX  LR
  421 000001DE         ;E   PUSH  {LR} 
  422 000001DE         ;   
  423 000001DE         ;   POP  {LR}
  424 000001DE         ;   BX  LR   
  425 000001DE         
  426 000001DE         ;I   PUSH  {LR} 
  427 000001DE         ;   MOV  R5, #0X00
  428 000001DE         ;   BL  TRANSMIT
  429 000001DE         ;   MOV  R5, #0X41
  430 000001DE         ;   BL  TRANSMIT
  431 000001DE         ;   MOV  R5, #0X7F
  432 000001DE         ;   BL  TRANSMIT   
  433 000001DE         ;   MOV  R5, #0X41
  434 000001DE         ;   BL  TRANSMIT
  435 000001DE         ;   MOV  R5, #0X00



ARM Macro Assembler    Page 9 


  436 000001DE         ;   BL  TRANSMIT
  437 000001DE         ;   POP  {LR}
  438 000001DE         ;   BX  LR
  439 000001DE         ; 
  440 000001DE         ;K   PUSH  {LR}
  441 000001DE         ;   MOV  R5, #0X7F
  442 000001DE         ;   BL  TRANSMIT
  443 000001DE         ;   MOV  R5, #0X8
  444 000001DE         ;   BL  TRANSMIT
  445 000001DE         ;   MOV  R5, #0X14
  446 000001DE         ;   BL  TRANSMIT
  447 000001DE         ;   MOV  R5, #0X22
  448 000001DE         ;   BL  TRANSMIT   
  449 000001DE         ;   MOV  R5, #0X41
  450 000001DE         ;   BL  TRANSMIT
  451 000001DE         ;   POP  {LR}
  452 000001DE         ;   BX  LR 
  453 000001DE         ;   
  454 000001DE         ;L   PUSH  {LR}
  455 000001DE         ;   MOV  R5, #0X7F
  456 000001DE         ;   BL  TRANSMIT
  457 000001DE         ;   MOV  R5, #0X40
  458 000001DE         ;   BL  TRANSMIT
  459 000001DE         ;   MOV  R5, #0X40
  460 000001DE         ;   BL  TRANSMIT
  461 000001DE         ;   MOV  R5, #0X40
  462 000001DE         ;   BL  TRANSMIT   
  463 000001DE         ;   MOV  R5, #0X40
  464 000001DE         ;   BL  TRANSMIT   
  465 000001DE         ;   POP  {LR}
  466 000001DE         ;   BX  LR 
  467 000001DE         
  468 000001DE         
  469 000001DE         
  470 000001DE         ;M   PUSH  {LR}
  471 000001DE         ;   MOV  R5, #0X7F
  472 000001DE         ;   BL  TRANSMIT
  473 000001DE         ;   MOV  R5, #0X02
  474 000001DE         ;   BL  TRANSMIT
  475 000001DE         ;   MOV  R5, #0XC
  476 000001DE         ;   BL  TRANSMIT
  477 000001DE         ;   MOV  R5, #0X2
  478 000001DE         ;   BL  TRANSMIT   
  479 000001DE         ;   MOV  R5, #0X7F
  480 000001DE         ;   BL  TRANSMIT    
  481 000001DE         ;   POP  {LR}
  482 000001DE         ;   BX  LR
  483 000001DE         
  484 000001DE         ;N   PUSH  {LR}   
  485 000001DE         ;   MOV  R5, #0X7F
  486 000001DE         ;   BL  TRANSMIT
  487 000001DE         ;   MOV  R5, #0X04
  488 000001DE         ;   BL  TRANSMIT
  489 000001DE         ;   MOV  R5, #0X8
  490 000001DE         ;   BL  TRANSMIT
  491 000001DE         ;   MOV  R5, #0X10
  492 000001DE         ;   BL  TRANSMIT   
  493 000001DE         ;   MOV  R5, #0X7F
  494 000001DE         ;   BL  TRANSMIT   



ARM Macro Assembler    Page 10 


  495 000001DE         ;   POP  {LR}
  496 000001DE         ;   BX  LR 
  497 000001DE         
  498 000001DE         ;S   PUSH  {LR}   
  499 000001DE         ;   MOV  R5, #0X46
  500 000001DE         ;   BL  TRANSMIT
  501 000001DE         ;   MOV  R5, #0X49
  502 000001DE         ;   BL  TRANSMIT
  503 000001DE         ;   MOV  R5, #0X49
  504 000001DE         ;   BL  TRANSMIT
  505 000001DE         ;   MOV  R5, #0X49
  506 000001DE         ;   BL  TRANSMIT   
  507 000001DE         ;   MOV  R5, #0X31
  508 000001DE         ;   BL  TRANSMIT   
  509 000001DE         ;   POP  {LR}
  510 000001DE         ;   BX  LR  
  511 000001DE         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  512 000001DE         ;;;;; CHAR A-Z FINISH
  513 000001DE         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  514 000001DE 00 00           ALIGN
  515 000001E0                 END
              400043FC 
              20000419 
              2000041A 
              2000041B 
              40038028 
              40038004 
              4003800C 
              40038088 
              400380A8 
              20000400 
              20000403 
              20000406 
              2000040D 
              20000410 
              20000413 
              20000416 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\__main.d -o.\objects\__main.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\__main.lst __main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BATTLE 0000013C

Symbol: BATTLE
   Definitions
      At line 173 in file __main.s
   Uses
      At line 161 in file __main.s
      At line 165 in file __main.s
      At line 169 in file __main.s

CLEAR 0000016A

Symbol: CLEAR
   Definitions
      At line 196 in file __main.s
   Uses
      At line 36 in file __main.s
Comment: CLEAR used once
CLEARBOX 0000018A

Symbol: CLEARBOX
   Definitions
      At line 211 in file __main.s
   Uses
      At line 94 in file __main.s
Comment: CLEARBOX used once
CURSOR 0000007A

Symbol: CURSOR
   Definitions
      At line 96 in file __main.s
   Uses
      At line 177 in file __main.s
      At line 181 in file __main.s
      At line 185 in file __main.s
      At line 189 in file __main.s
      At line 192 in file __main.s

DISPLAY_SHIP 0000011A

Symbol: DISPLAY_SHIP
   Definitions
      At line 156 in file __main.s
   Uses
      At line 92 in file __main.s
Comment: DISPLAY_SHIP used once
LOOP 00000174

Symbol: LOOP
   Definitions
      At line 199 in file __main.s
   Uses
      At line 203 in file __main.s
Comment: LOOP used once
LOOP_C 000001B6

Symbol: LOOP_C
   Definitions
      At line 230 in file __main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 234 in file __main.s
Comment: LOOP_C used once
LOOP_CL 00000190

Symbol: LOOP_CL
   Definitions
      At line 213 in file __main.s
   Uses
      At line 237 in file __main.s
Comment: LOOP_CL used once
LOP 000000AC

Symbol: LOP
   Definitions
      At line 113 in file __main.s
   Uses
      At line 153 in file __main.s
Comment: LOP used once
WORK 000000EA

Symbol: WORK
   Definitions
      At line 138 in file __main.s
   Uses
      At line 131 in file __main.s
Comment: WORK used once
__main 00000000

Symbol: __main
   Definitions
      At line 28 in file __main.s
   Uses
      At line 26 in file __main.s
Comment: __main used once
getsample 00000034

Symbol: getsample
   Definitions
      At line 65 in file __main.s
   Uses
      At line 154 in file __main.s
Comment: getsample used once
loop 0000003E

Symbol: loop
   Definitions
      At line 70 in file __main.s
   Uses
      At line 73 in file __main.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 12 in file __main.s
   Uses
      None
Comment: main unused



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 5 in file __main.s
   Uses
      At line 75 in file __main.s
Comment: ADC0_ISC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 4 in file __main.s
   Uses
      At line 65 in file __main.s
Comment: ADC0_PSSI used once
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 1 in file __main.s
   Uses
      At line 70 in file __main.s
Comment: ADC0_RIS used once
ADC0_SSFIFO2 40038088

Symbol: ADC0_SSFIFO2
   Definitions
      At line 2 in file __main.s
   Uses
      At line 97 in file __main.s
Comment: ADC0_SSFIFO2 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 3 in file __main.s
   Uses
      At line 101 in file __main.s
Comment: ADC0_SSFIFO3 used once
ADC0_SSFSTAT2 4003808C

Symbol: ADC0_SSFSTAT2
   Definitions
      At line 6 in file __main.s
   Uses
      None
Comment: ADC0_SSFSTAT2 unused
BATTLE_COUNTER 20000419

Symbol: BATTLE_COUNTER
   Definitions
      At line 9 in file __main.s
   Uses
      At line 58 in file __main.s
      At line 80 in file __main.s
      At line 174 in file __main.s

CIV_COUNTER 2000041A



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: CIV_COUNTER
   Definitions
      At line 10 in file __main.s
   Uses
      At line 60 in file __main.s
      At line 82 in file __main.s
      At line 158 in file __main.s

PORTA_DATA 400043FC

Symbol: PORTA_DATA
   Definitions
      At line 7 in file __main.s
   Uses
      At line 32 in file __main.s
      At line 114 in file __main.s
      At line 124 in file __main.s
      At line 214 in file __main.s
      At line 224 in file __main.s

POSITION 20000400

Symbol: POSITION
   Definitions
      At line 8 in file __main.s
   Uses
      At line 162 in file __main.s
      At line 166 in file __main.s
      At line 170 in file __main.s
      At line 178 in file __main.s
      At line 182 in file __main.s
      At line 186 in file __main.s
      At line 190 in file __main.s

SCREEN_COUNTER 2000041B

Symbol: SCREEN_COUNTER
   Definitions
      At line 11 in file __main.s
   Uses
      At line 62 in file __main.s
      At line 87 in file __main.s
      At line 239 in file __main.s

11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BATTLESHIP 00000000

Symbol: BATTLESHIP
   Definitions
      At line 20 in file __main.s
   Uses
      At line 179 in file __main.s
      At line 183 in file __main.s
      At line 187 in file __main.s
      At line 191 in file __main.s

BOUNDARY 00000000

Symbol: BOUNDARY
   Definitions
      At line 21 in file __main.s
   Uses
      At line 37 in file __main.s
Comment: BOUNDARY used once
CIVILIAN 00000000

Symbol: CIVILIAN
   Definitions
      At line 22 in file __main.s
   Uses
      At line 163 in file __main.s
      At line 167 in file __main.s
      At line 171 in file __main.s

DELAY 00000000

Symbol: DELAY
   Definitions
      At line 16 in file __main.s
   Uses
      None
Comment: DELAY unused
GPIOPortF_Handler 00000000

Symbol: GPIOPortF_Handler
   Definitions
      At line 24 in file __main.s
   Uses
      None
Comment: GPIOPortF_Handler unused
GPIO_INIT 00000000

Symbol: GPIO_INIT
   Definitions
      At line 25 in file __main.s
   Uses
      At line 31 in file __main.s
Comment: GPIO_INIT used once
Init 00000000

Symbol: Init
   Definitions
      At line 15 in file __main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 29 in file __main.s
Comment: Init used once
LCD_INIT 00000000

Symbol: LCD_INIT
   Definitions
      At line 14 in file __main.s
   Uses
      At line 30 in file __main.s
Comment: LCD_INIT used once
OutChar 00000000

Symbol: OutChar
   Definitions
      At line 17 in file __main.s
   Uses
      None
Comment: OutChar unused
TIMER_INIT 00000000

Symbol: TIMER_INIT
   Definitions
      At line 19 in file __main.s
   Uses
      None
Comment: TIMER_INIT unused
TRANSMIT 00000000

Symbol: TRANSMIT
   Definitions
      At line 18 in file __main.s
   Uses
      At line 120 in file __main.s
      At line 122 in file __main.s
      At line 142 in file __main.s
      At line 144 in file __main.s
      At line 146 in file __main.s
      At line 148 in file __main.s
      At line 150 in file __main.s
      At line 200 in file __main.s
      At line 220 in file __main.s
      At line 222 in file __main.s
      At line 231 in file __main.s

Timer0A_Handler 00000000

Symbol: Timer0A_Handler
   Definitions
      At line 23 in file __main.s
   Uses
      None
Comment: Timer0A_Handler unused
12 symbols
373 symbols in table
