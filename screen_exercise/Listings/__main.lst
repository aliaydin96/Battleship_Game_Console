


ARM Macro Assembler    Page 1 


    1 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
    2 00000000 40038088 
                       ADC0_SSFIFO2
                               EQU              0x40038088  ; Channel 2 results
                                                            
    3 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                             
    4 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
    5 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C  ; ISC
    6 00000000 4003808C 
                       ADC0_SSFSTAT2
                               EQU              0X4003808C
    7 00000000 400043FC 
                       PORTA_DATA
                               EQU              0x400043FC
    8 00000000 20000400 
                       POSITION
                               EQU              0X20000400
    9 00000000 2000040F 
                       BATTLE_COUNTER
                               EQU              0X2000040F
   10 00000000 20000410 
                       CIV_COUNTER
                               EQU              0X20000410
   11 00000000 20000411 
                       SCREEN_COUNTER
                               EQU              0X20000411
   12 00000000                 AREA             main, CODE, READONLY
   13 00000000                 THUMB
   14 00000000                 IMPORT           LCD_INIT
   15 00000000                 IMPORT           Init
   16 00000000                 IMPORT           DELAY
   17 00000000                 EXTERN           OutChar
   18 00000000                 EXTERN           TRANSMIT
   19 00000000                 EXTERN           TIMER_INIT
   20 00000000                 EXTERN           BATTLESHIP
   21 00000000                 EXTERN           BOUNDARY
   22 00000000                 EXTERN           CIVILIAN
   23 00000000                 EXTERN           Timer0A_Handler
   24 00000000                 EXTERN           GPIOPortF_Handler
   25 00000000                 EXTERN           GPIO_INIT
   26 00000000                 EXPORT           __main
   27 00000000         
   28 00000000         __main
   29 00000000 F7FF FFFE       BL               Init
   30 00000004 F7FF FFFE       BL               LCD_INIT
   31 00000008 F7FF FFFE       BL               GPIO_INIT
   32 0000000C 4980            LDR              R1,=PORTA_DATA
   33 0000000E 6808            LDR              R0,[R1]
   34 00000010 F040 0040       ORR              R0,#0x40
   35 00000014 6008            STR              R0,[R1]



ARM Macro Assembler    Page 2 


   36 00000016 F000 F8AE       BL               CLEAR
   37 0000001A F7FF FFFE       BL               BOUNDARY
   38 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   39 0000001E         ;;;;; REGISTERS
   40 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   41 0000001E         ;;;;; R0  ==> GENERAL PURPOSES
   42 0000001E         ;;;;; R1  ==> GENERAL PURPOSES
   43 0000001E         ;;;;; R2  ==> CURSOR'S POSITION
   44 0000001E         ;;;;; R3  ==> X POSITION
   45 0000001E         ;;;;; R4  ==> CURSOR'S POSITION
   46 0000001E         ;;;;; R5  ==> DISPLAY REGISTER
   47 0000001E         ;;;;; R6  ==> Y POSITION
   48 0000001E         ;;;;; R7  ==> TIMER'S COUNTER
   49 0000001E         ;;;;; R8  ==> ADC RESULT 
   50 0000001E         ;;;;; R9  ==> ADC RESULT
   51 0000001E         ;;;;; R10 ==> FREE
   52 0000001E         ;;;;; R11 ==> FREE
   53 0000001E         ;;;;; R12 ==> FREE
   54 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   55 0000001E F04F 0A00       MOV              R10, #0
   56 00000022 487C            LDR              R0, =BATTLE_COUNTER
   57 00000024 F880 A000       STRB             R10, [R0]
   58 00000028 497B            LDR              R1, =CIV_COUNTER
   59 0000002A F881 A000       STRB             R10, [R1]
   60 0000002E 497B            LDR              R1, =SCREEN_COUNTER
   61 00000030 F881 A000       STRB             R10, [R1]
   62 00000034         
   63 00000034 497A    getsample
                               LDR              R1,=ADC0_PSSI 
                                                            ; request a sample
   64 00000036 6808            LDR              R0,[R1]     ;
   65 00000038 F040 000C       ORR              R0,R0,#0x0C ; get a sample
   66 0000003C 6008            STR              R0,[R1]     ;
   67 0000003E         
   68 0000003E 4979    loop    LDR              R1,=ADC0_RIS ; check for interr
                                                            up flag
   69 00000040 6808            LDR              R0,[R1]     ;
   70 00000042 F010 000C       ANDS             R0,#0x0C    ;
   71 00000046 D0FA            BEQ              loop
   72 00000048         
   73 00000048 4977            LDR              R1,=ADC0_ISC ; clear the interr
                                                            upt flag
   74 0000004A 6808            LDR              R0,[R1]     ;
   75 0000004C F040 000C       ORR              R0,#0x0C    ;
   76 00000050 6008            STR              R0,[R1]     ; Interrupt flag is
                                                             cleared
   77 00000052         
   78 00000052 4972            LDR              R1, =SCREEN_COUNTER
   79 00000054 780C            LDRB             R4, [R1]
   80 00000056 2C00            CMP              R4, #0
   81 00000058 BF08 F000 
              F860             BLEQ             DISPLAY_SHIP
   82 0000005E 2C01            CMP              R4, #1
   83 00000060 BF08 F000 
              F8AB             BLEQ             CLEARBOX
   84 00000066 2C03            CMP              R4, #3
   85 00000068 BF08 F000 
              F894             BLEQ             DELAY_5MS
   86 0000006E 496B            LDR              R1, =SCREEN_COUNTER



ARM Macro Assembler    Page 3 


   87 00000070 780C            LDRB             R4, [R1]
   88 00000072 2C05            CMP              R4, #5
   89 00000074 BF08 F7FF 
              FFFE             BLEQ             TIMER_INIT
   90 0000007A BF08 2715       MOVEQ            R7, #21     ;this counter for t
                                                            imer 
   91 0000007E         
   92 0000007E         CURSOR
   93 0000007E 496B            LDR              R1,=ADC0_SSFIFO2 ;
   94 00000080 F8D1 8000       LDR              R8,[R1]     ; R8 is the data PE
                                                            3
   95 00000084 F04F 00AB       MOV              R0,#171     ; get the first dig
                                                            it
   96 00000088 FBB8 F8F0       UDIV             R8,R8,R0    ;   
   97 0000008C 4968            LDR              R1, =ADC0_SSFIFO3
   98 0000008E F8D1 9000       LDR              R9,[R1]
   99 00000092 F04F 004B       MOV              R0,#75      ; get the first dig
                                                            it
  100 00000096 FBB9 F3F0       UDIV             R3,R9,R0    ;
  101 0000009A F103 0384       ADD              R3, #0X84
  102 0000009E F04F 0641       MOV              R6, #0X41
  103 000000A2 F1B8 0801       SUBS             R8, #1
  104 000000A6 BF0B 2201       MOVEQ            R2, #0X1
  105 000000AA 2202            MOVNE            R2, #0X2
  106 000000AC 2403            MOVEQ            R4, #0X3
  107 000000AE 2407            MOVNE            R4, #0X7
  108 000000B0         
  109 000000B0         LOP
  110 000000B0 4957            LDR              R1,=PORTA_DATA
  111 000000B2 6808            LDR              R0,[R1]
  112 000000B4 F020 0040       BIC              R0,#0x40
  113 000000B8 6008            STR              R0,[R1]
  114 000000BA         
  115 000000BA 461D            MOV              R5, R3
  116 000000BC F7FF FFFE       BL               TRANSMIT
  117 000000C0 4635            MOV              R5, R6
  118 000000C2 F7FF FFFE       BL               TRANSMIT
  119 000000C6         
  120 000000C6 4952            LDR              R1,=PORTA_DATA
  121 000000C8 6808            LDR              R0,[R1]
  122 000000CA F040 0040       ORR              R0,#0x40
  123 000000CE 6008            STR              R0,[R1]
  124 000000D0 2E41            CMP              R6, #0X41
  125 000000D2 BF04 FA02 
              F208             LSLEQ            R2, R8
  126 000000D8 FA04 F408       LSLEQ            R4, R8
  127 000000DC D007            BEQ              WORK
  128 000000DE 2E42            CMP              R6, #0X42
  129 000000E0 BF04 BA52       REV16EQ          R2, R2
  130 000000E4 BA64            REV16EQ          R4, R4
  131 000000E6 2E43            CMP              R6, #0X43
  132 000000E8 BF04 BA12       REVEQ            R2, R2
  133 000000EC BA24            REVEQ            R4, R4
  134 000000EE         WORK
  135 000000EE 2B85            CMP              R3, #0X85
  136 000000F0 BF0C 25FF       MOVEQ            R5, #0XFF
  137 000000F4 2500            MOVNE            R5, #0X0
  138 000000F6 F7FF FFFE       BL               TRANSMIT
  139 000000FA 4615            MOV              R5, R2      ;NE



ARM Macro Assembler    Page 4 


  140 000000FC F7FF FFFE       BL               TRANSMIT
  141 00000100 4625            MOV              R5, R4
  142 00000102 F7FF FFFE       BL               TRANSMIT
  143 00000106 4615            MOV              R5, R2
  144 00000108 F7FF FFFE       BL               TRANSMIT
  145 0000010C F04F 0500       MOV              R5, #0X0
  146 00000110 F7FF FFFE       BL               TRANSMIT
  147 00000114 F106 0601       ADD              R6, #1
  148 00000118 2E44            CMP              R6, #0X44
  149 0000011A D1C9            BNE              LOP
  150 0000011C E78A            B                getsample   ;      
  151 0000011E         
  152 0000011E         DISPLAY_SHIP
  153 0000011E B510            PUSH             {R4, LR}
  154 00000120 493D            LDR              R1, =CIV_COUNTER
  155 00000122 780C            LDRB             R4, [R1]
  156 00000124 2C00            CMP              R4, #0
  157 00000126 D90C            BLS              BATTLE
  158 00000128 4942            LDR              R1, =POSITION
  159 0000012A F7FF FFFE       BL               CIVILIAN
  160 0000012E 2C01            CMP              R4, #1
  161 00000130 D907            BLS              BATTLE
  162 00000132 4941            LDR              R1, =(POSITION + 2)
  163 00000134 F7FF FFFE       BL               CIVILIAN
  164 00000138 2C02            CMP              R4, #2
  165 0000013A D902            BLS              BATTLE
  166 0000013C 493F            LDR              R1, =(POSITION + 4)
  167 0000013E F7FF FFFE       BL               CIVILIAN
  168 00000142         
  169 00000142         BATTLE
  170 00000142 4834            LDR              R0, =BATTLE_COUNTER
  171 00000144 7802            LDRB             R2, [R0]
  172 00000146 2A00            CMP              R2, #0
  173 00000148 D912            BLS              FINISH
  174 0000014A 493D            LDR              R1, =(POSITION + 6)
  175 0000014C F7FF FFFE       BL               BATTLESHIP
  176 00000150 2A01            CMP              R2, #1
  177 00000152 D90D            BLS              FINISH
  178 00000154 493B            LDR              R1, =(POSITION + 8)
  179 00000156 F7FF FFFE       BL               BATTLESHIP
  180 0000015A 2A02            CMP              R2, #2
  181 0000015C D908            BLS              FINISH
  182 0000015E 493A            LDR              R1, =(POSITION + 10)
  183 00000160 F7FF FFFE       BL               BATTLESHIP
  184 00000164 2A03            CMP              R2, #3
  185 00000166 D903            BLS              FINISH
  186 00000168 4938            LDR              R1, =(POSITION + 12)
  187 0000016A F7FF FFFE       BL               BATTLESHIP
  188 0000016E E7FF            B                FINISH
  189 00000170         FINISH
  190 00000170 E8BD 4010       POP              {R4, LR}
  191 00000174 4770            BX               LR
  192 00000176         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  193 00000176         ;;;;;; CLEAR WHOLE SCREEN
  194 00000176         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  195 00000176 B503    CLEAR   PUSH             {R0,R1,LR}
  196 00000178 F04F 0000       MOV              R0,#0
  197 0000017C F240 11F7       MOV              R1, #503
  198 00000180 F04F 0500 



ARM Macro Assembler    Page 5 


                       LOOP    MOV              R5, #0X0
  199 00000184 F7FF FFFE       BL               TRANSMIT
  200 00000188 F100 0001       ADD              R0, #1
  201 0000018C 4288            CMP              R0,R1
  202 0000018E D1F7            BNE              LOOP
  203 00000190 E8BD 4003       POP              {R0,R1,LR}
  204 00000194 4770            BX               LR
  205 00000196         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  206 00000196         
  207 00000196         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  208 00000196         ;;;;;; 5 msec delay
  209 00000196         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  210 00000196         DELAY_5MS
  211 00000196 B500            PUSH             {LR}
  212 00000198 F7FF FFC1       BL               DISPLAY_SHIP
  213 0000019C F640 1000 
              F2C0 003D        MOV32            R0, #4000000
  214 000001A4 F7FF FFFE       BL               DELAY
  215 000001A8 F000 F808       BL               CLEARBOX
  216 000001AC 491B            LDR              R1, =SCREEN_COUNTER
  217 000001AE 780C            LDRB             R4, [R1]
  218 000001B0 BF08 3401       ADDEQ            R4, #1
  219 000001B4 700C            STRB             R4, [R1]
  220 000001B6 F85D EB04       POP              {LR}
  221 000001BA 4770            BX               LR
  222 000001BC         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  223 000001BC         ;;;;;; CLEAR Y = 1-2-3-4 ROWS
  224 000001BC         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  225 000001BC B507    CLEARBOX
                               PUSH{R0,         R1, R2, LR}
  226 000001BE F04F 0641       MOV              R6, #0X41
  227 000001C2         LOOP_CL
  228 000001C2 4913            LDR              R1,=PORTA_DATA
  229 000001C4 6808            LDR              R0,[R1]
  230 000001C6 F020 0040       BIC              R0,#0x40
  231 000001CA 6008            STR              R0,[R1]
  232 000001CC         
  233 000001CC F04F 0586       MOV              R5, #0X86
  234 000001D0 F7FF FFFE       BL               TRANSMIT
  235 000001D4 4635            MOV              R5, R6
  236 000001D6 F7FF FFFE       BL               TRANSMIT
  237 000001DA         
  238 000001DA 490D            LDR              R1,=PORTA_DATA
  239 000001DC 6808            LDR              R0,[R1]
  240 000001DE F040 0040       ORR              R0,#0x40
  241 000001E2 6008            STR              R0,[R1]
  242 000001E4         
  243 000001E4 F04F 0286       MOV              R2, #0X86
  244 000001E8 F04F 0500 
                       LOOP_C  MOV              R5, #0X0
  245 000001EC F7FF FFFE       BL               TRANSMIT
  246 000001F0 F102 0201       ADD              R2, #1
  247 000001F4 2AC5            CMP              R2, #0XC5
  248 000001F6 D1F7            BNE              LOOP_C
  249 000001F8 F106 0601       ADD              R6, #1
  250 000001FC 2E45            CMP              R6, #0X45
  251 000001FE D1E0            BNE              LOOP_CL
  252 00000200         
  253 00000200 4906            LDR              R1, =SCREEN_COUNTER



ARM Macro Assembler    Page 6 


  254 00000202 780C            LDRB             R4, [R1]
  255 00000204 F104 0401       ADD              R4, #1
  256 00000208 700C            STRB             R4, [R1]
  257 0000020A E8BD 4007       POP{R0,          R1, R2, LR}
  258 0000020E 4770            BX               LR
  259 00000210         
  260 00000210         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  261 00000210         ;;;;; NUMBERS 0-9 BEGINNING
  262 00000210         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  263 00000210         ;N0   PUSH  {LR} 
  264 00000210         ;   MOV  R5, #0X3E
  265 00000210         ;   BL  TRANSMIT
  266 00000210         ;   MOV  R5, #0X51
  267 00000210         ;   BL  TRANSMIT
  268 00000210         ;   MOV  R5, #0X49
  269 00000210         ;   BL  TRANSMIT   
  270 00000210         ;   MOV  R5, #0X45
  271 00000210         ;   BL  TRANSMIT
  272 00000210         ;   MOV  R5, #0X3E
  273 00000210         ;   BL  TRANSMIT   
  274 00000210         ;   POP  {LR}
  275 00000210         ;   BX  LR
  276 00000210         
  277 00000210         ;N1   PUSH  {LR} 
  278 00000210         ;   MOV  R5, #0X0
  279 00000210         ;   BL  TRANSMIT
  280 00000210         ;   MOV  R5, #0X42
  281 00000210         ;   BL  TRANSMIT
  282 00000210         ;   MOV  R5, #0X7F
  283 00000210         ;   BL  TRANSMIT   
  284 00000210         ;   MOV  R5, #0X40
  285 00000210         ;   BL  TRANSMIT
  286 00000210         ;   MOV  R5, #0X0
  287 00000210         ;   BL  TRANSMIT   
  288 00000210         ;   POP  {LR}
  289 00000210         ;   BX  LR
  290 00000210         
  291 00000210         ;N2   PUSH  {LR} 
  292 00000210         ;   MOV  R5, #0X42
  293 00000210         ;   BL  TRANSMIT
  294 00000210         ;   MOV  R5, #0X61
  295 00000210         ;   BL  TRANSMIT
  296 00000210         ;   MOV  R5, #0X51
  297 00000210         ;   BL  TRANSMIT   
  298 00000210         ;   MOV  R5, #0X49
  299 00000210         ;   BL  TRANSMIT
  300 00000210         ;   MOV  R5, #0X46
  301 00000210         ;   BL  TRANSMIT   
  302 00000210         ;   POP  {LR}
  303 00000210         ;   BX  LR
  304 00000210         ; 
  305 00000210         ;N3   PUSH  {LR} 
  306 00000210         ;   MOV  R5, #0X21
  307 00000210         ;   BL  TRANSMIT
  308 00000210         ;   MOV  R5, #0X41
  309 00000210         ;   BL  TRANSMIT
  310 00000210         ;   MOV  R5, #0X45
  311 00000210         ;   BL  TRANSMIT   
  312 00000210         ;   MOV  R5, #0X4B



ARM Macro Assembler    Page 7 


  313 00000210         ;   BL  TRANSMIT
  314 00000210         ;   MOV  R5, #0X31
  315 00000210         ;   BL  TRANSMIT   
  316 00000210         ;   POP  {LR}
  317 00000210         ;   BX  LR
  318 00000210         
  319 00000210         ;N4   PUSH  {LR} 
  320 00000210         ;   MOV  R5, #0X18
  321 00000210         ;   BL  TRANSMIT
  322 00000210         ;   MOV  R5, #0X14
  323 00000210         ;   BL  TRANSMIT
  324 00000210         ;   MOV  R5, #0X12
  325 00000210         ;   BL  TRANSMIT   
  326 00000210         ;   MOV  R5, #0X7F
  327 00000210         ;   BL  TRANSMIT
  328 00000210         ;   MOV  R5, #0X10
  329 00000210         ;   BL  TRANSMIT   
  330 00000210         ;   POP  {LR}
  331 00000210         ;   BX  LR
  332 00000210         
  333 00000210         ;N5   PUSH  {LR} 
  334 00000210         ;   MOV  R5, #0X27
  335 00000210         ;   BL  TRANSMIT
  336 00000210         ;   MOV  R5, #0X45
  337 00000210         ;   BL  TRANSMIT
  338 00000210         ;   MOV  R5, #0X45
  339 00000210         ;   BL  TRANSMIT   
  340 00000210         ;   MOV  R5, #0X45
  341 00000210         ;   BL  TRANSMIT
  342 00000210         ;   MOV  R5, #0X39
  343 00000210         ;   BL  TRANSMIT   
  344 00000210         ;   POP  {LR}
  345 00000210         ;   BX  LR
  346 00000210         
  347 00000210         ;N6   PUSH  {LR} 
  348 00000210         ;   MOV  R5, #0X3C
  349 00000210         ;   BL  TRANSMIT
  350 00000210         ;   MOV  R5, #0X4A
  351 00000210         ;   BL  TRANSMIT
  352 00000210         ;   MOV  R5, #0X49
  353 00000210         ;   BL  TRANSMIT   
  354 00000210         ;   MOV  R5, #0X49
  355 00000210         ;   BL  TRANSMIT
  356 00000210         ;   MOV  R5, #0X30
  357 00000210         ;   BL  TRANSMIT   
  358 00000210         ;   POP  {LR}
  359 00000210         ;   BX  LR
  360 00000210         
  361 00000210         ;N7   PUSH  {LR} 
  362 00000210         ;   MOV  R5, #0X1
  363 00000210         ;   BL  TRANSMIT
  364 00000210         ;   MOV  R5, #0X71
  365 00000210         ;   BL  TRANSMIT
  366 00000210         ;   MOV  R5, #0X9
  367 00000210         ;   BL  TRANSMIT   
  368 00000210         ;   MOV  R5, #0X5
  369 00000210         ;   BL  TRANSMIT
  370 00000210         ;   MOV  R5, #0X3
  371 00000210         ;   BL  TRANSMIT   



ARM Macro Assembler    Page 8 


  372 00000210         ;   POP  {LR}
  373 00000210         ;   BX  LR
  374 00000210         
  375 00000210         ;N8   PUSH  {LR} 
  376 00000210         ;   MOV  R5, #0X36
  377 00000210         ;   BL  TRANSMIT
  378 00000210         ;   MOV  R5, #0X49
  379 00000210         ;   BL  TRANSMIT
  380 00000210         ;   MOV  R5, #0X49
  381 00000210         ;   BL  TRANSMIT   
  382 00000210         ;   MOV  R5, #0X49
  383 00000210         ;   BL  TRANSMIT
  384 00000210         ;   MOV  R5, #0X36
  385 00000210         ;   BL  TRANSMIT   
  386 00000210         ;   POP  {LR}
  387 00000210         ;   BX  LR
  388 00000210         
  389 00000210         ;N9   PUSH  {LR} 
  390 00000210         ;   MOV  R5, #0X6
  391 00000210         ;   BL  TRANSMIT
  392 00000210         ;   MOV  R5, #0X49
  393 00000210         ;   BL  TRANSMIT
  394 00000210         ;   MOV  R5, #0X49
  395 00000210         ;   BL  TRANSMIT   
  396 00000210         ;   MOV  R5, #0X29
  397 00000210         ;   BL  TRANSMIT
  398 00000210         ;   MOV  R5, #0X1E
  399 00000210         ;   BL  TRANSMIT   
  400 00000210         ;   POP  {LR}
  401 00000210         ;   BX  LR
  402 00000210         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  403 00000210         ;;;;; NUMBERS 0-9 FINISH
  404 00000210         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
  405 00000210         
  406 00000210         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  407 00000210         ;;;;; CHAR A-Z BEGINNING
  408 00000210         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  409 00000210         ;A   
  410 00000210         ;   PUSH  {LR}
  411 00000210         ;   MOV  R5, #0X7E
  412 00000210         ;   BL  TRANSMIT
  413 00000210         ;   MOV  R5, #0X11
  414 00000210         ;   BL  TRANSMIT
  415 00000210         ;   MOV  R5, #0X11
  416 00000210         ;   BL  TRANSMIT   
  417 00000210         ;   MOV  R5, #0X11
  418 00000210         ;   BL  TRANSMIT
  419 00000210         ;   MOV  R5, #0X7E
  420 00000210         ;   BL  TRANSMIT 
  421 00000210         ;   POP  {LR}
  422 00000210         ;   BX  LR
  423 00000210         ;B_   PUSH  {LR} 
  424 00000210         ;   
  425 00000210         ;   POP  {LR}
  426 00000210         ;   BX  LR   
  427 00000210         ;C   PUSH  {LR} 
  428 00000210         ;   
  429 00000210         ;   POP  {LR}
  430 00000210         ;   BX  LR



ARM Macro Assembler    Page 9 


  431 00000210         ;D   PUSH  {LR} 
  432 00000210         ;   
  433 00000210         ;   POP  {LR}
  434 00000210         ;   BX  LR
  435 00000210         ;E   PUSH  {LR} 
  436 00000210         ;   
  437 00000210         ;   POP  {LR}
  438 00000210         ;   BX  LR   
  439 00000210         
  440 00000210         ;I   PUSH  {LR} 
  441 00000210         ;   MOV  R5, #0X00
  442 00000210         ;   BL  TRANSMIT
  443 00000210         ;   MOV  R5, #0X41
  444 00000210         ;   BL  TRANSMIT
  445 00000210         ;   MOV  R5, #0X7F
  446 00000210         ;   BL  TRANSMIT   
  447 00000210         ;   MOV  R5, #0X41
  448 00000210         ;   BL  TRANSMIT
  449 00000210         ;   MOV  R5, #0X00
  450 00000210         ;   BL  TRANSMIT
  451 00000210         ;   POP  {LR}
  452 00000210         ;   BX  LR
  453 00000210         ; 
  454 00000210         ;K   PUSH  {LR}
  455 00000210         ;   MOV  R5, #0X7F
  456 00000210         ;   BL  TRANSMIT
  457 00000210         ;   MOV  R5, #0X8
  458 00000210         ;   BL  TRANSMIT
  459 00000210         ;   MOV  R5, #0X14
  460 00000210         ;   BL  TRANSMIT
  461 00000210         ;   MOV  R5, #0X22
  462 00000210         ;   BL  TRANSMIT   
  463 00000210         ;   MOV  R5, #0X41
  464 00000210         ;   BL  TRANSMIT
  465 00000210         ;   POP  {LR}
  466 00000210         ;   BX  LR 
  467 00000210         ;   
  468 00000210         ;L   PUSH  {LR}
  469 00000210         ;   MOV  R5, #0X7F
  470 00000210         ;   BL  TRANSMIT
  471 00000210         ;   MOV  R5, #0X40
  472 00000210         ;   BL  TRANSMIT
  473 00000210         ;   MOV  R5, #0X40
  474 00000210         ;   BL  TRANSMIT
  475 00000210         ;   MOV  R5, #0X40
  476 00000210         ;   BL  TRANSMIT   
  477 00000210         ;   MOV  R5, #0X40
  478 00000210         ;   BL  TRANSMIT   
  479 00000210         ;   POP  {LR}
  480 00000210         ;   BX  LR 
  481 00000210         
  482 00000210         
  483 00000210         
  484 00000210         ;M   PUSH  {LR}
  485 00000210         ;   MOV  R5, #0X7F
  486 00000210         ;   BL  TRANSMIT
  487 00000210         ;   MOV  R5, #0X02
  488 00000210         ;   BL  TRANSMIT
  489 00000210         ;   MOV  R5, #0XC



ARM Macro Assembler    Page 10 


  490 00000210         ;   BL  TRANSMIT
  491 00000210         ;   MOV  R5, #0X2
  492 00000210         ;   BL  TRANSMIT   
  493 00000210         ;   MOV  R5, #0X7F
  494 00000210         ;   BL  TRANSMIT    
  495 00000210         ;   POP  {LR}
  496 00000210         ;   BX  LR
  497 00000210         
  498 00000210         ;N   PUSH  {LR}   
  499 00000210         ;   MOV  R5, #0X7F
  500 00000210         ;   BL  TRANSMIT
  501 00000210         ;   MOV  R5, #0X04
  502 00000210         ;   BL  TRANSMIT
  503 00000210         ;   MOV  R5, #0X8
  504 00000210         ;   BL  TRANSMIT
  505 00000210         ;   MOV  R5, #0X10
  506 00000210         ;   BL  TRANSMIT   
  507 00000210         ;   MOV  R5, #0X7F
  508 00000210         ;   BL  TRANSMIT   
  509 00000210         ;   POP  {LR}
  510 00000210         ;   BX  LR 
  511 00000210         
  512 00000210         ;S   PUSH  {LR}   
  513 00000210         ;   MOV  R5, #0X46
  514 00000210         ;   BL  TRANSMIT
  515 00000210         ;   MOV  R5, #0X49
  516 00000210         ;   BL  TRANSMIT
  517 00000210         ;   MOV  R5, #0X49
  518 00000210         ;   BL  TRANSMIT
  519 00000210         ;   MOV  R5, #0X49
  520 00000210         ;   BL  TRANSMIT   
  521 00000210         ;   MOV  R5, #0X31
  522 00000210         ;   BL  TRANSMIT   
  523 00000210         ;   POP  {LR}
  524 00000210         ;   BX  LR  
  525 00000210         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  526 00000210         ;;;;; CHAR A-Z FINISH
  527 00000210         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  528 00000210                 ALIGN
  529 00000210                 END
              400043FC 
              2000040F 
              20000410 
              20000411 
              40038028 
              40038004 
              4003800C 
              40038088 
              400380A8 
              20000400 
              20000402 
              20000404 
              20000406 
              20000408 
              2000040A 
              2000040C 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\__main.d -o.\objects\__main.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM



ARM Macro Assembler    Page 11 


SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\__main.lst __main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BATTLE 00000142

Symbol: BATTLE
   Definitions
      At line 169 in file __main.s
   Uses
      At line 157 in file __main.s
      At line 161 in file __main.s
      At line 165 in file __main.s

CLEAR 00000176

Symbol: CLEAR
   Definitions
      At line 195 in file __main.s
   Uses
      At line 36 in file __main.s
Comment: CLEAR used once
CLEARBOX 000001BC

Symbol: CLEARBOX
   Definitions
      At line 225 in file __main.s
   Uses
      At line 83 in file __main.s
      At line 215 in file __main.s

CURSOR 0000007E

Symbol: CURSOR
   Definitions
      At line 92 in file __main.s
   Uses
      None
Comment: CURSOR unused
DELAY_5MS 00000196

Symbol: DELAY_5MS
   Definitions
      At line 210 in file __main.s
   Uses
      At line 85 in file __main.s
Comment: DELAY_5MS used once
DISPLAY_SHIP 0000011E

Symbol: DISPLAY_SHIP
   Definitions
      At line 152 in file __main.s
   Uses
      At line 81 in file __main.s
      At line 212 in file __main.s

FINISH 00000170

Symbol: FINISH
   Definitions
      At line 189 in file __main.s
   Uses
      At line 173 in file __main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 177 in file __main.s
      At line 181 in file __main.s
      At line 185 in file __main.s
      At line 188 in file __main.s

LOOP 00000180

Symbol: LOOP
   Definitions
      At line 198 in file __main.s
   Uses
      At line 202 in file __main.s
Comment: LOOP used once
LOOP_C 000001E8

Symbol: LOOP_C
   Definitions
      At line 244 in file __main.s
   Uses
      At line 248 in file __main.s
Comment: LOOP_C used once
LOOP_CL 000001C2

Symbol: LOOP_CL
   Definitions
      At line 227 in file __main.s
   Uses
      At line 251 in file __main.s
Comment: LOOP_CL used once
LOP 000000B0

Symbol: LOP
   Definitions
      At line 109 in file __main.s
   Uses
      At line 149 in file __main.s
Comment: LOP used once
WORK 000000EE

Symbol: WORK
   Definitions
      At line 134 in file __main.s
   Uses
      At line 127 in file __main.s
Comment: WORK used once
__main 00000000

Symbol: __main
   Definitions
      At line 28 in file __main.s
   Uses
      At line 26 in file __main.s
Comment: __main used once
getsample 00000034

Symbol: getsample
   Definitions
      At line 63 in file __main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 150 in file __main.s
Comment: getsample used once
loop 0000003E

Symbol: loop
   Definitions
      At line 68 in file __main.s
   Uses
      At line 71 in file __main.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 12 in file __main.s
   Uses
      None
Comment: main unused
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 5 in file __main.s
   Uses
      At line 73 in file __main.s
Comment: ADC0_ISC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 4 in file __main.s
   Uses
      At line 63 in file __main.s
Comment: ADC0_PSSI used once
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 1 in file __main.s
   Uses
      At line 68 in file __main.s
Comment: ADC0_RIS used once
ADC0_SSFIFO2 40038088

Symbol: ADC0_SSFIFO2
   Definitions
      At line 2 in file __main.s
   Uses
      At line 93 in file __main.s
Comment: ADC0_SSFIFO2 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 3 in file __main.s
   Uses
      At line 97 in file __main.s
Comment: ADC0_SSFIFO3 used once
ADC0_SSFSTAT2 4003808C

Symbol: ADC0_SSFSTAT2
   Definitions
      At line 6 in file __main.s
   Uses
      None
Comment: ADC0_SSFSTAT2 unused
BATTLE_COUNTER 2000040F

Symbol: BATTLE_COUNTER
   Definitions
      At line 9 in file __main.s
   Uses
      At line 56 in file __main.s
      At line 170 in file __main.s

CIV_COUNTER 20000410




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: CIV_COUNTER
   Definitions
      At line 10 in file __main.s
   Uses
      At line 58 in file __main.s
      At line 154 in file __main.s

PORTA_DATA 400043FC

Symbol: PORTA_DATA
   Definitions
      At line 7 in file __main.s
   Uses
      At line 32 in file __main.s
      At line 110 in file __main.s
      At line 120 in file __main.s
      At line 228 in file __main.s
      At line 238 in file __main.s

POSITION 20000400

Symbol: POSITION
   Definitions
      At line 8 in file __main.s
   Uses
      At line 158 in file __main.s
      At line 162 in file __main.s
      At line 166 in file __main.s
      At line 174 in file __main.s
      At line 178 in file __main.s
      At line 182 in file __main.s
      At line 186 in file __main.s

SCREEN_COUNTER 20000411

Symbol: SCREEN_COUNTER
   Definitions
      At line 11 in file __main.s
   Uses
      At line 60 in file __main.s
      At line 78 in file __main.s
      At line 86 in file __main.s
      At line 216 in file __main.s
      At line 253 in file __main.s

11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BATTLESHIP 00000000

Symbol: BATTLESHIP
   Definitions
      At line 20 in file __main.s
   Uses
      At line 175 in file __main.s
      At line 179 in file __main.s
      At line 183 in file __main.s
      At line 187 in file __main.s

BOUNDARY 00000000

Symbol: BOUNDARY
   Definitions
      At line 21 in file __main.s
   Uses
      At line 37 in file __main.s
Comment: BOUNDARY used once
CIVILIAN 00000000

Symbol: CIVILIAN
   Definitions
      At line 22 in file __main.s
   Uses
      At line 159 in file __main.s
      At line 163 in file __main.s
      At line 167 in file __main.s

DELAY 00000000

Symbol: DELAY
   Definitions
      At line 16 in file __main.s
   Uses
      At line 214 in file __main.s
Comment: DELAY used once
GPIOPortF_Handler 00000000

Symbol: GPIOPortF_Handler
   Definitions
      At line 24 in file __main.s
   Uses
      None
Comment: GPIOPortF_Handler unused
GPIO_INIT 00000000

Symbol: GPIO_INIT
   Definitions
      At line 25 in file __main.s
   Uses
      At line 31 in file __main.s
Comment: GPIO_INIT used once
Init 00000000

Symbol: Init
   Definitions
      At line 15 in file __main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 29 in file __main.s
Comment: Init used once
LCD_INIT 00000000

Symbol: LCD_INIT
   Definitions
      At line 14 in file __main.s
   Uses
      At line 30 in file __main.s
Comment: LCD_INIT used once
OutChar 00000000

Symbol: OutChar
   Definitions
      At line 17 in file __main.s
   Uses
      None
Comment: OutChar unused
TIMER_INIT 00000000

Symbol: TIMER_INIT
   Definitions
      At line 19 in file __main.s
   Uses
      At line 89 in file __main.s
Comment: TIMER_INIT used once
TRANSMIT 00000000

Symbol: TRANSMIT
   Definitions
      At line 18 in file __main.s
   Uses
      At line 116 in file __main.s
      At line 118 in file __main.s
      At line 138 in file __main.s
      At line 140 in file __main.s
      At line 142 in file __main.s
      At line 144 in file __main.s
      At line 146 in file __main.s
      At line 199 in file __main.s
      At line 234 in file __main.s
      At line 236 in file __main.s
      At line 245 in file __main.s

Timer0A_Handler 00000000

Symbol: Timer0A_Handler
   Definitions
      At line 23 in file __main.s
   Uses
      None
Comment: Timer0A_Handler unused
12 symbols
375 symbols in table
