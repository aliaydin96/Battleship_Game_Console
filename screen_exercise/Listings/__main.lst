


ARM Macro Assembler    Page 1 


    1 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
    2 00000000 40038088 
                       ADC0_SSFIFO2
                               EQU              0x40038088  ; Channel 2 results
                                                            
    3 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                             
    4 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
    5 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C  ; ISC
    6 00000000 4003808C 
                       ADC0_SSFSTAT2
                               EQU              0X4003808C
    7 00000000 400043FC 
                       PORTA_DATA
                               EQU              0x400043FC
    8 00000000 20000400 
                       POSITION
                               EQU              0X20000400
    9 00000000                 AREA             main, CODE, READONLY
   10 00000000                 THUMB
   11 00000000                 IMPORT           LCD_INIT
   12 00000000                 IMPORT           Init
   13 00000000                 IMPORT           DELAY
   14 00000000                 EXTERN           OutChar
   15 00000000                 EXTERN           TRANSMIT
   16 00000000                 EXTERN           TIMER_INIT
   17 00000000                 EXTERN           BATTLESHIP
   18 00000000                 EXTERN           BOUNDARY
   19 00000000                 EXTERN           CIVILIAN
   20 00000000                 EXTERN           Timer0A_Handler
   21 00000000                 EXTERN           GPIOPortF_Handler
   22 00000000                 EXTERN           GPIO_INIT
   23 00000000                 EXPORT           __main
   24 00000000         
   25 00000000         __main
   26 00000000 F7FF FFFE       BL               Init
   27 00000004 F7FF FFFE       BL               LCD_INIT
   28 00000008 F7FF FFFE       BL               GPIO_INIT
   29 0000000C 49B8            LDR              R1,=PORTA_DATA
   30 0000000E 6808            LDR              R0,[R1]
   31 00000010 F040 0040       ORR              R0,#0x40
   32 00000014 6008            STR              R0,[R1]
   33 00000016 F000 F8FB       BL               CLEAR
   34 0000001A F7FF FFFE       BL               BOUNDARY
   35 0000001E         ;   BL  TIMER_INIT
   36 0000001E         ;   MOV R7, #21  ;this counter for timer 
   37 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   38 0000001E         ;;;;; REGISTERS
   39 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   40 0000001E         ;;;;; R0  ==> GENERAL PURPOSES
   41 0000001E         ;;;;; R1  ==> GENERAL PURPOSES



ARM Macro Assembler    Page 2 


   42 0000001E         ;;;;; R2  ==> CURSOR'S POSITION
   43 0000001E         ;;;;; R3  ==> X POSITION
   44 0000001E         ;;;;; R4  ==> CURSOR'S POSITION
   45 0000001E         ;;;;; R5  ==> DISPLAY REGISTER
   46 0000001E         ;;;;; R6  ==> Y POSITION
   47 0000001E         ;;;;; R7  ==> TIMER'S COUNTER
   48 0000001E         ;;;;; R8  ==> ADC RESULT 
   49 0000001E         ;;;;; R9  ==> ADC RESULT
   50 0000001E         ;;;;; R10 ==> BATTLESHIP COUNTER
   51 0000001E         ;;;;; R11 ==> CIVILIAN COUNTER
   52 0000001E         ;;;;; R12 ==> FREE
   53 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   54 0000001E F04F 0A00       MOV              R10, #0
   55 00000022 F04F 0B00       MOV              R11, #0
   56 00000026 F04F 0C00       MOV              R12, #0
   57 0000002A 49B2    getsample
                               LDR              R1,=ADC0_PSSI 
                                                            ; request a sample
   58 0000002C 6808            LDR              R0,[R1]     ;
   59 0000002E F040 000C       ORR              R0,R0,#0x0C ; get a sample
   60 00000032 6008            STR              R0,[R1]     ;
   61 00000034         
   62 00000034 49B0    loop    LDR              R1,=ADC0_RIS ; check for interr
                                                            up flag
   63 00000036 6808            LDR              R0,[R1]     ;
   64 00000038 F010 000C       ANDS             R0,#0x0C    ;
   65 0000003C D0FA            BEQ              loop
   66 0000003E         
   67 0000003E 49AF            LDR              R1,=ADC0_ISC ; clear the interr
                                                            upt flag
   68 00000040 6808            LDR              R0,[R1]     ;
   69 00000042 F040 000C       ORR              R0,#0x0C    ;
   70 00000046 6008            STR              R0,[R1]     ; Interrupt flag is
                                                             cleared
   71 00000048         
   72 00000048 F1BB 0F00       CMP              R11, #0
   73 0000004C D920            BLS              BATTLE
   74 0000004E 49AC            LDR              R1, =POSITION
   75 00000050 F851 2B02       LDR              R2, [R1], #2
   76 00000054 F851 4B02       LDR              R4, [R1], #2
   77 00000058 F8D1 C000       LDR              R12, [R1]
   78 0000005C F7FF FFFE       BL               CIVILIAN
   79 00000060 F1BB 0F01       CMP              R11, #1
   80 00000064 D914            BLS              BATTLE
   81 00000066 49A7            LDR              R1, =(POSITION + 10)
   82 00000068 F851 2B02       LDR              R2, [R1], #2
   83 0000006C F851 4B02       LDR              R4, [R1], #2
   84 00000070 F8D1 C000       LDR              R12, [R1]
   85 00000074 F7FF FFFE       BL               CIVILIAN
   86 00000078 F1BB 0F02       CMP              R11, #2
   87 0000007C D908            BLS              BATTLE
   88 0000007E 49A2            LDR              R1, =(POSITION + 16)
   89 00000080 F851 2B02       LDR              R2, [R1], #2
   90 00000084 F851 4B02       LDR              R4, [R1], #2
   91 00000088 F8D1 C000       LDR              R12, [R1]
   92 0000008C F7FF FFFE       BL               CIVILIAN
   93 00000090         BATTLE
   94 00000090 F1BA 0F00       CMP              R10, #0
   95 00000094 D92C            BLS              CURSOR



ARM Macro Assembler    Page 3 


   96 00000096 499D            LDR              R1, =(POSITION + 24)
   97 00000098 F851 2B02       LDR              R2, [R1], #2
   98 0000009C F851 4B02       LDR              R4, [R1], #2
   99 000000A0 F8D1 C000       LDR              R12, [R1]
  100 000000A4 F7FF FFFE       BL               BATTLESHIP
  101 000000A8 F1BA 0F01       CMP              R10, #1
  102 000000AC D920            BLS              CURSOR
  103 000000AE 4998            LDR              R1, =(POSITION + 30)
  104 000000B0 F851 2B02       LDR              R2, [R1], #2
  105 000000B4 F851 4B02       LDR              R4, [R1], #2
  106 000000B8 F8D1 C000       LDR              R12, [R1]
  107 000000BC F7FF FFFE       BL               BATTLESHIP
  108 000000C0 F1BA 0F02       CMP              R10, #2
  109 000000C4 D914            BLS              CURSOR
  110 000000C6 4993            LDR              R1, =(POSITION + 36)
  111 000000C8 F851 2B02       LDR              R2, [R1], #2
  112 000000CC F851 4B02       LDR              R4, [R1], #2
  113 000000D0 F8D1 C000       LDR              R12, [R1]
  114 000000D4 F7FF FFFE       BL               BATTLESHIP
  115 000000D8 F1BA 0F03       CMP              R10, #3
  116 000000DC D908            BLS              CURSOR
  117 000000DE 498E            LDR              R1, =(POSITION + 42)
  118 000000E0 F851 2B02       LDR              R2, [R1], #2
  119 000000E4 F851 4B02       LDR              R4, [R1], #2
  120 000000E8 F8D1 C000       LDR              R12, [R1]
  121 000000EC F7FF FFFE       BL               BATTLESHIP
  122 000000F0         CURSOR
  123 000000F0 498A            LDR              R1,=ADC0_SSFIFO2 ;
  124 000000F2 F8D1 8000       LDR              R8,[R1]     ; R8 is the data PE
                                                            3
  125 000000F6 F04F 00AE       MOV              R0,#174     ; get the first dig
                                                            it
  126 000000FA FBB8 F8F0       UDIV             R8,R8,R0    ;   
  127 000000FE 4988            LDR              R1, =ADC0_SSFIFO3
  128 00000100 F8D1 9000       LDR              R9,[R1]
  129 00000104 F04F 004B       MOV              R0,#75      ; get the first dig
                                                            it
  130 00000108 FBB9 F3F0       UDIV             R3,R9,R0    ;
  131 0000010C F103 0384       ADD              R3, #0X84
  132 00000110         
  133 00000110         
  134 00000110 4977            LDR              R1,=PORTA_DATA
  135 00000112 6808            LDR              R0,[R1]
  136 00000114 F020 0040       BIC              R0,#0x40
  137 00000118 6008            STR              R0,[R1]
  138 0000011A         
  139 0000011A 461D            MOV              R5, R3
  140 0000011C F7FF FFFE       BL               TRANSMIT
  141 00000120 F04F 0641       MOV              R6, #0X41
  142 00000124 4635            MOV              R5, R6
  143 00000126 F7FF FFFE       BL               TRANSMIT
  144 0000012A         
  145 0000012A 4971            LDR              R1,=PORTA_DATA
  146 0000012C 6808            LDR              R0,[R1]
  147 0000012E F040 0040       ORR              R0,#0x40
  148 00000132 6008            STR              R0,[R1]
  149 00000134         
  150 00000134 F1B8 0801       SUBS             R8, #1
  151 00000138 BF0B 2201       MOVEQ            R2, #0X1



ARM Macro Assembler    Page 4 


  152 0000013C 2202            MOVNE            R2, #0X2
  153 0000013E 2403            MOVEQ            R4, #0X3
  154 00000140 2407            MOVNE            R4, #0X7
  155 00000142 FA02 F208       LSL              R2, R8
  156 00000146 FA04 F408       LSL              R4, R8
  157 0000014A         
  158 0000014A         
  159 0000014A 2B85            CMP              R3, #0X85
  160 0000014C BF0C 25FF       MOVEQ            R5, #0XFF
  161 00000150 2500            MOVNE            R5, #0X0
  162 00000152 F7FF FFFE       BL               TRANSMIT
  163 00000156 4615            MOV              R5, R2      ;NE
  164 00000158 F7FF FFFE       BL               TRANSMIT
  165 0000015C 4625            MOV              R5, R4
  166 0000015E F7FF FFFE       BL               TRANSMIT
  167 00000162 4615            MOV              R5, R2
  168 00000164 F7FF FFFE       BL               TRANSMIT
  169 00000168 F04F 0500       MOV              R5, #0X0
  170 0000016C F7FF FFFE       BL               TRANSMIT
  171 00000170         
  172 00000170         
  173 00000170 495F            LDR              R1,=PORTA_DATA
  174 00000172 6808            LDR              R0,[R1]
  175 00000174 F020 0040       BIC              R0,#0x40
  176 00000178 6008            STR              R0,[R1]
  177 0000017A         
  178 0000017A 461D            MOV              R5, R3
  179 0000017C F7FF FFFE       BL               TRANSMIT
  180 00000180 F04F 0642       MOV              R6, #0X42
  181 00000184 4635            MOV              R5, R6
  182 00000186 F7FF FFFE       BL               TRANSMIT
  183 0000018A         
  184 0000018A 4959            LDR              R1,=PORTA_DATA
  185 0000018C 6808            LDR              R0,[R1]
  186 0000018E F040 0040       ORR              R0,#0x40
  187 00000192 6008            STR              R0,[R1]
  188 00000194         
  189 00000194 BA52            REV16            R2, R2
  190 00000196 BA64            REV16            R4, R4
  191 00000198         
  192 00000198 2B85            CMP              R3, #0X85
  193 0000019A BF0C 25FF       MOVEQ            R5, #0XFF
  194 0000019E 2500            MOVNE            R5, #0X0
  195 000001A0 F7FF FFFE       BL               TRANSMIT
  196 000001A4 4615            MOV              R5, R2      ;NE
  197 000001A6 F7FF FFFE       BL               TRANSMIT
  198 000001AA 4625            MOV              R5, R4
  199 000001AC F7FF FFFE       BL               TRANSMIT
  200 000001B0 4615            MOV              R5, R2
  201 000001B2 F7FF FFFE       BL               TRANSMIT
  202 000001B6 F04F 0500       MOV              R5, #0X0
  203 000001BA F7FF FFFE       BL               TRANSMIT
  204 000001BE         
  205 000001BE 494C            LDR              R1,=PORTA_DATA
  206 000001C0 6808            LDR              R0,[R1]
  207 000001C2 F020 0040       BIC              R0,#0x40
  208 000001C6 6008            STR              R0,[R1]
  209 000001C8         
  210 000001C8 461D            MOV              R5, R3



ARM Macro Assembler    Page 5 


  211 000001CA F7FF FFFE       BL               TRANSMIT
  212 000001CE F04F 0643       MOV              R6, #0X43
  213 000001D2 4635            MOV              R5, R6
  214 000001D4 F7FF FFFE       BL               TRANSMIT
  215 000001D8         
  216 000001D8 4945            LDR              R1,=PORTA_DATA
  217 000001DA 6808            LDR              R0,[R1]
  218 000001DC F040 0040       ORR              R0,#0x40
  219 000001E0 6008            STR              R0,[R1]
  220 000001E2         
  221 000001E2 BA12            REV              R2, R2
  222 000001E4 BA24            REV              R4, R4
  223 000001E6         
  224 000001E6 2B85            CMP              R3, #0X85
  225 000001E8 BF0C 25FF       MOVEQ            R5, #0XFF
  226 000001EC 2500            MOVNE            R5, #0X0
  227 000001EE F7FF FFFE       BL               TRANSMIT
  228 000001F2 4615            MOV              R5, R2      ;NE
  229 000001F4 F7FF FFFE       BL               TRANSMIT
  230 000001F8 4625            MOV              R5, R4
  231 000001FA F7FF FFFE       BL               TRANSMIT
  232 000001FE 4615            MOV              R5, R2
  233 00000200 F7FF FFFE       BL               TRANSMIT
  234 00000204 F04F 0500       MOV              R5, #0X0
  235 00000208 F7FF FFFE       BL               TRANSMIT
  236 0000020C E70D            B                getsample   ;      
  237 0000020E         
  238 0000020E         FIN
  239 0000020E E7FE            B                FIN
  240 00000210         
  241 00000210         
  242 00000210         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  243 00000210         ;;;;;; CLEAR WHOLE SCREEN
  244 00000210         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  245 00000210 B503    CLEAR   PUSH             {R0,R1,LR}
  246 00000212 F04F 0000       MOV              R0,#0
  247 00000216 F240 11F7       MOV              R1, #503
  248 0000021A F04F 0500 
                       LOOP    MOV              R5, #0X0
  249 0000021E F7FF FFFE       BL               TRANSMIT
  250 00000222 F100 0001       ADD              R0, #1
  251 00000226 4288            CMP              R0,R1
  252 00000228 D1F7            BNE              LOOP
  253 0000022A E8BD 4003       POP              {R0,R1,LR}
  254 0000022E 4770            BX               LR
  255 00000230         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  256 00000230         
  257 00000230         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  258 00000230         ;;;;;; CLEAR Y = 1 ROW
  259 00000230         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  260 00000230 B507    CLEARBOX1
                               PUSH{R0,         R1, R2, LR}
  261 00000232 492F            LDR              R1,=PORTA_DATA
  262 00000234 6808            LDR              R0,[R1]
  263 00000236 F020 0040       BIC              R0,#0x40
  264 0000023A 6008            STR              R0,[R1]
  265 0000023C         
  266 0000023C F04F 0586       MOV              R5, #0X86
  267 00000240 F7FF FFFE       BL               TRANSMIT



ARM Macro Assembler    Page 6 


  268 00000244 F04F 0541       MOV              R5, #0X41
  269 00000248 F7FF FFFE       BL               TRANSMIT
  270 0000024C         
  271 0000024C 4928            LDR              R1,=PORTA_DATA
  272 0000024E 6808            LDR              R0,[R1]
  273 00000250 F040 0040       ORR              R0,#0x40
  274 00000254 6008            STR              R0,[R1]
  275 00000256 F04F 0286       MOV              R2, #0X86
  276 0000025A         
  277 0000025A F04F 0500 
                       LOOP_C  MOV              R5, #0X0
  278 0000025E F7FF FFFE       BL               TRANSMIT
  279 00000262 F102 0201       ADD              R2, #1
  280 00000266 2AC5            CMP              R2, #0XC5
  281 00000268 D1F7            BNE              LOOP_C
  282 0000026A         
  283 0000026A E8BD 4007       POP{R0,          R1, R2, LR}
  284 0000026E 4770            BX               LR
  285 00000270         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  286 00000270         ;;;;;; CLEAR Y = 2 ROW
  287 00000270         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  288 00000270 B507    CLEARBOX2
                               PUSH{R0,         R1, R2, LR}
  289 00000272 491F            LDR              R1,=PORTA_DATA
  290 00000274 6808            LDR              R0,[R1]
  291 00000276 F020 0040       BIC              R0,#0x40
  292 0000027A 6008            STR              R0,[R1]
  293 0000027C         
  294 0000027C F04F 0586       MOV              R5, #0X86
  295 00000280 F7FF FFFE       BL               TRANSMIT
  296 00000284 F04F 0542       MOV              R5, #0X42
  297 00000288 F7FF FFFE       BL               TRANSMIT
  298 0000028C         
  299 0000028C 4918            LDR              R1,=PORTA_DATA
  300 0000028E 6808            LDR              R0,[R1]
  301 00000290 F040 0040       ORR              R0,#0x40
  302 00000294 6008            STR              R0,[R1]
  303 00000296 F04F 0286       MOV              R2, #0X86
  304 0000029A         
  305 0000029A F04F 0500 
                       LOOP_C_2
                               MOV              R5, #0X0
  306 0000029E F7FF FFFE       BL               TRANSMIT
  307 000002A2 F102 0201       ADD              R2, #1
  308 000002A6 2AC5            CMP              R2, #0XC5
  309 000002A8 D1F7            BNE              LOOP_C_2
  310 000002AA         
  311 000002AA E8BD 4007       POP{R0,          R1, R2, LR}
  312 000002AE 4770            BX               LR
  313 000002B0         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  314 000002B0         ;;;;;; CLEAR Y = 3 ROW
  315 000002B0         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  316 000002B0 B507    CLEARBOX3
                               PUSH{R0,         R1, R2, LR}
  317 000002B2 490F            LDR              R1,=PORTA_DATA
  318 000002B4 6808            LDR              R0,[R1]
  319 000002B6 F020 0040       BIC              R0,#0x40
  320 000002BA 6008            STR              R0,[R1]
  321 000002BC         



ARM Macro Assembler    Page 7 


  322 000002BC F04F 0586       MOV              R5, #0X86
  323 000002C0 F7FF FFFE       BL               TRANSMIT
  324 000002C4 F04F 0543       MOV              R5, #0X43
  325 000002C8 F7FF FFFE       BL               TRANSMIT
  326 000002CC         
  327 000002CC 4908            LDR              R1,=PORTA_DATA
  328 000002CE 6808            LDR              R0,[R1]
  329 000002D0 F040 0040       ORR              R0,#0x40
  330 000002D4 6008            STR              R0,[R1]
  331 000002D6 F04F 0286       MOV              R2, #0X86
  332 000002DA         
  333 000002DA F04F 0500 
                       LOOP_C_3
                               MOV              R5, #0X0
  334 000002DE F7FF FFFE       BL               TRANSMIT
  335 000002E2 F102 0201       ADD              R2, #1
  336 000002E6 2AC5            CMP              R2, #0XC5
  337 000002E8 D1F7            BNE              LOOP_C_3
  338 000002EA         
  339 000002EA E8BD 4007       POP{R0,          R1, R2, LR}
  340 000002EE 4770            BX               LR
  341 000002F0         
  342 000002F0         
  343 000002F0         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  344 000002F0         ;;;;; NUMBERS 0-9 BEGINNING
  345 000002F0         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  346 000002F0         ;N0   PUSH  {LR} 
  347 000002F0         ;   MOV  R5, #0X3E
  348 000002F0         ;   BL  TRANSMIT
  349 000002F0         ;   MOV  R5, #0X51
  350 000002F0         ;   BL  TRANSMIT
  351 000002F0         ;   MOV  R5, #0X49
  352 000002F0         ;   BL  TRANSMIT   
  353 000002F0         ;   MOV  R5, #0X45
  354 000002F0         ;   BL  TRANSMIT
  355 000002F0         ;   MOV  R5, #0X3E
  356 000002F0         ;   BL  TRANSMIT   
  357 000002F0         ;   POP  {LR}
  358 000002F0         ;   BX  LR
  359 000002F0         
  360 000002F0         ;N1   PUSH  {LR} 
  361 000002F0         ;   MOV  R5, #0X0
  362 000002F0         ;   BL  TRANSMIT
  363 000002F0         ;   MOV  R5, #0X42
  364 000002F0         ;   BL  TRANSMIT
  365 000002F0         ;   MOV  R5, #0X7F
  366 000002F0         ;   BL  TRANSMIT   
  367 000002F0         ;   MOV  R5, #0X40
  368 000002F0         ;   BL  TRANSMIT
  369 000002F0         ;   MOV  R5, #0X0
  370 000002F0         ;   BL  TRANSMIT   
  371 000002F0         ;   POP  {LR}
  372 000002F0         ;   BX  LR
  373 000002F0         
  374 000002F0         ;N2   PUSH  {LR} 
  375 000002F0         ;   MOV  R5, #0X42
  376 000002F0         ;   BL  TRANSMIT
  377 000002F0         ;   MOV  R5, #0X61
  378 000002F0         ;   BL  TRANSMIT



ARM Macro Assembler    Page 8 


  379 000002F0         ;   MOV  R5, #0X51
  380 000002F0         ;   BL  TRANSMIT   
  381 000002F0         ;   MOV  R5, #0X49
  382 000002F0         ;   BL  TRANSMIT
  383 000002F0         ;   MOV  R5, #0X46
  384 000002F0         ;   BL  TRANSMIT   
  385 000002F0         ;   POP  {LR}
  386 000002F0         ;   BX  LR
  387 000002F0         ; 
  388 000002F0         ;N3   PUSH  {LR} 
  389 000002F0         ;   MOV  R5, #0X21
  390 000002F0         ;   BL  TRANSMIT
  391 000002F0         ;   MOV  R5, #0X41
  392 000002F0         ;   BL  TRANSMIT
  393 000002F0         ;   MOV  R5, #0X45
  394 000002F0         ;   BL  TRANSMIT   
  395 000002F0         ;   MOV  R5, #0X4B
  396 000002F0         ;   BL  TRANSMIT
  397 000002F0         ;   MOV  R5, #0X31
  398 000002F0         ;   BL  TRANSMIT   
  399 000002F0         ;   POP  {LR}
  400 000002F0         ;   BX  LR
  401 000002F0         
  402 000002F0         ;N4   PUSH  {LR} 
  403 000002F0         ;   MOV  R5, #0X18
  404 000002F0         ;   BL  TRANSMIT
  405 000002F0         ;   MOV  R5, #0X14
  406 000002F0         ;   BL  TRANSMIT
  407 000002F0         ;   MOV  R5, #0X12
  408 000002F0         ;   BL  TRANSMIT   
  409 000002F0         ;   MOV  R5, #0X7F
  410 000002F0         ;   BL  TRANSMIT
  411 000002F0         ;   MOV  R5, #0X10
  412 000002F0         ;   BL  TRANSMIT   
  413 000002F0         ;   POP  {LR}
  414 000002F0         ;   BX  LR
  415 000002F0         
  416 000002F0         ;N5   PUSH  {LR} 
  417 000002F0         ;   MOV  R5, #0X27
  418 000002F0         ;   BL  TRANSMIT
  419 000002F0         ;   MOV  R5, #0X45
  420 000002F0         ;   BL  TRANSMIT
  421 000002F0         ;   MOV  R5, #0X45
  422 000002F0         ;   BL  TRANSMIT   
  423 000002F0         ;   MOV  R5, #0X45
  424 000002F0         ;   BL  TRANSMIT
  425 000002F0         ;   MOV  R5, #0X39
  426 000002F0         ;   BL  TRANSMIT   
  427 000002F0         ;   POP  {LR}
  428 000002F0         ;   BX  LR
  429 000002F0         
  430 000002F0         ;N6   PUSH  {LR} 
  431 000002F0         ;   MOV  R5, #0X3C
  432 000002F0         ;   BL  TRANSMIT
  433 000002F0         ;   MOV  R5, #0X4A
  434 000002F0         ;   BL  TRANSMIT
  435 000002F0         ;   MOV  R5, #0X49
  436 000002F0         ;   BL  TRANSMIT   
  437 000002F0         ;   MOV  R5, #0X49



ARM Macro Assembler    Page 9 


  438 000002F0         ;   BL  TRANSMIT
  439 000002F0         ;   MOV  R5, #0X30
  440 000002F0         ;   BL  TRANSMIT   
  441 000002F0         ;   POP  {LR}
  442 000002F0         ;   BX  LR
  443 000002F0         
  444 000002F0         ;N7   PUSH  {LR} 
  445 000002F0         ;   MOV  R5, #0X1
  446 000002F0         ;   BL  TRANSMIT
  447 000002F0         ;   MOV  R5, #0X71
  448 000002F0         ;   BL  TRANSMIT
  449 000002F0         ;   MOV  R5, #0X9
  450 000002F0         ;   BL  TRANSMIT   
  451 000002F0         ;   MOV  R5, #0X5
  452 000002F0         ;   BL  TRANSMIT
  453 000002F0         ;   MOV  R5, #0X3
  454 000002F0         ;   BL  TRANSMIT   
  455 000002F0         ;   POP  {LR}
  456 000002F0         ;   BX  LR
  457 000002F0         
  458 000002F0         ;N8   PUSH  {LR} 
  459 000002F0         ;   MOV  R5, #0X36
  460 000002F0         ;   BL  TRANSMIT
  461 000002F0         ;   MOV  R5, #0X49
  462 000002F0         ;   BL  TRANSMIT
  463 000002F0         ;   MOV  R5, #0X49
  464 000002F0         ;   BL  TRANSMIT   
  465 000002F0         ;   MOV  R5, #0X49
  466 000002F0         ;   BL  TRANSMIT
  467 000002F0         ;   MOV  R5, #0X36
  468 000002F0         ;   BL  TRANSMIT   
  469 000002F0         ;   POP  {LR}
  470 000002F0         ;   BX  LR
  471 000002F0         
  472 000002F0         ;N9   PUSH  {LR} 
  473 000002F0         ;   MOV  R5, #0X6
  474 000002F0         ;   BL  TRANSMIT
  475 000002F0         ;   MOV  R5, #0X49
  476 000002F0         ;   BL  TRANSMIT
  477 000002F0         ;   MOV  R5, #0X49
  478 000002F0         ;   BL  TRANSMIT   
  479 000002F0         ;   MOV  R5, #0X29
  480 000002F0         ;   BL  TRANSMIT
  481 000002F0         ;   MOV  R5, #0X1E
  482 000002F0         ;   BL  TRANSMIT   
  483 000002F0         ;   POP  {LR}
  484 000002F0         ;   BX  LR
  485 000002F0         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  486 000002F0         ;;;;; NUMBERS 0-9 FINISH
  487 000002F0         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
  488 000002F0         
  489 000002F0         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  490 000002F0         ;;;;; CHAR A-Z BEGINNING
  491 000002F0         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  492 000002F0         ;A   
  493 000002F0         ;   PUSH  {LR}
  494 000002F0         ;   MOV  R5, #0X7E
  495 000002F0         ;   BL  TRANSMIT
  496 000002F0         ;   MOV  R5, #0X11



ARM Macro Assembler    Page 10 


  497 000002F0         ;   BL  TRANSMIT
  498 000002F0         ;   MOV  R5, #0X11
  499 000002F0         ;   BL  TRANSMIT   
  500 000002F0         ;   MOV  R5, #0X11
  501 000002F0         ;   BL  TRANSMIT
  502 000002F0         ;   MOV  R5, #0X7E
  503 000002F0         ;   BL  TRANSMIT 
  504 000002F0         ;   POP  {LR}
  505 000002F0         ;   BX  LR
  506 000002F0         ;B_   PUSH  {LR} 
  507 000002F0         ;   
  508 000002F0         ;   POP  {LR}
  509 000002F0         ;   BX  LR   
  510 000002F0         ;C   PUSH  {LR} 
  511 000002F0         ;   
  512 000002F0         ;   POP  {LR}
  513 000002F0         ;   BX  LR
  514 000002F0         ;D   PUSH  {LR} 
  515 000002F0         ;   
  516 000002F0         ;   POP  {LR}
  517 000002F0         ;   BX  LR
  518 000002F0         ;E   PUSH  {LR} 
  519 000002F0         ;   
  520 000002F0         ;   POP  {LR}
  521 000002F0         ;   BX  LR   
  522 000002F0         
  523 000002F0         ;I   PUSH  {LR} 
  524 000002F0         ;   MOV  R5, #0X00
  525 000002F0         ;   BL  TRANSMIT
  526 000002F0         ;   MOV  R5, #0X41
  527 000002F0         ;   BL  TRANSMIT
  528 000002F0         ;   MOV  R5, #0X7F
  529 000002F0         ;   BL  TRANSMIT   
  530 000002F0         ;   MOV  R5, #0X41
  531 000002F0         ;   BL  TRANSMIT
  532 000002F0         ;   MOV  R5, #0X00
  533 000002F0         ;   BL  TRANSMIT
  534 000002F0         ;   POP  {LR}
  535 000002F0         ;   BX  LR
  536 000002F0         ; 
  537 000002F0         ;K   PUSH  {LR}
  538 000002F0         ;   MOV  R5, #0X7F
  539 000002F0         ;   BL  TRANSMIT
  540 000002F0         ;   MOV  R5, #0X8
  541 000002F0         ;   BL  TRANSMIT
  542 000002F0         ;   MOV  R5, #0X14
  543 000002F0         ;   BL  TRANSMIT
  544 000002F0         ;   MOV  R5, #0X22
  545 000002F0         ;   BL  TRANSMIT   
  546 000002F0         ;   MOV  R5, #0X41
  547 000002F0         ;   BL  TRANSMIT
  548 000002F0         ;   POP  {LR}
  549 000002F0         ;   BX  LR 
  550 000002F0         ;   
  551 000002F0         ;L   PUSH  {LR}
  552 000002F0         ;   MOV  R5, #0X7F
  553 000002F0         ;   BL  TRANSMIT
  554 000002F0         ;   MOV  R5, #0X40
  555 000002F0         ;   BL  TRANSMIT



ARM Macro Assembler    Page 11 


  556 000002F0         ;   MOV  R5, #0X40
  557 000002F0         ;   BL  TRANSMIT
  558 000002F0         ;   MOV  R5, #0X40
  559 000002F0         ;   BL  TRANSMIT   
  560 000002F0         ;   MOV  R5, #0X40
  561 000002F0         ;   BL  TRANSMIT   
  562 000002F0         ;   POP  {LR}
  563 000002F0         ;   BX  LR 
  564 000002F0         
  565 000002F0         
  566 000002F0         
  567 000002F0         ;M   PUSH  {LR}
  568 000002F0         ;   MOV  R5, #0X7F
  569 000002F0         ;   BL  TRANSMIT
  570 000002F0         ;   MOV  R5, #0X02
  571 000002F0         ;   BL  TRANSMIT
  572 000002F0         ;   MOV  R5, #0XC
  573 000002F0         ;   BL  TRANSMIT
  574 000002F0         ;   MOV  R5, #0X2
  575 000002F0         ;   BL  TRANSMIT   
  576 000002F0         ;   MOV  R5, #0X7F
  577 000002F0         ;   BL  TRANSMIT    
  578 000002F0         ;   POP  {LR}
  579 000002F0         ;   BX  LR
  580 000002F0         
  581 000002F0         ;N   PUSH  {LR}   
  582 000002F0         ;   MOV  R5, #0X7F
  583 000002F0         ;   BL  TRANSMIT
  584 000002F0         ;   MOV  R5, #0X04
  585 000002F0         ;   BL  TRANSMIT
  586 000002F0         ;   MOV  R5, #0X8
  587 000002F0         ;   BL  TRANSMIT
  588 000002F0         ;   MOV  R5, #0X10
  589 000002F0         ;   BL  TRANSMIT   
  590 000002F0         ;   MOV  R5, #0X7F
  591 000002F0         ;   BL  TRANSMIT   
  592 000002F0         ;   POP  {LR}
  593 000002F0         ;   BX  LR 
  594 000002F0         
  595 000002F0         ;S   PUSH  {LR}   
  596 000002F0         ;   MOV  R5, #0X46
  597 000002F0         ;   BL  TRANSMIT
  598 000002F0         ;   MOV  R5, #0X49
  599 000002F0         ;   BL  TRANSMIT
  600 000002F0         ;   MOV  R5, #0X49
  601 000002F0         ;   BL  TRANSMIT
  602 000002F0         ;   MOV  R5, #0X49
  603 000002F0         ;   BL  TRANSMIT   
  604 000002F0         ;   MOV  R5, #0X31
  605 000002F0         ;   BL  TRANSMIT   
  606 000002F0         ;   POP  {LR}
  607 000002F0         ;   BX  LR  
  608 000002F0         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  609 000002F0         ;;;;; CHAR A-Z FINISH
  610 000002F0         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  611 000002F0                 ALIGN
  612 000002F0                 END
              400043FC 
              40038028 



ARM Macro Assembler    Page 12 


              40038004 
              4003800C 
              20000400 
              2000040A 
              20000410 
              20000418 
              2000041E 
              20000424 
              2000042A 
              40038088 
              400380A8 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\__main.d -o.\objects\__main.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\__main.lst __main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BATTLE 00000090

Symbol: BATTLE
   Definitions
      At line 93 in file __main.s
   Uses
      At line 73 in file __main.s
      At line 80 in file __main.s
      At line 87 in file __main.s

CLEAR 00000210

Symbol: CLEAR
   Definitions
      At line 245 in file __main.s
   Uses
      At line 33 in file __main.s
Comment: CLEAR used once
CLEARBOX1 00000230

Symbol: CLEARBOX1
   Definitions
      At line 260 in file __main.s
   Uses
      None
Comment: CLEARBOX1 unused
CLEARBOX2 00000270

Symbol: CLEARBOX2
   Definitions
      At line 288 in file __main.s
   Uses
      None
Comment: CLEARBOX2 unused
CLEARBOX3 000002B0

Symbol: CLEARBOX3
   Definitions
      At line 316 in file __main.s
   Uses
      None
Comment: CLEARBOX3 unused
CURSOR 000000F0

Symbol: CURSOR
   Definitions
      At line 122 in file __main.s
   Uses
      At line 95 in file __main.s
      At line 102 in file __main.s
      At line 109 in file __main.s
      At line 116 in file __main.s

FIN 0000020E

Symbol: FIN
   Definitions
      At line 238 in file __main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 239 in file __main.s
Comment: FIN used once
LOOP 0000021A

Symbol: LOOP
   Definitions
      At line 248 in file __main.s
   Uses
      At line 252 in file __main.s
Comment: LOOP used once
LOOP_C 0000025A

Symbol: LOOP_C
   Definitions
      At line 277 in file __main.s
   Uses
      At line 281 in file __main.s
Comment: LOOP_C used once
LOOP_C_2 0000029A

Symbol: LOOP_C_2
   Definitions
      At line 305 in file __main.s
   Uses
      At line 309 in file __main.s
Comment: LOOP_C_2 used once
LOOP_C_3 000002DA

Symbol: LOOP_C_3
   Definitions
      At line 333 in file __main.s
   Uses
      At line 337 in file __main.s
Comment: LOOP_C_3 used once
__main 00000000

Symbol: __main
   Definitions
      At line 25 in file __main.s
   Uses
      At line 23 in file __main.s
Comment: __main used once
getsample 0000002A

Symbol: getsample
   Definitions
      At line 57 in file __main.s
   Uses
      At line 236 in file __main.s
Comment: getsample used once
loop 00000034

Symbol: loop
   Definitions
      At line 62 in file __main.s
   Uses
      At line 65 in file __main.s
Comment: loop used once
main 00000000



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: main
   Definitions
      At line 9 in file __main.s
   Uses
      None
Comment: main unused
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 5 in file __main.s
   Uses
      At line 67 in file __main.s
Comment: ADC0_ISC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 4 in file __main.s
   Uses
      At line 57 in file __main.s
Comment: ADC0_PSSI used once
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 1 in file __main.s
   Uses
      At line 62 in file __main.s
Comment: ADC0_RIS used once
ADC0_SSFIFO2 40038088

Symbol: ADC0_SSFIFO2
   Definitions
      At line 2 in file __main.s
   Uses
      At line 123 in file __main.s
Comment: ADC0_SSFIFO2 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 3 in file __main.s
   Uses
      At line 127 in file __main.s
Comment: ADC0_SSFIFO3 used once
ADC0_SSFSTAT2 4003808C

Symbol: ADC0_SSFSTAT2
   Definitions
      At line 6 in file __main.s
   Uses
      None
Comment: ADC0_SSFSTAT2 unused
PORTA_DATA 400043FC

Symbol: PORTA_DATA
   Definitions
      At line 7 in file __main.s
   Uses
      At line 29 in file __main.s
      At line 134 in file __main.s
      At line 145 in file __main.s
      At line 173 in file __main.s
      At line 184 in file __main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 205 in file __main.s
      At line 216 in file __main.s
      At line 261 in file __main.s
      At line 271 in file __main.s
      At line 289 in file __main.s
      At line 299 in file __main.s
      At line 317 in file __main.s
      At line 327 in file __main.s

POSITION 20000400

Symbol: POSITION
   Definitions
      At line 8 in file __main.s
   Uses
      At line 74 in file __main.s
      At line 81 in file __main.s
      At line 88 in file __main.s
      At line 96 in file __main.s
      At line 103 in file __main.s
      At line 110 in file __main.s
      At line 117 in file __main.s

8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BATTLESHIP 00000000

Symbol: BATTLESHIP
   Definitions
      At line 17 in file __main.s
   Uses
      At line 100 in file __main.s
      At line 107 in file __main.s
      At line 114 in file __main.s
      At line 121 in file __main.s

BOUNDARY 00000000

Symbol: BOUNDARY
   Definitions
      At line 18 in file __main.s
   Uses
      At line 34 in file __main.s
Comment: BOUNDARY used once
CIVILIAN 00000000

Symbol: CIVILIAN
   Definitions
      At line 19 in file __main.s
   Uses
      At line 78 in file __main.s
      At line 85 in file __main.s
      At line 92 in file __main.s

DELAY 00000000

Symbol: DELAY
   Definitions
      At line 13 in file __main.s
   Uses
      None
Comment: DELAY unused
GPIOPortF_Handler 00000000

Symbol: GPIOPortF_Handler
   Definitions
      At line 21 in file __main.s
   Uses
      None
Comment: GPIOPortF_Handler unused
GPIO_INIT 00000000

Symbol: GPIO_INIT
   Definitions
      At line 22 in file __main.s
   Uses
      At line 28 in file __main.s
Comment: GPIO_INIT used once
Init 00000000

Symbol: Init
   Definitions
      At line 12 in file __main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 26 in file __main.s
Comment: Init used once
LCD_INIT 00000000

Symbol: LCD_INIT
   Definitions
      At line 11 in file __main.s
   Uses
      At line 27 in file __main.s
Comment: LCD_INIT used once
OutChar 00000000

Symbol: OutChar
   Definitions
      At line 14 in file __main.s
   Uses
      None
Comment: OutChar unused
TIMER_INIT 00000000

Symbol: TIMER_INIT
   Definitions
      At line 16 in file __main.s
   Uses
      None
Comment: TIMER_INIT unused
TRANSMIT 00000000

Symbol: TRANSMIT
   Definitions
      At line 15 in file __main.s
   Uses
      At line 140 in file __main.s
      At line 143 in file __main.s
      At line 162 in file __main.s
      At line 164 in file __main.s
      At line 166 in file __main.s
      At line 168 in file __main.s
      At line 170 in file __main.s
      At line 179 in file __main.s
      At line 182 in file __main.s
      At line 195 in file __main.s
      At line 197 in file __main.s
      At line 199 in file __main.s
      At line 201 in file __main.s
      At line 203 in file __main.s
      At line 211 in file __main.s
      At line 214 in file __main.s
      At line 227 in file __main.s
      At line 229 in file __main.s
      At line 231 in file __main.s
      At line 233 in file __main.s
      At line 235 in file __main.s
      At line 249 in file __main.s
      At line 267 in file __main.s
      At line 269 in file __main.s
      At line 278 in file __main.s
      At line 295 in file __main.s
      At line 297 in file __main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 306 in file __main.s
      At line 323 in file __main.s
      At line 325 in file __main.s
      At line 334 in file __main.s

Timer0A_Handler 00000000

Symbol: Timer0A_Handler
   Definitions
      At line 20 in file __main.s
   Uses
      None
Comment: Timer0A_Handler unused
12 symbols
371 symbols in table
