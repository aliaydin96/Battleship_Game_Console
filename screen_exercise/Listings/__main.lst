


ARM Macro Assembler    Page 1 


    1 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
    2 00000000 40038088 
                       ADC0_SSFIFO2
                               EQU              0x40038088  ; Channel 2 results
                                                            
    3 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                             
    4 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
    5 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C  ; ISC
    6 00000000 4003808C 
                       ADC0_SSFSTAT2
                               EQU              0X4003808C
    7 00000000 400043FC 
                       PORTA_DATA
                               EQU              0x400043FC
    8 00000000 20000400 
                       POSITION
                               EQU              0X20000400
    9 00000000 20000419 
                       BATTLE_COUNTER
                               EQU              0X20000419
   10 00000000 2000041A 
                       CIV_COUNTER
                               EQU              0X2000041A
   11 00000000 2000041B 
                       SCREEN_COUNTER
                               EQU              0X2000041B
   12 00000000                 AREA             main, CODE, READONLY
   13 00000000                 THUMB
   14 00000000                 IMPORT           LCD_INIT
   15 00000000                 IMPORT           Init
   16 00000000                 IMPORT           DELAY
   17 00000000                 EXTERN           OutChar
   18 00000000                 EXTERN           TRANSMIT
   19 00000000                 EXTERN           TIMER_INIT
   20 00000000                 EXTERN           BATTLESHIP
   21 00000000                 EXTERN           BOUNDARY
   22 00000000                 EXTERN           CIVILIAN
   23 00000000                 EXTERN           Timer0A_Handler
   24 00000000                 EXTERN           GPIOPortF_Handler
   25 00000000                 EXTERN           GPIO_INIT
   26 00000000                 EXPORT           __main
   27 00000000         
   28 00000000         __main
   29 00000000 F7FF FFFE       BL               Init
   30 00000004 F7FF FFFE       BL               LCD_INIT
   31 00000008 F7FF FFFE       BL               GPIO_INIT
   32 0000000C 497C            LDR              R1,=PORTA_DATA
   33 0000000E 6808            LDR              R0,[R1]
   34 00000010 F040 0040       ORR              R0,#0x40
   35 00000014 6008            STR              R0,[R1]



ARM Macro Assembler    Page 2 


   36 00000016 F000 F8A6       BL               CLEAR
   37 0000001A F7FF FFFE       BL               BOUNDARY
   38 0000001E         ;   BL  TIMER_INIT
   39 0000001E         ;   MOV R7, #21  ;this counter for timer 
   40 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   41 0000001E         ;;;;; REGISTERS
   42 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   43 0000001E         ;;;;; R0  ==> GENERAL PURPOSES
   44 0000001E         ;;;;; R1  ==> GENERAL PURPOSES
   45 0000001E         ;;;;; R2  ==> CURSOR'S POSITION
   46 0000001E         ;;;;; R3  ==> X POSITION
   47 0000001E         ;;;;; R4  ==> CURSOR'S POSITION
   48 0000001E         ;;;;; R5  ==> DISPLAY REGISTER
   49 0000001E         ;;;;; R6  ==> Y POSITION
   50 0000001E         ;;;;; R7  ==> TIMER'S COUNTER
   51 0000001E         ;;;;; R8  ==> ADC RESULT 
   52 0000001E         ;;;;; R9  ==> ADC RESULT
   53 0000001E         ;;;;; R10 ==> FREE
   54 0000001E         ;;;;; R11 ==> FREE
   55 0000001E         ;;;;; R12 ==> FREE
   56 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   57 0000001E F04F 0A00       MOV              R10, #0
   58 00000022 4878            LDR              R0, =BATTLE_COUNTER
   59 00000024 F880 A000       STRB             R10, [R0]
   60 00000028 4977            LDR              R1, =CIV_COUNTER
   61 0000002A F881 A000       STRB             R10, [R1]
   62 0000002E 4977            LDR              R1, =SCREEN_COUNTER
   63 00000030 F881 A000       STRB             R10, [R1]
   64 00000034         
   65 00000034 4976    getsample
                               LDR              R1,=ADC0_PSSI 
                                                            ; request a sample
   66 00000036 6808            LDR              R0,[R1]     ;
   67 00000038 F040 000C       ORR              R0,R0,#0x0C ; get a sample
   68 0000003C 6008            STR              R0,[R1]     ;
   69 0000003E         
   70 0000003E 4975    loop    LDR              R1,=ADC0_RIS ; check for interr
                                                            up flag
   71 00000040 6808            LDR              R0,[R1]     ;
   72 00000042 F010 000C       ANDS             R0,#0x0C    ;
   73 00000046 D0FA            BEQ              loop
   74 00000048         
   75 00000048 4973            LDR              R1,=ADC0_ISC ; clear the interr
                                                            upt flag
   76 0000004A 6808            LDR              R0,[R1]     ;
   77 0000004C F040 000C       ORR              R0,#0x0C    ;
   78 00000050 6008            STR              R0,[R1]     ; Interrupt flag is
                                                             cleared
   79 00000052         
   80 00000052 496E            LDR              R1, =SCREEN_COUNTER
   81 00000054 780C            LDRB             R4, [R1]
   82 00000056 2C00            CMP              R4, #0
   83 00000058 BF08 F000 
              F858             BLEQ             DISPLAY_SHIP
   84 0000005E 2C01            CMP              R4, #1
   85 00000060 BF08 F000 
              F8A3             BLEQ             CLEARBOX
   86 00000066 2C03            CMP              R4, #3
   87 00000068 BF08 F000 



ARM Macro Assembler    Page 3 


              F88C             BLEQ             DELAY_5MS
   88 0000006E         
   89 0000006E         CURSOR
   90 0000006E 496B            LDR              R1,=ADC0_SSFIFO2 ;
   91 00000070 F8D1 8000       LDR              R8,[R1]     ; R8 is the data PE
                                                            3
   92 00000074 F04F 00AE       MOV              R0,#174     ; get the first dig
                                                            it
   93 00000078 FBB8 F8F0       UDIV             R8,R8,R0    ;   
   94 0000007C 4968            LDR              R1, =ADC0_SSFIFO3
   95 0000007E F8D1 9000       LDR              R9,[R1]
   96 00000082 F04F 004B       MOV              R0,#75      ; get the first dig
                                                            it
   97 00000086 FBB9 F3F0       UDIV             R3,R9,R0    ;
   98 0000008A F103 0384       ADD              R3, #0X84
   99 0000008E F04F 0641       MOV              R6, #0X41
  100 00000092 F1B8 0801       SUBS             R8, #1
  101 00000096 BF0B 2201       MOVEQ            R2, #0X1
  102 0000009A 2202            MOVNE            R2, #0X2
  103 0000009C 2403            MOVEQ            R4, #0X3
  104 0000009E 2407            MOVNE            R4, #0X7
  105 000000A0         
  106 000000A0         LOP
  107 000000A0 4957            LDR              R1,=PORTA_DATA
  108 000000A2 6808            LDR              R0,[R1]
  109 000000A4 F020 0040       BIC              R0,#0x40
  110 000000A8 6008            STR              R0,[R1]
  111 000000AA         
  112 000000AA 461D            MOV              R5, R3
  113 000000AC F7FF FFFE       BL               TRANSMIT
  114 000000B0 4635            MOV              R5, R6
  115 000000B2 F7FF FFFE       BL               TRANSMIT
  116 000000B6         
  117 000000B6 4952            LDR              R1,=PORTA_DATA
  118 000000B8 6808            LDR              R0,[R1]
  119 000000BA F040 0040       ORR              R0,#0x40
  120 000000BE 6008            STR              R0,[R1]
  121 000000C0 2E41            CMP              R6, #0X41
  122 000000C2 BF04 FA02 
              F208             LSLEQ            R2, R8
  123 000000C8 FA04 F408       LSLEQ            R4, R8
  124 000000CC D007            BEQ              WORK
  125 000000CE 2E42            CMP              R6, #0X42
  126 000000D0 BF04 BA52       REV16EQ          R2, R2
  127 000000D4 BA64            REV16EQ          R4, R4
  128 000000D6 2E43            CMP              R6, #0X43
  129 000000D8 BF04 BA12       REVEQ            R2, R2
  130 000000DC BA24            REVEQ            R4, R4
  131 000000DE         WORK
  132 000000DE 2B85            CMP              R3, #0X85
  133 000000E0 BF0C 25FF       MOVEQ            R5, #0XFF
  134 000000E4 2500            MOVNE            R5, #0X0
  135 000000E6 F7FF FFFE       BL               TRANSMIT
  136 000000EA 4615            MOV              R5, R2      ;NE
  137 000000EC F7FF FFFE       BL               TRANSMIT
  138 000000F0 4625            MOV              R5, R4
  139 000000F2 F7FF FFFE       BL               TRANSMIT
  140 000000F6 4615            MOV              R5, R2
  141 000000F8 F7FF FFFE       BL               TRANSMIT



ARM Macro Assembler    Page 4 


  142 000000FC F04F 0500       MOV              R5, #0X0
  143 00000100 F7FF FFFE       BL               TRANSMIT
  144 00000104 F106 0601       ADD              R6, #1
  145 00000108 2E44            CMP              R6, #0X44
  146 0000010A D1C9            BNE              LOP
  147 0000010C E792            B                getsample   ;      
  148 0000010E         
  149 0000010E         DISPLAY_SHIP
  150 0000010E B510            PUSH             {R4, LR}
  151 00000110 493D            LDR              R1, =CIV_COUNTER
  152 00000112 780C            LDRB             R4, [R1]
  153 00000114 2C00            CMP              R4, #0
  154 00000116 D90C            BLS              BATTLE
  155 00000118 4942            LDR              R1, =POSITION
  156 0000011A F7FF FFFE       BL               CIVILIAN
  157 0000011E 2C01            CMP              R4, #1
  158 00000120 D907            BLS              BATTLE
  159 00000122 4941            LDR              R1, =(POSITION + 3)
  160 00000124 F7FF FFFE       BL               CIVILIAN
  161 00000128 2C02            CMP              R4, #2
  162 0000012A D902            BLS              BATTLE
  163 0000012C 493F            LDR              R1, =(POSITION + 6)
  164 0000012E F7FF FFFE       BL               CIVILIAN
  165 00000132         
  166 00000132         BATTLE
  167 00000132 4834            LDR              R0, =BATTLE_COUNTER
  168 00000134 7802            LDRB             R2, [R0]
  169 00000136 2A00            CMP              R2, #0
  170 00000138 D912            BLS              FINISH
  171 0000013A 493D            LDR              R1, =(POSITION + 13)
  172 0000013C F7FF FFFE       BL               BATTLESHIP
  173 00000140 2A01            CMP              R2, #1
  174 00000142 D90D            BLS              FINISH
  175 00000144 493B            LDR              R1, =(POSITION + 16)
  176 00000146 F7FF FFFE       BL               BATTLESHIP
  177 0000014A 2A02            CMP              R2, #2
  178 0000014C D908            BLS              FINISH
  179 0000014E 493A            LDR              R1, =(POSITION + 19)
  180 00000150 F7FF FFFE       BL               BATTLESHIP
  181 00000154 2A03            CMP              R2, #3
  182 00000156 D903            BLS              FINISH
  183 00000158 4938            LDR              R1, =(POSITION + 22)
  184 0000015A F7FF FFFE       BL               BATTLESHIP
  185 0000015E E7FF            B                FINISH
  186 00000160         FINISH
  187 00000160 E8BD 4010       POP              {R4, LR}
  188 00000164 4770            BX               LR
  189 00000166         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  190 00000166         ;;;;;; CLEAR WHOLE SCREEN
  191 00000166         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  192 00000166 B503    CLEAR   PUSH             {R0,R1,LR}
  193 00000168 F04F 0000       MOV              R0,#0
  194 0000016C F240 11F7       MOV              R1, #503
  195 00000170 F04F 0500 
                       LOOP    MOV              R5, #0X0
  196 00000174 F7FF FFFE       BL               TRANSMIT
  197 00000178 F100 0001       ADD              R0, #1
  198 0000017C 4288            CMP              R0,R1
  199 0000017E D1F7            BNE              LOOP



ARM Macro Assembler    Page 5 


  200 00000180 E8BD 4003       POP              {R0,R1,LR}
  201 00000184 4770            BX               LR
  202 00000186         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  203 00000186         DELAY_5MS
  204 00000186 B500            PUSH             {LR}
  205 00000188 F7FF FFC1       BL               DISPLAY_SHIP
  206 0000018C F640 1000 
              F2C0 003D        MOV32            R0, #4000000
  207 00000194 F7FF FFFE       BL               DELAY
  208 00000198 F000 F808       BL               CLEARBOX
  209 0000019C 491B            LDR              R1, =SCREEN_COUNTER
  210 0000019E 780C            LDRB             R4, [R1]
  211 000001A0 BF08 3401       ADDEQ            R4, #1
  212 000001A4 700C            STRB             R4, [R1]
  213 000001A6 F85D EB04       POP              {LR}
  214 000001AA 4770            BX               LR
  215 000001AC         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  216 000001AC         ;;;;;; CLEAR Y = 1-2-3-4 ROWS
  217 000001AC         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  218 000001AC B507    CLEARBOX
                               PUSH{R0,         R1, R2, LR}
  219 000001AE F04F 0641       MOV              R6, #0X41
  220 000001B2         LOOP_CL
  221 000001B2 4913            LDR              R1,=PORTA_DATA
  222 000001B4 6808            LDR              R0,[R1]
  223 000001B6 F020 0040       BIC              R0,#0x40
  224 000001BA 6008            STR              R0,[R1]
  225 000001BC         
  226 000001BC F04F 0586       MOV              R5, #0X86
  227 000001C0 F7FF FFFE       BL               TRANSMIT
  228 000001C4 4635            MOV              R5, R6
  229 000001C6 F7FF FFFE       BL               TRANSMIT
  230 000001CA         
  231 000001CA 490D            LDR              R1,=PORTA_DATA
  232 000001CC 6808            LDR              R0,[R1]
  233 000001CE F040 0040       ORR              R0,#0x40
  234 000001D2 6008            STR              R0,[R1]
  235 000001D4         
  236 000001D4 F04F 0286       MOV              R2, #0X86
  237 000001D8 F04F 0500 
                       LOOP_C  MOV              R5, #0X0
  238 000001DC F7FF FFFE       BL               TRANSMIT
  239 000001E0 F102 0201       ADD              R2, #1
  240 000001E4 2AC5            CMP              R2, #0XC5
  241 000001E6 D1F7            BNE              LOOP_C
  242 000001E8 F106 0601       ADD              R6, #1
  243 000001EC 2E45            CMP              R6, #0X45
  244 000001EE D1E0            BNE              LOOP_CL
  245 000001F0         
  246 000001F0 4906            LDR              R1, =SCREEN_COUNTER
  247 000001F2 780C            LDRB             R4, [R1]
  248 000001F4 F104 0401       ADD              R4, #1
  249 000001F8 700C            STRB             R4, [R1]
  250 000001FA E8BD 4007       POP{R0,          R1, R2, LR}
  251 000001FE 4770            BX               LR
  252 00000200         
  253 00000200         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  254 00000200         ;;;;; NUMBERS 0-9 BEGINNING
  255 00000200         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



ARM Macro Assembler    Page 6 


  256 00000200         ;N0   PUSH  {LR} 
  257 00000200         ;   MOV  R5, #0X3E
  258 00000200         ;   BL  TRANSMIT
  259 00000200         ;   MOV  R5, #0X51
  260 00000200         ;   BL  TRANSMIT
  261 00000200         ;   MOV  R5, #0X49
  262 00000200         ;   BL  TRANSMIT   
  263 00000200         ;   MOV  R5, #0X45
  264 00000200         ;   BL  TRANSMIT
  265 00000200         ;   MOV  R5, #0X3E
  266 00000200         ;   BL  TRANSMIT   
  267 00000200         ;   POP  {LR}
  268 00000200         ;   BX  LR
  269 00000200         
  270 00000200         ;N1   PUSH  {LR} 
  271 00000200         ;   MOV  R5, #0X0
  272 00000200         ;   BL  TRANSMIT
  273 00000200         ;   MOV  R5, #0X42
  274 00000200         ;   BL  TRANSMIT
  275 00000200         ;   MOV  R5, #0X7F
  276 00000200         ;   BL  TRANSMIT   
  277 00000200         ;   MOV  R5, #0X40
  278 00000200         ;   BL  TRANSMIT
  279 00000200         ;   MOV  R5, #0X0
  280 00000200         ;   BL  TRANSMIT   
  281 00000200         ;   POP  {LR}
  282 00000200         ;   BX  LR
  283 00000200         
  284 00000200         ;N2   PUSH  {LR} 
  285 00000200         ;   MOV  R5, #0X42
  286 00000200         ;   BL  TRANSMIT
  287 00000200         ;   MOV  R5, #0X61
  288 00000200         ;   BL  TRANSMIT
  289 00000200         ;   MOV  R5, #0X51
  290 00000200         ;   BL  TRANSMIT   
  291 00000200         ;   MOV  R5, #0X49
  292 00000200         ;   BL  TRANSMIT
  293 00000200         ;   MOV  R5, #0X46
  294 00000200         ;   BL  TRANSMIT   
  295 00000200         ;   POP  {LR}
  296 00000200         ;   BX  LR
  297 00000200         ; 
  298 00000200         ;N3   PUSH  {LR} 
  299 00000200         ;   MOV  R5, #0X21
  300 00000200         ;   BL  TRANSMIT
  301 00000200         ;   MOV  R5, #0X41
  302 00000200         ;   BL  TRANSMIT
  303 00000200         ;   MOV  R5, #0X45
  304 00000200         ;   BL  TRANSMIT   
  305 00000200         ;   MOV  R5, #0X4B
  306 00000200         ;   BL  TRANSMIT
  307 00000200         ;   MOV  R5, #0X31
  308 00000200         ;   BL  TRANSMIT   
  309 00000200         ;   POP  {LR}
  310 00000200         ;   BX  LR
  311 00000200         
  312 00000200         ;N4   PUSH  {LR} 
  313 00000200         ;   MOV  R5, #0X18
  314 00000200         ;   BL  TRANSMIT



ARM Macro Assembler    Page 7 


  315 00000200         ;   MOV  R5, #0X14
  316 00000200         ;   BL  TRANSMIT
  317 00000200         ;   MOV  R5, #0X12
  318 00000200         ;   BL  TRANSMIT   
  319 00000200         ;   MOV  R5, #0X7F
  320 00000200         ;   BL  TRANSMIT
  321 00000200         ;   MOV  R5, #0X10
  322 00000200         ;   BL  TRANSMIT   
  323 00000200         ;   POP  {LR}
  324 00000200         ;   BX  LR
  325 00000200         
  326 00000200         ;N5   PUSH  {LR} 
  327 00000200         ;   MOV  R5, #0X27
  328 00000200         ;   BL  TRANSMIT
  329 00000200         ;   MOV  R5, #0X45
  330 00000200         ;   BL  TRANSMIT
  331 00000200         ;   MOV  R5, #0X45
  332 00000200         ;   BL  TRANSMIT   
  333 00000200         ;   MOV  R5, #0X45
  334 00000200         ;   BL  TRANSMIT
  335 00000200         ;   MOV  R5, #0X39
  336 00000200         ;   BL  TRANSMIT   
  337 00000200         ;   POP  {LR}
  338 00000200         ;   BX  LR
  339 00000200         
  340 00000200         ;N6   PUSH  {LR} 
  341 00000200         ;   MOV  R5, #0X3C
  342 00000200         ;   BL  TRANSMIT
  343 00000200         ;   MOV  R5, #0X4A
  344 00000200         ;   BL  TRANSMIT
  345 00000200         ;   MOV  R5, #0X49
  346 00000200         ;   BL  TRANSMIT   
  347 00000200         ;   MOV  R5, #0X49
  348 00000200         ;   BL  TRANSMIT
  349 00000200         ;   MOV  R5, #0X30
  350 00000200         ;   BL  TRANSMIT   
  351 00000200         ;   POP  {LR}
  352 00000200         ;   BX  LR
  353 00000200         
  354 00000200         ;N7   PUSH  {LR} 
  355 00000200         ;   MOV  R5, #0X1
  356 00000200         ;   BL  TRANSMIT
  357 00000200         ;   MOV  R5, #0X71
  358 00000200         ;   BL  TRANSMIT
  359 00000200         ;   MOV  R5, #0X9
  360 00000200         ;   BL  TRANSMIT   
  361 00000200         ;   MOV  R5, #0X5
  362 00000200         ;   BL  TRANSMIT
  363 00000200         ;   MOV  R5, #0X3
  364 00000200         ;   BL  TRANSMIT   
  365 00000200         ;   POP  {LR}
  366 00000200         ;   BX  LR
  367 00000200         
  368 00000200         ;N8   PUSH  {LR} 
  369 00000200         ;   MOV  R5, #0X36
  370 00000200         ;   BL  TRANSMIT
  371 00000200         ;   MOV  R5, #0X49
  372 00000200         ;   BL  TRANSMIT
  373 00000200         ;   MOV  R5, #0X49



ARM Macro Assembler    Page 8 


  374 00000200         ;   BL  TRANSMIT   
  375 00000200         ;   MOV  R5, #0X49
  376 00000200         ;   BL  TRANSMIT
  377 00000200         ;   MOV  R5, #0X36
  378 00000200         ;   BL  TRANSMIT   
  379 00000200         ;   POP  {LR}
  380 00000200         ;   BX  LR
  381 00000200         
  382 00000200         ;N9   PUSH  {LR} 
  383 00000200         ;   MOV  R5, #0X6
  384 00000200         ;   BL  TRANSMIT
  385 00000200         ;   MOV  R5, #0X49
  386 00000200         ;   BL  TRANSMIT
  387 00000200         ;   MOV  R5, #0X49
  388 00000200         ;   BL  TRANSMIT   
  389 00000200         ;   MOV  R5, #0X29
  390 00000200         ;   BL  TRANSMIT
  391 00000200         ;   MOV  R5, #0X1E
  392 00000200         ;   BL  TRANSMIT   
  393 00000200         ;   POP  {LR}
  394 00000200         ;   BX  LR
  395 00000200         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  396 00000200         ;;;;; NUMBERS 0-9 FINISH
  397 00000200         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
  398 00000200         
  399 00000200         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  400 00000200         ;;;;; CHAR A-Z BEGINNING
  401 00000200         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  402 00000200         ;A   
  403 00000200         ;   PUSH  {LR}
  404 00000200         ;   MOV  R5, #0X7E
  405 00000200         ;   BL  TRANSMIT
  406 00000200         ;   MOV  R5, #0X11
  407 00000200         ;   BL  TRANSMIT
  408 00000200         ;   MOV  R5, #0X11
  409 00000200         ;   BL  TRANSMIT   
  410 00000200         ;   MOV  R5, #0X11
  411 00000200         ;   BL  TRANSMIT
  412 00000200         ;   MOV  R5, #0X7E
  413 00000200         ;   BL  TRANSMIT 
  414 00000200         ;   POP  {LR}
  415 00000200         ;   BX  LR
  416 00000200         ;B_   PUSH  {LR} 
  417 00000200         ;   
  418 00000200         ;   POP  {LR}
  419 00000200         ;   BX  LR   
  420 00000200         ;C   PUSH  {LR} 
  421 00000200         ;   
  422 00000200         ;   POP  {LR}
  423 00000200         ;   BX  LR
  424 00000200         ;D   PUSH  {LR} 
  425 00000200         ;   
  426 00000200         ;   POP  {LR}
  427 00000200         ;   BX  LR
  428 00000200         ;E   PUSH  {LR} 
  429 00000200         ;   
  430 00000200         ;   POP  {LR}
  431 00000200         ;   BX  LR   
  432 00000200         



ARM Macro Assembler    Page 9 


  433 00000200         ;I   PUSH  {LR} 
  434 00000200         ;   MOV  R5, #0X00
  435 00000200         ;   BL  TRANSMIT
  436 00000200         ;   MOV  R5, #0X41
  437 00000200         ;   BL  TRANSMIT
  438 00000200         ;   MOV  R5, #0X7F
  439 00000200         ;   BL  TRANSMIT   
  440 00000200         ;   MOV  R5, #0X41
  441 00000200         ;   BL  TRANSMIT
  442 00000200         ;   MOV  R5, #0X00
  443 00000200         ;   BL  TRANSMIT
  444 00000200         ;   POP  {LR}
  445 00000200         ;   BX  LR
  446 00000200         ; 
  447 00000200         ;K   PUSH  {LR}
  448 00000200         ;   MOV  R5, #0X7F
  449 00000200         ;   BL  TRANSMIT
  450 00000200         ;   MOV  R5, #0X8
  451 00000200         ;   BL  TRANSMIT
  452 00000200         ;   MOV  R5, #0X14
  453 00000200         ;   BL  TRANSMIT
  454 00000200         ;   MOV  R5, #0X22
  455 00000200         ;   BL  TRANSMIT   
  456 00000200         ;   MOV  R5, #0X41
  457 00000200         ;   BL  TRANSMIT
  458 00000200         ;   POP  {LR}
  459 00000200         ;   BX  LR 
  460 00000200         ;   
  461 00000200         ;L   PUSH  {LR}
  462 00000200         ;   MOV  R5, #0X7F
  463 00000200         ;   BL  TRANSMIT
  464 00000200         ;   MOV  R5, #0X40
  465 00000200         ;   BL  TRANSMIT
  466 00000200         ;   MOV  R5, #0X40
  467 00000200         ;   BL  TRANSMIT
  468 00000200         ;   MOV  R5, #0X40
  469 00000200         ;   BL  TRANSMIT   
  470 00000200         ;   MOV  R5, #0X40
  471 00000200         ;   BL  TRANSMIT   
  472 00000200         ;   POP  {LR}
  473 00000200         ;   BX  LR 
  474 00000200         
  475 00000200         
  476 00000200         
  477 00000200         ;M   PUSH  {LR}
  478 00000200         ;   MOV  R5, #0X7F
  479 00000200         ;   BL  TRANSMIT
  480 00000200         ;   MOV  R5, #0X02
  481 00000200         ;   BL  TRANSMIT
  482 00000200         ;   MOV  R5, #0XC
  483 00000200         ;   BL  TRANSMIT
  484 00000200         ;   MOV  R5, #0X2
  485 00000200         ;   BL  TRANSMIT   
  486 00000200         ;   MOV  R5, #0X7F
  487 00000200         ;   BL  TRANSMIT    
  488 00000200         ;   POP  {LR}
  489 00000200         ;   BX  LR
  490 00000200         
  491 00000200         ;N   PUSH  {LR}   



ARM Macro Assembler    Page 10 


  492 00000200         ;   MOV  R5, #0X7F
  493 00000200         ;   BL  TRANSMIT
  494 00000200         ;   MOV  R5, #0X04
  495 00000200         ;   BL  TRANSMIT
  496 00000200         ;   MOV  R5, #0X8
  497 00000200         ;   BL  TRANSMIT
  498 00000200         ;   MOV  R5, #0X10
  499 00000200         ;   BL  TRANSMIT   
  500 00000200         ;   MOV  R5, #0X7F
  501 00000200         ;   BL  TRANSMIT   
  502 00000200         ;   POP  {LR}
  503 00000200         ;   BX  LR 
  504 00000200         
  505 00000200         ;S   PUSH  {LR}   
  506 00000200         ;   MOV  R5, #0X46
  507 00000200         ;   BL  TRANSMIT
  508 00000200         ;   MOV  R5, #0X49
  509 00000200         ;   BL  TRANSMIT
  510 00000200         ;   MOV  R5, #0X49
  511 00000200         ;   BL  TRANSMIT
  512 00000200         ;   MOV  R5, #0X49
  513 00000200         ;   BL  TRANSMIT   
  514 00000200         ;   MOV  R5, #0X31
  515 00000200         ;   BL  TRANSMIT   
  516 00000200         ;   POP  {LR}
  517 00000200         ;   BX  LR  
  518 00000200         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  519 00000200         ;;;;; CHAR A-Z FINISH
  520 00000200         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  521 00000200                 ALIGN
  522 00000200                 END
              400043FC 
              20000419 
              2000041A 
              2000041B 
              40038028 
              40038004 
              4003800C 
              40038088 
              400380A8 
              20000400 
              20000403 
              20000406 
              2000040D 
              20000410 
              20000413 
              20000416 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\__main.d -o.\objects\__main.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\__main.lst __main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BATTLE 00000132

Symbol: BATTLE
   Definitions
      At line 166 in file __main.s
   Uses
      At line 154 in file __main.s
      At line 158 in file __main.s
      At line 162 in file __main.s

CLEAR 00000166

Symbol: CLEAR
   Definitions
      At line 192 in file __main.s
   Uses
      At line 36 in file __main.s
Comment: CLEAR used once
CLEARBOX 000001AC

Symbol: CLEARBOX
   Definitions
      At line 218 in file __main.s
   Uses
      At line 85 in file __main.s
      At line 208 in file __main.s

CURSOR 0000006E

Symbol: CURSOR
   Definitions
      At line 89 in file __main.s
   Uses
      None
Comment: CURSOR unused
DELAY_5MS 00000186

Symbol: DELAY_5MS
   Definitions
      At line 203 in file __main.s
   Uses
      At line 87 in file __main.s
Comment: DELAY_5MS used once
DISPLAY_SHIP 0000010E

Symbol: DISPLAY_SHIP
   Definitions
      At line 149 in file __main.s
   Uses
      At line 83 in file __main.s
      At line 205 in file __main.s

FINISH 00000160

Symbol: FINISH
   Definitions
      At line 186 in file __main.s
   Uses
      At line 170 in file __main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 174 in file __main.s
      At line 178 in file __main.s
      At line 182 in file __main.s
      At line 185 in file __main.s

LOOP 00000170

Symbol: LOOP
   Definitions
      At line 195 in file __main.s
   Uses
      At line 199 in file __main.s
Comment: LOOP used once
LOOP_C 000001D8

Symbol: LOOP_C
   Definitions
      At line 237 in file __main.s
   Uses
      At line 241 in file __main.s
Comment: LOOP_C used once
LOOP_CL 000001B2

Symbol: LOOP_CL
   Definitions
      At line 220 in file __main.s
   Uses
      At line 244 in file __main.s
Comment: LOOP_CL used once
LOP 000000A0

Symbol: LOP
   Definitions
      At line 106 in file __main.s
   Uses
      At line 146 in file __main.s
Comment: LOP used once
WORK 000000DE

Symbol: WORK
   Definitions
      At line 131 in file __main.s
   Uses
      At line 124 in file __main.s
Comment: WORK used once
__main 00000000

Symbol: __main
   Definitions
      At line 28 in file __main.s
   Uses
      At line 26 in file __main.s
Comment: __main used once
getsample 00000034

Symbol: getsample
   Definitions
      At line 65 in file __main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 147 in file __main.s
Comment: getsample used once
loop 0000003E

Symbol: loop
   Definitions
      At line 70 in file __main.s
   Uses
      At line 73 in file __main.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 12 in file __main.s
   Uses
      None
Comment: main unused
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 5 in file __main.s
   Uses
      At line 75 in file __main.s
Comment: ADC0_ISC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 4 in file __main.s
   Uses
      At line 65 in file __main.s
Comment: ADC0_PSSI used once
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 1 in file __main.s
   Uses
      At line 70 in file __main.s
Comment: ADC0_RIS used once
ADC0_SSFIFO2 40038088

Symbol: ADC0_SSFIFO2
   Definitions
      At line 2 in file __main.s
   Uses
      At line 90 in file __main.s
Comment: ADC0_SSFIFO2 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 3 in file __main.s
   Uses
      At line 94 in file __main.s
Comment: ADC0_SSFIFO3 used once
ADC0_SSFSTAT2 4003808C

Symbol: ADC0_SSFSTAT2
   Definitions
      At line 6 in file __main.s
   Uses
      None
Comment: ADC0_SSFSTAT2 unused
BATTLE_COUNTER 20000419

Symbol: BATTLE_COUNTER
   Definitions
      At line 9 in file __main.s
   Uses
      At line 58 in file __main.s
      At line 167 in file __main.s

CIV_COUNTER 2000041A




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: CIV_COUNTER
   Definitions
      At line 10 in file __main.s
   Uses
      At line 60 in file __main.s
      At line 151 in file __main.s

PORTA_DATA 400043FC

Symbol: PORTA_DATA
   Definitions
      At line 7 in file __main.s
   Uses
      At line 32 in file __main.s
      At line 107 in file __main.s
      At line 117 in file __main.s
      At line 221 in file __main.s
      At line 231 in file __main.s

POSITION 20000400

Symbol: POSITION
   Definitions
      At line 8 in file __main.s
   Uses
      At line 155 in file __main.s
      At line 159 in file __main.s
      At line 163 in file __main.s
      At line 171 in file __main.s
      At line 175 in file __main.s
      At line 179 in file __main.s
      At line 183 in file __main.s

SCREEN_COUNTER 2000041B

Symbol: SCREEN_COUNTER
   Definitions
      At line 11 in file __main.s
   Uses
      At line 62 in file __main.s
      At line 80 in file __main.s
      At line 209 in file __main.s
      At line 246 in file __main.s

11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BATTLESHIP 00000000

Symbol: BATTLESHIP
   Definitions
      At line 20 in file __main.s
   Uses
      At line 172 in file __main.s
      At line 176 in file __main.s
      At line 180 in file __main.s
      At line 184 in file __main.s

BOUNDARY 00000000

Symbol: BOUNDARY
   Definitions
      At line 21 in file __main.s
   Uses
      At line 37 in file __main.s
Comment: BOUNDARY used once
CIVILIAN 00000000

Symbol: CIVILIAN
   Definitions
      At line 22 in file __main.s
   Uses
      At line 156 in file __main.s
      At line 160 in file __main.s
      At line 164 in file __main.s

DELAY 00000000

Symbol: DELAY
   Definitions
      At line 16 in file __main.s
   Uses
      At line 207 in file __main.s
Comment: DELAY used once
GPIOPortF_Handler 00000000

Symbol: GPIOPortF_Handler
   Definitions
      At line 24 in file __main.s
   Uses
      None
Comment: GPIOPortF_Handler unused
GPIO_INIT 00000000

Symbol: GPIO_INIT
   Definitions
      At line 25 in file __main.s
   Uses
      At line 31 in file __main.s
Comment: GPIO_INIT used once
Init 00000000

Symbol: Init
   Definitions
      At line 15 in file __main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 29 in file __main.s
Comment: Init used once
LCD_INIT 00000000

Symbol: LCD_INIT
   Definitions
      At line 14 in file __main.s
   Uses
      At line 30 in file __main.s
Comment: LCD_INIT used once
OutChar 00000000

Symbol: OutChar
   Definitions
      At line 17 in file __main.s
   Uses
      None
Comment: OutChar unused
TIMER_INIT 00000000

Symbol: TIMER_INIT
   Definitions
      At line 19 in file __main.s
   Uses
      None
Comment: TIMER_INIT unused
TRANSMIT 00000000

Symbol: TRANSMIT
   Definitions
      At line 18 in file __main.s
   Uses
      At line 113 in file __main.s
      At line 115 in file __main.s
      At line 135 in file __main.s
      At line 137 in file __main.s
      At line 139 in file __main.s
      At line 141 in file __main.s
      At line 143 in file __main.s
      At line 196 in file __main.s
      At line 227 in file __main.s
      At line 229 in file __main.s
      At line 238 in file __main.s

Timer0A_Handler 00000000

Symbol: Timer0A_Handler
   Definitions
      At line 23 in file __main.s
   Uses
      None
Comment: Timer0A_Handler unused
12 symbols
375 symbols in table
