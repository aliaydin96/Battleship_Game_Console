


ARM Macro Assembler    Page 1 


    1 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
    2 00000000 40038088 
                       ADC0_SSFIFO2
                               EQU              0x40038088  ; Channel 2 results
                                                            
    3 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                             
    4 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
    5 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C  ; ISC
    6 00000000 4003808C 
                       ADC0_SSFSTAT2
                               EQU              0X4003808C
    7 00000000 400043FC 
                       PORTA_DATA
                               EQU              0x400043FC
    8 00000000         
    9 00000000                 AREA             main, CODE, READONLY
   10 00000000                 THUMB
   11 00000000                 IMPORT           LCD_INIT
   12 00000000                 IMPORT           Init
   13 00000000                 IMPORT           DELAY
   14 00000000                 EXTERN           OutChar
   15 00000000                 EXTERN           TRANSMIT
   16 00000000                 EXTERN           TIMER_INIT
   17 00000000                 EXTERN           BATTLESHIP
   18 00000000                 EXTERN           BOUNDARY
   19 00000000                 EXTERN           CIVILIAN
   20 00000000                 EXTERN           Timer0A_Handler
   21 00000000                 EXPORT           __main
   22 00000000         
   23 00000000         __main
   24 00000000 F7FF FFFE       BL               Init
   25 00000004 F7FF FFFE       BL               LCD_INIT
   26 00000008         
   27 00000008 4994            LDR              R1,=PORTA_DATA
   28 0000000A 6808            LDR              R0,[R1]
   29 0000000C F040 0040       ORR              R0,#0x40
   30 00000010 6008            STR              R0,[R1]
   31 00000012         
   32 00000012         
   33 00000012 F000 F8B2       BL               CLEAR
   34 00000016 F7FF FFFE       BL               BOUNDARY
   35 0000001A         ;   BL  TIMER_INIT
   36 0000001A         ;   MOV R7, #21  ;this counter for timer 
   37 0000001A F04F 0600       MOV              R6,#0       ;
   38 0000001E F04F 0700       MOV              R7, #0
   39 00000022 F04F 0B00       MOV              R11, #0
   40 00000026 498E    getsample
                               LDR              R1,=ADC0_PSSI 
                                                            ; request a sample
   41 00000028 6808            LDR              R0,[R1]     ;



ARM Macro Assembler    Page 2 


   42 0000002A F040 000C       ORR              R0,R0,#0x0C ; get a sample
   43 0000002E 6008            STR              R0,[R1]     ;
   44 00000030         
   45 00000030 498C    loop    LDR              R1,=ADC0_RIS ; check for interr
                                                            up flag
   46 00000032 6808            LDR              R0,[R1]     ;
   47 00000034 F010 000C       ANDS             R0,#0x0C    ;
   48 00000038 D0FA            BEQ              loop
   49 0000003A         
   50 0000003A 498B            LDR              R1,=ADC0_ISC ; clear the interr
                                                            upt flag
   51 0000003C 6808            LDR              R0,[R1]     ;
   52 0000003E F040 000C       ORR              R0,#0x0C    ;
   53 00000042 6008            STR              R0,[R1]     ; Interrupt flag is
                                                             cleared
   54 00000044         
   55 00000044 4989            LDR              R1,=ADC0_SSFIFO2 ;
   56 00000046 F8D1 8000       LDR              R8,[R1]     ; R8 is the data PE
                                                            3
   57 0000004A         
   58 0000004A         
   59 0000004A 4989            LDR              R1, =ADC0_SSFIFO3
   60 0000004C F8D1 9000       LDR              R9,[R1]
   61 00000050         
   62 00000050 EBA9 0006       SUB              R0,R9,R6    ; check sampled dat
                                                            a - previous > 1pix
                                                            
   63 00000054 2846            CMP              R0,#70      ;
   64 00000056 BFC8 2101       MOVGT            R1, #1
   65 0000005A EBA8 0007       SUB              R0,R8,R7    ; check sampled dat
                                                            a - previous > 1pix
                                                            
   66 0000005E 28A0            CMP              R0,#160     ;
   67 00000060 BFC8 2001       MOVGT            R0, #1
   68 00000064 EA40 0001       ORR              R0, R1
   69 00000068 D100            BNE              CURSOR
   70 0000006A D0DC            BEQ              getsample
   71 0000006C         
   72 0000006C         CURSOR
   73 0000006C         ;   BL  BOUNDARY
   74 0000006C         ;   BL  BATTLESHIP
   75 0000006C         ;   BL  CIVILIAN
   76 0000006C 464E            MOV              R6,R9       ;
   77 0000006E F04F 0049       MOV              R0,#73      ; get the first dig
                                                            it
   78 00000072 FBB9 F9F0       UDIV             R9,R9,R0    ;
   79 00000076 F109 0985       ADD              R9, #0X85
   80 0000007A         
   81 0000007A 4647            MOV              R7,R8       ;
   82 0000007C F04F 00AB       MOV              R0,#171     ; get the first dig
                                                            it
   83 00000080 FBB8 F8F0       UDIV             R8,R8,R0    ;
   84 00000084 F1B8 0F08       CMP              R8, #8
   85 00000088 BF38 2441       MOVCC            R4, #0X41
   86 0000008C D30E            BCC              GO
   87 0000008E F1B8 0F10       CMP              R8, #16
   88 00000092 BF3C 2442       MOVCC            R4, #0X42
   89 00000096 F1A8 0808       SUBCC            R8, #8
   90 0000009A D307            BCC              GO



ARM Macro Assembler    Page 3 


   91 0000009C F1B8 0F18       CMP              R8, #24
   92 000000A0 BF3C 2443       MOVCC            R4, #0X43
   93 000000A4 F1A8 0810       SUBCC            R8, #16
   94 000000A8 F000 F897       BL               CLEARBOX2
   95 000000AC         
   96 000000AC         GO
   97 000000AC 2C41            CMP              R4, #0X41
   98 000000AE D002            BEQ              ROW1
   99 000000B0 2C42            CMP              R4, #0X42
  100 000000B2 D003            BEQ              ROW2
  101 000000B4 E007            B                CURSOR_2
  102 000000B6         
  103 000000B6         ROW1
  104 000000B6 F000 F890       BL               CLEARBOX2
  105 000000BA E004            B                CURSOR_2
  106 000000BC         ROW2
  107 000000BC F000 F86D       BL               CLEARBOX1
  108 000000C0 F000 F8AB       BL               CLEARBOX3
  109 000000C4 E7FF            B                CURSOR_2
  110 000000C6         
  111 000000C6         CURSOR_2
  112 000000C6 4965            LDR              R1,=PORTA_DATA
  113 000000C8 6808            LDR              R0,[R1]
  114 000000CA F020 0040       BIC              R0,#0x40
  115 000000CE 6008            STR              R0,[R1]
  116 000000D0         
  117 000000D0 464D            MOV              R5, R9
  118 000000D2 F7FF FFFE       BL               TRANSMIT
  119 000000D6 4625            MOV              R5, R4
  120 000000D8 F7FF FFFE       BL               TRANSMIT
  121 000000DC         
  122 000000DC 495F            LDR              R1,=PORTA_DATA
  123 000000DE 6808            LDR              R0,[R1]
  124 000000E0 F040 0040       ORR              R0,#0x40
  125 000000E4 6008            STR              R0,[R1]
  126 000000E6 F04F 0202       MOV              R2, #0X2
  127 000000EA F04F 0A07       MOV              R10, #0X7
  128 000000EE F1B9 0F85       CMP              R9, #0X85
  129 000000F2 BF0C 25FF       MOVEQ            R5, #0XFF
  130 000000F6 2500            MOVNE            R5, #0X0
  131 000000F8 F7FF FFFE       BL               TRANSMIT
  132 000000FC F84D 8D04       PUSH             {R8}
  133 00000100 4640            MOV              R0, R8
  134 00000102 F04F 0300       MOV              R3, #0
  135 00000106 F1B8 0F00       CMP              R8, #0
  136 0000010A D017            BEQ              ZERO
  137 0000010C F1B8 0F07       CMP              R8, #7
  138 00000110 D023            BEQ              SEVEN
  139 00000112 F1A8 0801       SUB              R8, #1
  140 00000116 FA02 F508       MOV              R5, R2, LSL R8
  141 0000011A F7FF FFFE       BL               TRANSMIT
  142 0000011E FA0A F508       MOV              R5, R10, LSL R8
  143 00000122 F7FF FFFE       BL               TRANSMIT
  144 00000126 FA02 F508       MOV              R5, R2, LSL R8
  145 0000012A F7FF FFFE       BL               TRANSMIT
  146 0000012E F04F 0500       MOV              R5, #0X0
  147 00000132 F7FF FFFE       BL               TRANSMIT
  148 00000136 F85D 8B04       POP              {R8}
  149 0000013A E774            B                getsample   ;   



ARM Macro Assembler    Page 4 


  150 0000013C         
  151 0000013C         ZERO
  152 0000013C F04F 0501       MOV              R5, #0X1
  153 00000140 F7FF FFFE       BL               TRANSMIT
  154 00000144 F04F 0503       MOV              R5, #0X3
  155 00000148 F7FF FFFE       BL               TRANSMIT
  156 0000014C F04F 0501       MOV              R5, #0X1
  157 00000150 F7FF FFFE       BL               TRANSMIT
  158 00000154 F85D 8B04       POP              {R8}
  159 00000158 E765            B                getsample   ;
  160 0000015A         
  161 0000015A         SEVEN
  162 0000015A F04F 0580       MOV              R5, #0X80
  163 0000015E F7FF FFFE       BL               TRANSMIT
  164 00000162 F04F 05C0       MOV              R5, #0XC0
  165 00000166 F7FF FFFE       BL               TRANSMIT
  166 0000016A F04F 0580       MOV              R5, #0X80
  167 0000016E F7FF FFFE       BL               TRANSMIT
  168 00000172 F85D 8B04       POP              {R8}
  169 00000176 E756            B                getsample   ;
  170 00000178         
  171 00000178         
  172 00000178         FIN
  173 00000178 E7FE            B                FIN
  174 0000017A         
  175 0000017A         
  176 0000017A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  177 0000017A         ;;;;;; CLEAR WHOLE SCREEN
  178 0000017A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  179 0000017A B503    CLEAR   PUSH             {R0,R1,LR}
  180 0000017C F04F 0000       MOV              R0,#0
  181 00000180 F240 11F7       MOV              R1, #503
  182 00000184 F04F 0500 
                       LOOP    MOV              R5, #0X0
  183 00000188 F7FF FFFE       BL               TRANSMIT
  184 0000018C F100 0001       ADD              R0, #1
  185 00000190 4288            CMP              R0,R1
  186 00000192 D1F7            BNE              LOOP
  187 00000194 E8BD 4003       POP              {R0,R1,LR}
  188 00000198 4770            BX               LR
  189 0000019A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  190 0000019A         
  191 0000019A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  192 0000019A         ;;;;;; CLEAR Y = 1 ROW
  193 0000019A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  194 0000019A B507    CLEARBOX1
                               PUSH{R0,         R1, R2, LR}
  195 0000019C 492F            LDR              R1,=PORTA_DATA
  196 0000019E 6808            LDR              R0,[R1]
  197 000001A0 F020 0040       BIC              R0,#0x40
  198 000001A4 6008            STR              R0,[R1]
  199 000001A6         
  200 000001A6 F04F 0586       MOV              R5, #0X86
  201 000001AA F7FF FFFE       BL               TRANSMIT
  202 000001AE F04F 0541       MOV              R5, #0X41
  203 000001B2 F7FF FFFE       BL               TRANSMIT
  204 000001B6         
  205 000001B6 4929            LDR              R1,=PORTA_DATA
  206 000001B8 6808            LDR              R0,[R1]



ARM Macro Assembler    Page 5 


  207 000001BA F040 0040       ORR              R0,#0x40
  208 000001BE 6008            STR              R0,[R1]
  209 000001C0 F04F 0286       MOV              R2, #0X86
  210 000001C4         
  211 000001C4 F04F 0500 
                       LOOP_C  MOV              R5, #0X0
  212 000001C8 F7FF FFFE       BL               TRANSMIT
  213 000001CC F102 0201       ADD              R2, #1
  214 000001D0 2AC5            CMP              R2, #0XC5
  215 000001D2 D1F7            BNE              LOOP_C
  216 000001D4         
  217 000001D4 E8BD 4007       POP{R0,          R1, R2, LR}
  218 000001D8 4770            BX               LR
  219 000001DA         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  220 000001DA         ;;;;;; CLEAR Y = 2 ROW
  221 000001DA         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  222 000001DA B507    CLEARBOX2
                               PUSH{R0,         R1, R2, LR}
  223 000001DC 491F            LDR              R1,=PORTA_DATA
  224 000001DE 6808            LDR              R0,[R1]
  225 000001E0 F020 0040       BIC              R0,#0x40
  226 000001E4 6008            STR              R0,[R1]
  227 000001E6         
  228 000001E6 F04F 0586       MOV              R5, #0X86
  229 000001EA F7FF FFFE       BL               TRANSMIT
  230 000001EE F04F 0542       MOV              R5, #0X42
  231 000001F2 F7FF FFFE       BL               TRANSMIT
  232 000001F6         
  233 000001F6 4919            LDR              R1,=PORTA_DATA
  234 000001F8 6808            LDR              R0,[R1]
  235 000001FA F040 0040       ORR              R0,#0x40
  236 000001FE 6008            STR              R0,[R1]
  237 00000200 F04F 0286       MOV              R2, #0X86
  238 00000204         
  239 00000204 F04F 0500 
                       LOOP_C_2
                               MOV              R5, #0X0
  240 00000208 F7FF FFFE       BL               TRANSMIT
  241 0000020C F102 0201       ADD              R2, #1
  242 00000210 2AC5            CMP              R2, #0XC5
  243 00000212 D1F7            BNE              LOOP_C_2
  244 00000214         
  245 00000214 E8BD 4007       POP{R0,          R1, R2, LR}
  246 00000218 4770            BX               LR
  247 0000021A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  248 0000021A         ;;;;;; CLEAR Y = 3 ROW
  249 0000021A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  250 0000021A B507    CLEARBOX3
                               PUSH{R0,         R1, R2, LR}
  251 0000021C 490F            LDR              R1,=PORTA_DATA
  252 0000021E 6808            LDR              R0,[R1]
  253 00000220 F020 0040       BIC              R0,#0x40
  254 00000224 6008            STR              R0,[R1]
  255 00000226         
  256 00000226 F04F 0586       MOV              R5, #0X86
  257 0000022A F7FF FFFE       BL               TRANSMIT
  258 0000022E F04F 0543       MOV              R5, #0X43
  259 00000232 F7FF FFFE       BL               TRANSMIT
  260 00000236         



ARM Macro Assembler    Page 6 


  261 00000236 4909            LDR              R1,=PORTA_DATA
  262 00000238 6808            LDR              R0,[R1]
  263 0000023A F040 0040       ORR              R0,#0x40
  264 0000023E 6008            STR              R0,[R1]
  265 00000240 F04F 0286       MOV              R2, #0X86
  266 00000244         
  267 00000244 F04F 0500 
                       LOOP_C_3
                               MOV              R5, #0X0
  268 00000248 F7FF FFFE       BL               TRANSMIT
  269 0000024C F102 0201       ADD              R2, #1
  270 00000250 2AC5            CMP              R2, #0XC5
  271 00000252 D1F7            BNE              LOOP_C_3
  272 00000254         
  273 00000254 E8BD 4007       POP{R0,          R1, R2, LR}
  274 00000258 4770            BX               LR
  275 0000025A         
  276 0000025A         
  277 0000025A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  278 0000025A         ;;;;; NUMBERS 0-9 BEGINNING
  279 0000025A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  280 0000025A         ;N0   PUSH  {LR} 
  281 0000025A         ;   MOV  R5, #0X3E
  282 0000025A         ;   BL  TRANSMIT
  283 0000025A         ;   MOV  R5, #0X51
  284 0000025A         ;   BL  TRANSMIT
  285 0000025A         ;   MOV  R5, #0X49
  286 0000025A         ;   BL  TRANSMIT   
  287 0000025A         ;   MOV  R5, #0X45
  288 0000025A         ;   BL  TRANSMIT
  289 0000025A         ;   MOV  R5, #0X3E
  290 0000025A         ;   BL  TRANSMIT   
  291 0000025A         ;   POP  {LR}
  292 0000025A         ;   BX  LR
  293 0000025A         
  294 0000025A         ;N1   PUSH  {LR} 
  295 0000025A         ;   MOV  R5, #0X0
  296 0000025A         ;   BL  TRANSMIT
  297 0000025A         ;   MOV  R5, #0X42
  298 0000025A         ;   BL  TRANSMIT
  299 0000025A         ;   MOV  R5, #0X7F
  300 0000025A         ;   BL  TRANSMIT   
  301 0000025A         ;   MOV  R5, #0X40
  302 0000025A         ;   BL  TRANSMIT
  303 0000025A         ;   MOV  R5, #0X0
  304 0000025A         ;   BL  TRANSMIT   
  305 0000025A         ;   POP  {LR}
  306 0000025A         ;   BX  LR
  307 0000025A         
  308 0000025A         ;N2   PUSH  {LR} 
  309 0000025A         ;   MOV  R5, #0X42
  310 0000025A         ;   BL  TRANSMIT
  311 0000025A         ;   MOV  R5, #0X61
  312 0000025A         ;   BL  TRANSMIT
  313 0000025A         ;   MOV  R5, #0X51
  314 0000025A         ;   BL  TRANSMIT   
  315 0000025A         ;   MOV  R5, #0X49
  316 0000025A         ;   BL  TRANSMIT
  317 0000025A         ;   MOV  R5, #0X46



ARM Macro Assembler    Page 7 


  318 0000025A         ;   BL  TRANSMIT   
  319 0000025A         ;   POP  {LR}
  320 0000025A         ;   BX  LR
  321 0000025A         ; 
  322 0000025A         ;N3   PUSH  {LR} 
  323 0000025A         ;   MOV  R5, #0X21
  324 0000025A         ;   BL  TRANSMIT
  325 0000025A         ;   MOV  R5, #0X41
  326 0000025A         ;   BL  TRANSMIT
  327 0000025A         ;   MOV  R5, #0X45
  328 0000025A         ;   BL  TRANSMIT   
  329 0000025A         ;   MOV  R5, #0X4B
  330 0000025A         ;   BL  TRANSMIT
  331 0000025A         ;   MOV  R5, #0X31
  332 0000025A         ;   BL  TRANSMIT   
  333 0000025A         ;   POP  {LR}
  334 0000025A         ;   BX  LR
  335 0000025A         
  336 0000025A         ;N4   PUSH  {LR} 
  337 0000025A         ;   MOV  R5, #0X18
  338 0000025A         ;   BL  TRANSMIT
  339 0000025A         ;   MOV  R5, #0X14
  340 0000025A         ;   BL  TRANSMIT
  341 0000025A         ;   MOV  R5, #0X12
  342 0000025A         ;   BL  TRANSMIT   
  343 0000025A         ;   MOV  R5, #0X7F
  344 0000025A         ;   BL  TRANSMIT
  345 0000025A         ;   MOV  R5, #0X10
  346 0000025A         ;   BL  TRANSMIT   
  347 0000025A         ;   POP  {LR}
  348 0000025A         ;   BX  LR
  349 0000025A         
  350 0000025A         ;N5   PUSH  {LR} 
  351 0000025A         ;   MOV  R5, #0X27
  352 0000025A         ;   BL  TRANSMIT
  353 0000025A         ;   MOV  R5, #0X45
  354 0000025A         ;   BL  TRANSMIT
  355 0000025A         ;   MOV  R5, #0X45
  356 0000025A         ;   BL  TRANSMIT   
  357 0000025A         ;   MOV  R5, #0X45
  358 0000025A         ;   BL  TRANSMIT
  359 0000025A         ;   MOV  R5, #0X39
  360 0000025A         ;   BL  TRANSMIT   
  361 0000025A         ;   POP  {LR}
  362 0000025A         ;   BX  LR
  363 0000025A         
  364 0000025A         ;N6   PUSH  {LR} 
  365 0000025A         ;   MOV  R5, #0X3C
  366 0000025A         ;   BL  TRANSMIT
  367 0000025A         ;   MOV  R5, #0X4A
  368 0000025A         ;   BL  TRANSMIT
  369 0000025A         ;   MOV  R5, #0X49
  370 0000025A         ;   BL  TRANSMIT   
  371 0000025A         ;   MOV  R5, #0X49
  372 0000025A         ;   BL  TRANSMIT
  373 0000025A         ;   MOV  R5, #0X30
  374 0000025A         ;   BL  TRANSMIT   
  375 0000025A         ;   POP  {LR}
  376 0000025A         ;   BX  LR



ARM Macro Assembler    Page 8 


  377 0000025A         
  378 0000025A         ;N7   PUSH  {LR} 
  379 0000025A         ;   MOV  R5, #0X1
  380 0000025A         ;   BL  TRANSMIT
  381 0000025A         ;   MOV  R5, #0X71
  382 0000025A         ;   BL  TRANSMIT
  383 0000025A         ;   MOV  R5, #0X9
  384 0000025A         ;   BL  TRANSMIT   
  385 0000025A         ;   MOV  R5, #0X5
  386 0000025A         ;   BL  TRANSMIT
  387 0000025A         ;   MOV  R5, #0X3
  388 0000025A         ;   BL  TRANSMIT   
  389 0000025A         ;   POP  {LR}
  390 0000025A         ;   BX  LR
  391 0000025A         
  392 0000025A         ;N8   PUSH  {LR} 
  393 0000025A         ;   MOV  R5, #0X36
  394 0000025A         ;   BL  TRANSMIT
  395 0000025A         ;   MOV  R5, #0X49
  396 0000025A         ;   BL  TRANSMIT
  397 0000025A         ;   MOV  R5, #0X49
  398 0000025A         ;   BL  TRANSMIT   
  399 0000025A         ;   MOV  R5, #0X49
  400 0000025A         ;   BL  TRANSMIT
  401 0000025A         ;   MOV  R5, #0X36
  402 0000025A         ;   BL  TRANSMIT   
  403 0000025A         ;   POP  {LR}
  404 0000025A         ;   BX  LR
  405 0000025A         
  406 0000025A         ;N9   PUSH  {LR} 
  407 0000025A         ;   MOV  R5, #0X6
  408 0000025A         ;   BL  TRANSMIT
  409 0000025A         ;   MOV  R5, #0X49
  410 0000025A         ;   BL  TRANSMIT
  411 0000025A         ;   MOV  R5, #0X49
  412 0000025A         ;   BL  TRANSMIT   
  413 0000025A         ;   MOV  R5, #0X29
  414 0000025A         ;   BL  TRANSMIT
  415 0000025A         ;   MOV  R5, #0X1E
  416 0000025A         ;   BL  TRANSMIT   
  417 0000025A         ;   POP  {LR}
  418 0000025A         ;   BX  LR
  419 0000025A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  420 0000025A         ;;;;; NUMBERS 0-9 FINISH
  421 0000025A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
  422 0000025A         
  423 0000025A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  424 0000025A         ;;;;; CHAR A-Z BEGINNING
  425 0000025A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  426 0000025A         ;A   
  427 0000025A         ;   PUSH  {LR}
  428 0000025A         ;   MOV  R5, #0X7E
  429 0000025A         ;   BL  TRANSMIT
  430 0000025A         ;   MOV  R5, #0X11
  431 0000025A         ;   BL  TRANSMIT
  432 0000025A         ;   MOV  R5, #0X11
  433 0000025A         ;   BL  TRANSMIT   
  434 0000025A         ;   MOV  R5, #0X11
  435 0000025A         ;   BL  TRANSMIT



ARM Macro Assembler    Page 9 


  436 0000025A         ;   MOV  R5, #0X7E
  437 0000025A         ;   BL  TRANSMIT 
  438 0000025A         ;   POP  {LR}
  439 0000025A         ;   BX  LR
  440 0000025A         ;B_   PUSH  {LR} 
  441 0000025A         ;   
  442 0000025A         ;   POP  {LR}
  443 0000025A         ;   BX  LR   
  444 0000025A         ;C   PUSH  {LR} 
  445 0000025A         ;   
  446 0000025A         ;   POP  {LR}
  447 0000025A         ;   BX  LR
  448 0000025A         ;D   PUSH  {LR} 
  449 0000025A         ;   
  450 0000025A         ;   POP  {LR}
  451 0000025A         ;   BX  LR
  452 0000025A         ;E   PUSH  {LR} 
  453 0000025A         ;   
  454 0000025A         ;   POP  {LR}
  455 0000025A         ;   BX  LR   
  456 0000025A         
  457 0000025A         ;I   PUSH  {LR} 
  458 0000025A         ;   MOV  R5, #0X00
  459 0000025A         ;   BL  TRANSMIT
  460 0000025A         ;   MOV  R5, #0X41
  461 0000025A         ;   BL  TRANSMIT
  462 0000025A         ;   MOV  R5, #0X7F
  463 0000025A         ;   BL  TRANSMIT   
  464 0000025A         ;   MOV  R5, #0X41
  465 0000025A         ;   BL  TRANSMIT
  466 0000025A         ;   MOV  R5, #0X00
  467 0000025A         ;   BL  TRANSMIT
  468 0000025A         ;   POP  {LR}
  469 0000025A         ;   BX  LR
  470 0000025A         ; 
  471 0000025A         ;K   PUSH  {LR}
  472 0000025A         ;   MOV  R5, #0X7F
  473 0000025A         ;   BL  TRANSMIT
  474 0000025A         ;   MOV  R5, #0X8
  475 0000025A         ;   BL  TRANSMIT
  476 0000025A         ;   MOV  R5, #0X14
  477 0000025A         ;   BL  TRANSMIT
  478 0000025A         ;   MOV  R5, #0X22
  479 0000025A         ;   BL  TRANSMIT   
  480 0000025A         ;   MOV  R5, #0X41
  481 0000025A         ;   BL  TRANSMIT
  482 0000025A         ;   POP  {LR}
  483 0000025A         ;   BX  LR 
  484 0000025A         ;   
  485 0000025A         ;L   PUSH  {LR}
  486 0000025A         ;   MOV  R5, #0X7F
  487 0000025A         ;   BL  TRANSMIT
  488 0000025A         ;   MOV  R5, #0X40
  489 0000025A         ;   BL  TRANSMIT
  490 0000025A         ;   MOV  R5, #0X40
  491 0000025A         ;   BL  TRANSMIT
  492 0000025A         ;   MOV  R5, #0X40
  493 0000025A         ;   BL  TRANSMIT   
  494 0000025A         ;   MOV  R5, #0X40



ARM Macro Assembler    Page 10 


  495 0000025A         ;   BL  TRANSMIT   
  496 0000025A         ;   POP  {LR}
  497 0000025A         ;   BX  LR 
  498 0000025A         
  499 0000025A         
  500 0000025A         
  501 0000025A         ;M   PUSH  {LR}
  502 0000025A         ;   MOV  R5, #0X7F
  503 0000025A         ;   BL  TRANSMIT
  504 0000025A         ;   MOV  R5, #0X02
  505 0000025A         ;   BL  TRANSMIT
  506 0000025A         ;   MOV  R5, #0XC
  507 0000025A         ;   BL  TRANSMIT
  508 0000025A         ;   MOV  R5, #0X2
  509 0000025A         ;   BL  TRANSMIT   
  510 0000025A         ;   MOV  R5, #0X7F
  511 0000025A         ;   BL  TRANSMIT    
  512 0000025A         ;   POP  {LR}
  513 0000025A         ;   BX  LR
  514 0000025A         
  515 0000025A         ;N   PUSH  {LR}   
  516 0000025A         ;   MOV  R5, #0X7F
  517 0000025A         ;   BL  TRANSMIT
  518 0000025A         ;   MOV  R5, #0X04
  519 0000025A         ;   BL  TRANSMIT
  520 0000025A         ;   MOV  R5, #0X8
  521 0000025A         ;   BL  TRANSMIT
  522 0000025A         ;   MOV  R5, #0X10
  523 0000025A         ;   BL  TRANSMIT   
  524 0000025A         ;   MOV  R5, #0X7F
  525 0000025A         ;   BL  TRANSMIT   
  526 0000025A         ;   POP  {LR}
  527 0000025A         ;   BX  LR 
  528 0000025A         
  529 0000025A         ;S   PUSH  {LR}   
  530 0000025A         ;   MOV  R5, #0X46
  531 0000025A         ;   BL  TRANSMIT
  532 0000025A         ;   MOV  R5, #0X49
  533 0000025A         ;   BL  TRANSMIT
  534 0000025A         ;   MOV  R5, #0X49
  535 0000025A         ;   BL  TRANSMIT
  536 0000025A         ;   MOV  R5, #0X49
  537 0000025A         ;   BL  TRANSMIT   
  538 0000025A         ;   MOV  R5, #0X31
  539 0000025A         ;   BL  TRANSMIT   
  540 0000025A         ;   POP  {LR}
  541 0000025A         ;   BX  LR  
  542 0000025A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  543 0000025A         ;;;;; CHAR A-Z FINISH
  544 0000025A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  545 0000025A 00 00           ALIGN
  546 0000025C                 END
              400043FC 
              40038028 
              40038004 
              4003800C 
              40038088 
              400380A8 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int



ARM Macro Assembler    Page 11 


erwork --depend=.\objects\__main.d -o.\objects\__main.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\__main.lst __main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CLEAR 0000017A

Symbol: CLEAR
   Definitions
      At line 179 in file __main.s
   Uses
      At line 33 in file __main.s
Comment: CLEAR used once
CLEARBOX1 0000019A

Symbol: CLEARBOX1
   Definitions
      At line 194 in file __main.s
   Uses
      At line 107 in file __main.s
Comment: CLEARBOX1 used once
CLEARBOX2 000001DA

Symbol: CLEARBOX2
   Definitions
      At line 222 in file __main.s
   Uses
      At line 94 in file __main.s
      At line 104 in file __main.s

CLEARBOX3 0000021A

Symbol: CLEARBOX3
   Definitions
      At line 250 in file __main.s
   Uses
      At line 108 in file __main.s
Comment: CLEARBOX3 used once
CURSOR 0000006C

Symbol: CURSOR
   Definitions
      At line 72 in file __main.s
   Uses
      At line 69 in file __main.s
Comment: CURSOR used once
CURSOR_2 000000C6

Symbol: CURSOR_2
   Definitions
      At line 111 in file __main.s
   Uses
      At line 101 in file __main.s
      At line 105 in file __main.s
      At line 109 in file __main.s

FIN 00000178

Symbol: FIN
   Definitions
      At line 172 in file __main.s
   Uses
      At line 173 in file __main.s
Comment: FIN used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

GO 000000AC

Symbol: GO
   Definitions
      At line 96 in file __main.s
   Uses
      At line 86 in file __main.s
      At line 90 in file __main.s

LOOP 00000184

Symbol: LOOP
   Definitions
      At line 182 in file __main.s
   Uses
      At line 186 in file __main.s
Comment: LOOP used once
LOOP_C 000001C4

Symbol: LOOP_C
   Definitions
      At line 211 in file __main.s
   Uses
      At line 215 in file __main.s
Comment: LOOP_C used once
LOOP_C_2 00000204

Symbol: LOOP_C_2
   Definitions
      At line 239 in file __main.s
   Uses
      At line 243 in file __main.s
Comment: LOOP_C_2 used once
LOOP_C_3 00000244

Symbol: LOOP_C_3
   Definitions
      At line 267 in file __main.s
   Uses
      At line 271 in file __main.s
Comment: LOOP_C_3 used once
ROW1 000000B6

Symbol: ROW1
   Definitions
      At line 103 in file __main.s
   Uses
      At line 98 in file __main.s
Comment: ROW1 used once
ROW2 000000BC

Symbol: ROW2
   Definitions
      At line 106 in file __main.s
   Uses
      At line 100 in file __main.s
Comment: ROW2 used once
SEVEN 0000015A




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: SEVEN
   Definitions
      At line 161 in file __main.s
   Uses
      At line 138 in file __main.s
Comment: SEVEN used once
ZERO 0000013C

Symbol: ZERO
   Definitions
      At line 151 in file __main.s
   Uses
      At line 136 in file __main.s
Comment: ZERO used once
__main 00000000

Symbol: __main
   Definitions
      At line 23 in file __main.s
   Uses
      At line 21 in file __main.s
Comment: __main used once
getsample 00000026

Symbol: getsample
   Definitions
      At line 40 in file __main.s
   Uses
      At line 70 in file __main.s
      At line 149 in file __main.s
      At line 159 in file __main.s
      At line 169 in file __main.s

loop 00000030

Symbol: loop
   Definitions
      At line 45 in file __main.s
   Uses
      At line 48 in file __main.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 9 in file __main.s
   Uses
      None
Comment: main unused
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 5 in file __main.s
   Uses
      At line 50 in file __main.s
Comment: ADC0_ISC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 4 in file __main.s
   Uses
      At line 40 in file __main.s
Comment: ADC0_PSSI used once
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 1 in file __main.s
   Uses
      At line 45 in file __main.s
Comment: ADC0_RIS used once
ADC0_SSFIFO2 40038088

Symbol: ADC0_SSFIFO2
   Definitions
      At line 2 in file __main.s
   Uses
      At line 55 in file __main.s
Comment: ADC0_SSFIFO2 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 3 in file __main.s
   Uses
      At line 59 in file __main.s
Comment: ADC0_SSFIFO3 used once
ADC0_SSFSTAT2 4003808C

Symbol: ADC0_SSFSTAT2
   Definitions
      At line 6 in file __main.s
   Uses
      None
Comment: ADC0_SSFSTAT2 unused
PORTA_DATA 400043FC

Symbol: PORTA_DATA
   Definitions
      At line 7 in file __main.s
   Uses
      At line 27 in file __main.s
      At line 112 in file __main.s
      At line 122 in file __main.s
      At line 195 in file __main.s
      At line 205 in file __main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 223 in file __main.s
      At line 233 in file __main.s
      At line 251 in file __main.s
      At line 261 in file __main.s

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BATTLESHIP 00000000

Symbol: BATTLESHIP
   Definitions
      At line 17 in file __main.s
   Uses
      None
Comment: BATTLESHIP unused
BOUNDARY 00000000

Symbol: BOUNDARY
   Definitions
      At line 18 in file __main.s
   Uses
      At line 34 in file __main.s
Comment: BOUNDARY used once
CIVILIAN 00000000

Symbol: CIVILIAN
   Definitions
      At line 19 in file __main.s
   Uses
      None
Comment: CIVILIAN unused
DELAY 00000000

Symbol: DELAY
   Definitions
      At line 13 in file __main.s
   Uses
      None
Comment: DELAY unused
Init 00000000

Symbol: Init
   Definitions
      At line 12 in file __main.s
   Uses
      At line 24 in file __main.s
Comment: Init used once
LCD_INIT 00000000

Symbol: LCD_INIT
   Definitions
      At line 11 in file __main.s
   Uses
      At line 25 in file __main.s
Comment: LCD_INIT used once
OutChar 00000000

Symbol: OutChar
   Definitions
      At line 14 in file __main.s
   Uses
      None
Comment: OutChar unused
TIMER_INIT 00000000

Symbol: TIMER_INIT



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 16 in file __main.s
   Uses
      None
Comment: TIMER_INIT unused
TRANSMIT 00000000

Symbol: TRANSMIT
   Definitions
      At line 15 in file __main.s
   Uses
      At line 118 in file __main.s
      At line 120 in file __main.s
      At line 131 in file __main.s
      At line 141 in file __main.s
      At line 143 in file __main.s
      At line 145 in file __main.s
      At line 147 in file __main.s
      At line 153 in file __main.s
      At line 155 in file __main.s
      At line 157 in file __main.s
      At line 163 in file __main.s
      At line 165 in file __main.s
      At line 167 in file __main.s
      At line 183 in file __main.s
      At line 201 in file __main.s
      At line 203 in file __main.s
      At line 212 in file __main.s
      At line 229 in file __main.s
      At line 231 in file __main.s
      At line 240 in file __main.s
      At line 257 in file __main.s
      At line 259 in file __main.s
      At line 268 in file __main.s

Timer0A_Handler 00000000

Symbol: Timer0A_Handler
   Definitions
      At line 20 in file __main.s
   Uses
      None
Comment: Timer0A_Handler unused
10 symbols
373 symbols in table
