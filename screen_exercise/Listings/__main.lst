


ARM Macro Assembler    Page 1 


    1 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
    2 00000000 40038088 
                       ADC0_SSFIFO2
                               EQU              0x40038088  ; Channel 2 results
                                                            
    3 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                             
    4 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
    5 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C  ; ISC
    6 00000000 4003808C 
                       ADC0_SSFSTAT2
                               EQU              0X4003808C
    7 00000000 400043FC 
                       PORTA_DATA
                               EQU              0x400043FC
    8 00000000 20000400 
                       POSITION
                               EQU              0X20000400
    9 00000000 20000419 
                       BATTLE_COUNTER
                               EQU              0X20000419
   10 00000000 2000041A 
                       CIV_COUNTER
                               EQU              0X2000041A
   11 00000000                 AREA             main, CODE, READONLY
   12 00000000                 THUMB
   13 00000000                 IMPORT           LCD_INIT
   14 00000000                 IMPORT           Init
   15 00000000                 IMPORT           DELAY
   16 00000000                 EXTERN           OutChar
   17 00000000                 EXTERN           TRANSMIT
   18 00000000                 EXTERN           TIMER_INIT
   19 00000000                 EXTERN           BATTLESHIP
   20 00000000                 EXTERN           BOUNDARY
   21 00000000                 EXTERN           CIVILIAN
   22 00000000                 EXTERN           Timer0A_Handler
   23 00000000                 EXTERN           GPIOPortF_Handler
   24 00000000                 EXTERN           GPIO_INIT
   25 00000000                 EXPORT           __main
   26 00000000         
   27 00000000         __main
   28 00000000 F7FF FFFE       BL               Init
   29 00000004 F7FF FFFE       BL               LCD_INIT
   30 00000008 F7FF FFFE       BL               GPIO_INIT
   31 0000000C 4983            LDR              R1,=PORTA_DATA
   32 0000000E 6808            LDR              R0,[R1]
   33 00000010 F040 0040       ORR              R0,#0x40
   34 00000014 6008            STR              R0,[R1]
   35 00000016 F000 F890       BL               CLEAR
   36 0000001A F7FF FFFE       BL               BOUNDARY
   37 0000001E         ;   BL  TIMER_INIT



ARM Macro Assembler    Page 2 


   38 0000001E         ;   MOV R7, #21  ;this counter for timer 
   39 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   40 0000001E         ;;;;; REGISTERS
   41 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   42 0000001E         ;;;;; R0  ==> GENERAL PURPOSES
   43 0000001E         ;;;;; R1  ==> GENERAL PURPOSES
   44 0000001E         ;;;;; R2  ==> CURSOR'S POSITION
   45 0000001E         ;;;;; R3  ==> X POSITION
   46 0000001E         ;;;;; R4  ==> CURSOR'S POSITION
   47 0000001E         ;;;;; R5  ==> DISPLAY REGISTER
   48 0000001E         ;;;;; R6  ==> Y POSITION
   49 0000001E         ;;;;; R7  ==> TIMER'S COUNTER
   50 0000001E         ;;;;; R8  ==> ADC RESULT 
   51 0000001E         ;;;;; R9  ==> ADC RESULT
   52 0000001E         ;;;;; R10 ==> FREE
   53 0000001E         ;;;;; R11 ==> FREE
   54 0000001E         ;;;;; R12 ==> FREE
   55 0000001E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   56 0000001E F04F 0A00       MOV              R10, #0
   57 00000022 487F            LDR              R0, =BATTLE_COUNTER
   58 00000024 F8C0 A000       STR              R10, [R0]
   59 00000028 497E            LDR              R1, =CIV_COUNTER
   60 0000002A F8C1 A000       STR              R10, [R1]
   61 0000002E 497E    getsample
                               LDR              R1,=ADC0_PSSI 
                                                            ; request a sample
   62 00000030 6808            LDR              R0,[R1]     ;
   63 00000032 F040 000C       ORR              R0,R0,#0x0C ; get a sample
   64 00000036 6008            STR              R0,[R1]     ;
   65 00000038         
   66 00000038 497C    loop    LDR              R1,=ADC0_RIS ; check for interr
                                                            up flag
   67 0000003A 6808            LDR              R0,[R1]     ;
   68 0000003C F010 000C       ANDS             R0,#0x0C    ;
   69 00000040 D0FA            BEQ              loop
   70 00000042         
   71 00000042 497B            LDR              R1,=ADC0_ISC ; clear the interr
                                                            upt flag
   72 00000044 6808            LDR              R0,[R1]     ;
   73 00000046 F040 000C       ORR              R0,#0x0C    ;
   74 0000004A 6008            STR              R0,[R1]     ; Interrupt flag is
                                                             cleared
   75 0000004C         
   76 0000004C         
   77 0000004C 4975            LDR              R1, =CIV_COUNTER
   78 0000004E 780C            LDRB             R4, [R1]
   79 00000050 2C00            CMP              R4, #0
   80 00000052 D90C            BLS              BATTLE
   81 00000054 4977            LDR              R1, =POSITION
   82 00000056 F7FF FFFE       BL               CIVILIAN
   83 0000005A 2C01            CMP              R4, #1
   84 0000005C D907            BLS              BATTLE
   85 0000005E 4976            LDR              R1, =(POSITION + 3)
   86 00000060 F7FF FFFE       BL               CIVILIAN
   87 00000064 2C02            CMP              R4, #2
   88 00000066 D902            BLS              BATTLE
   89 00000068 4974            LDR              R1, =(POSITION + 6)
   90 0000006A F7FF FFFE       BL               CIVILIAN
   91 0000006E         BATTLE



ARM Macro Assembler    Page 3 


   92 0000006E 486C            LDR              R0, =BATTLE_COUNTER
   93 00000070 7802            LDRB             R2, [R0]
   94 00000072 2A00            CMP              R2, #0
   95 00000074 D911            BLS              CURSOR
   96 00000076 4972            LDR              R1, =(POSITION + 13)
   97 00000078 F7FF FFFE       BL               BATTLESHIP
   98 0000007C 2A01            CMP              R2, #1
   99 0000007E D90C            BLS              CURSOR
  100 00000080 4970            LDR              R1, =(POSITION + 16)
  101 00000082 F7FF FFFE       BL               BATTLESHIP
  102 00000086 2A02            CMP              R2, #2
  103 00000088 D907            BLS              CURSOR
  104 0000008A 496F            LDR              R1, =(POSITION + 19)
  105 0000008C F7FF FFFE       BL               BATTLESHIP
  106 00000090 2A03            CMP              R2, #3
  107 00000092 D902            BLS              CURSOR
  108 00000094 496D            LDR              R1, =(POSITION + 22)
  109 00000096 F7FF FFFE       BL               BATTLESHIP
  110 0000009A         CURSOR
  111 0000009A 496D            LDR              R1,=ADC0_SSFIFO2 ;
  112 0000009C F8D1 8000       LDR              R8,[R1]     ; R8 is the data PE
                                                            3
  113 000000A0 F04F 00AE       MOV              R0,#174     ; get the first dig
                                                            it
  114 000000A4 FBB8 F8F0       UDIV             R8,R8,R0    ;   
  115 000000A8 496A            LDR              R1, =ADC0_SSFIFO3
  116 000000AA F8D1 9000       LDR              R9,[R1]
  117 000000AE F04F 004B       MOV              R0,#75      ; get the first dig
                                                            it
  118 000000B2 FBB9 F3F0       UDIV             R3,R9,R0    ;
  119 000000B6 F103 0384       ADD              R3, #0X84
  120 000000BA F04F 0641       MOV              R6, #0X41
  121 000000BE F1B8 0801       SUBS             R8, #1
  122 000000C2 BF0B 2201       MOVEQ            R2, #0X1
  123 000000C6 2202            MOVNE            R2, #0X2
  124 000000C8 2403            MOVEQ            R4, #0X3
  125 000000CA 2407            MOVNE            R4, #0X7
  126 000000CC         
  127 000000CC         LOP
  128 000000CC 4953            LDR              R1,=PORTA_DATA
  129 000000CE 6808            LDR              R0,[R1]
  130 000000D0 F020 0040       BIC              R0,#0x40
  131 000000D4 6008            STR              R0,[R1]
  132 000000D6         
  133 000000D6 461D            MOV              R5, R3
  134 000000D8 F7FF FFFE       BL               TRANSMIT
  135 000000DC 4635            MOV              R5, R6
  136 000000DE F7FF FFFE       BL               TRANSMIT
  137 000000E2         
  138 000000E2 494E            LDR              R1,=PORTA_DATA
  139 000000E4 6808            LDR              R0,[R1]
  140 000000E6 F040 0040       ORR              R0,#0x40
  141 000000EA 6008            STR              R0,[R1]
  142 000000EC 2E41            CMP              R6, #0X41
  143 000000EE BF04 FA02 
              F208             LSLEQ            R2, R8
  144 000000F4 FA04 F408       LSLEQ            R4, R8
  145 000000F8 D007            BEQ              WORK
  146 000000FA 2E42            CMP              R6, #0X42



ARM Macro Assembler    Page 4 


  147 000000FC BF04 BA52       REV16EQ          R2, R2
  148 00000100 BA64            REV16EQ          R4, R4
  149 00000102 2E43            CMP              R6, #0X43
  150 00000104 BF04 BA12       REVEQ            R2, R2
  151 00000108 BA24            REVEQ            R4, R4
  152 0000010A         WORK
  153 0000010A 2B85            CMP              R3, #0X85
  154 0000010C BF0C 25FF       MOVEQ            R5, #0XFF
  155 00000110 2500            MOVNE            R5, #0X0
  156 00000112 F7FF FFFE       BL               TRANSMIT
  157 00000116 4615            MOV              R5, R2      ;NE
  158 00000118 F7FF FFFE       BL               TRANSMIT
  159 0000011C 4625            MOV              R5, R4
  160 0000011E F7FF FFFE       BL               TRANSMIT
  161 00000122 4615            MOV              R5, R2
  162 00000124 F7FF FFFE       BL               TRANSMIT
  163 00000128 F04F 0500       MOV              R5, #0X0
  164 0000012C F7FF FFFE       BL               TRANSMIT
  165 00000130 F106 0601       ADD              R6, #1
  166 00000134 2E44            CMP              R6, #0X44
  167 00000136 D1C9            BNE              LOP
  168 00000138 E779            B                getsample   ;      
  169 0000013A         
  170 0000013A         
  171 0000013A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  172 0000013A         ;;;;;; CLEAR WHOLE SCREEN
  173 0000013A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  174 0000013A B503    CLEAR   PUSH             {R0,R1,LR}
  175 0000013C F04F 0000       MOV              R0,#0
  176 00000140 F240 11F7       MOV              R1, #503
  177 00000144 F04F 0500 
                       LOOP    MOV              R5, #0X0
  178 00000148 F7FF FFFE       BL               TRANSMIT
  179 0000014C F100 0001       ADD              R0, #1
  180 00000150 4288            CMP              R0,R1
  181 00000152 D1F7            BNE              LOOP
  182 00000154 E8BD 4003       POP              {R0,R1,LR}
  183 00000158 4770            BX               LR
  184 0000015A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  185 0000015A         
  186 0000015A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  187 0000015A         ;;;;;; CLEAR Y = 1 ROW
  188 0000015A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  189 0000015A B507    CLEARBOX1
                               PUSH{R0,         R1, R2, LR}
  190 0000015C 492F            LDR              R1,=PORTA_DATA
  191 0000015E 6808            LDR              R0,[R1]
  192 00000160 F020 0040       BIC              R0,#0x40
  193 00000164 6008            STR              R0,[R1]
  194 00000166         
  195 00000166 F04F 0586       MOV              R5, #0X86
  196 0000016A F7FF FFFE       BL               TRANSMIT
  197 0000016E F04F 0541       MOV              R5, #0X41
  198 00000172 F7FF FFFE       BL               TRANSMIT
  199 00000176         
  200 00000176 4929            LDR              R1,=PORTA_DATA
  201 00000178 6808            LDR              R0,[R1]
  202 0000017A F040 0040       ORR              R0,#0x40
  203 0000017E 6008            STR              R0,[R1]



ARM Macro Assembler    Page 5 


  204 00000180 F04F 0286       MOV              R2, #0X86
  205 00000184         
  206 00000184 F04F 0500 
                       LOOP_C  MOV              R5, #0X0
  207 00000188 F7FF FFFE       BL               TRANSMIT
  208 0000018C F102 0201       ADD              R2, #1
  209 00000190 2AC5            CMP              R2, #0XC5
  210 00000192 D1F7            BNE              LOOP_C
  211 00000194         
  212 00000194 E8BD 4007       POP{R0,          R1, R2, LR}
  213 00000198 4770            BX               LR
  214 0000019A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  215 0000019A         ;;;;;; CLEAR Y = 2 ROW
  216 0000019A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  217 0000019A B507    CLEARBOX2
                               PUSH{R0,         R1, R2, LR}
  218 0000019C 491F            LDR              R1,=PORTA_DATA
  219 0000019E 6808            LDR              R0,[R1]
  220 000001A0 F020 0040       BIC              R0,#0x40
  221 000001A4 6008            STR              R0,[R1]
  222 000001A6         
  223 000001A6 F04F 0586       MOV              R5, #0X86
  224 000001AA F7FF FFFE       BL               TRANSMIT
  225 000001AE F04F 0542       MOV              R5, #0X42
  226 000001B2 F7FF FFFE       BL               TRANSMIT
  227 000001B6         
  228 000001B6 4919            LDR              R1,=PORTA_DATA
  229 000001B8 6808            LDR              R0,[R1]
  230 000001BA F040 0040       ORR              R0,#0x40
  231 000001BE 6008            STR              R0,[R1]
  232 000001C0 F04F 0286       MOV              R2, #0X86
  233 000001C4         
  234 000001C4 F04F 0500 
                       LOOP_C_2
                               MOV              R5, #0X0
  235 000001C8 F7FF FFFE       BL               TRANSMIT
  236 000001CC F102 0201       ADD              R2, #1
  237 000001D0 2AC5            CMP              R2, #0XC5
  238 000001D2 D1F7            BNE              LOOP_C_2
  239 000001D4         
  240 000001D4 E8BD 4007       POP{R0,          R1, R2, LR}
  241 000001D8 4770            BX               LR
  242 000001DA         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  243 000001DA         ;;;;;; CLEAR Y = 3 ROW
  244 000001DA         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  245 000001DA B507    CLEARBOX3
                               PUSH{R0,         R1, R2, LR}
  246 000001DC 490F            LDR              R1,=PORTA_DATA
  247 000001DE 6808            LDR              R0,[R1]
  248 000001E0 F020 0040       BIC              R0,#0x40
  249 000001E4 6008            STR              R0,[R1]
  250 000001E6         
  251 000001E6 F04F 0586       MOV              R5, #0X86
  252 000001EA F7FF FFFE       BL               TRANSMIT
  253 000001EE F04F 0543       MOV              R5, #0X43
  254 000001F2 F7FF FFFE       BL               TRANSMIT
  255 000001F6         
  256 000001F6 4909            LDR              R1,=PORTA_DATA
  257 000001F8 6808            LDR              R0,[R1]



ARM Macro Assembler    Page 6 


  258 000001FA F040 0040       ORR              R0,#0x40
  259 000001FE 6008            STR              R0,[R1]
  260 00000200 F04F 0286       MOV              R2, #0X86
  261 00000204         
  262 00000204 F04F 0500 
                       LOOP_C_3
                               MOV              R5, #0X0
  263 00000208 F7FF FFFE       BL               TRANSMIT
  264 0000020C F102 0201       ADD              R2, #1
  265 00000210 2AC5            CMP              R2, #0XC5
  266 00000212 D1F7            BNE              LOOP_C_3
  267 00000214         
  268 00000214 E8BD 4007       POP{R0,          R1, R2, LR}
  269 00000218 4770            BX               LR
  270 0000021A         
  271 0000021A         
  272 0000021A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  273 0000021A         ;;;;; NUMBERS 0-9 BEGINNING
  274 0000021A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  275 0000021A         ;N0   PUSH  {LR} 
  276 0000021A         ;   MOV  R5, #0X3E
  277 0000021A         ;   BL  TRANSMIT
  278 0000021A         ;   MOV  R5, #0X51
  279 0000021A         ;   BL  TRANSMIT
  280 0000021A         ;   MOV  R5, #0X49
  281 0000021A         ;   BL  TRANSMIT   
  282 0000021A         ;   MOV  R5, #0X45
  283 0000021A         ;   BL  TRANSMIT
  284 0000021A         ;   MOV  R5, #0X3E
  285 0000021A         ;   BL  TRANSMIT   
  286 0000021A         ;   POP  {LR}
  287 0000021A         ;   BX  LR
  288 0000021A         
  289 0000021A         ;N1   PUSH  {LR} 
  290 0000021A         ;   MOV  R5, #0X0
  291 0000021A         ;   BL  TRANSMIT
  292 0000021A         ;   MOV  R5, #0X42
  293 0000021A         ;   BL  TRANSMIT
  294 0000021A         ;   MOV  R5, #0X7F
  295 0000021A         ;   BL  TRANSMIT   
  296 0000021A         ;   MOV  R5, #0X40
  297 0000021A         ;   BL  TRANSMIT
  298 0000021A         ;   MOV  R5, #0X0
  299 0000021A         ;   BL  TRANSMIT   
  300 0000021A         ;   POP  {LR}
  301 0000021A         ;   BX  LR
  302 0000021A         
  303 0000021A         ;N2   PUSH  {LR} 
  304 0000021A         ;   MOV  R5, #0X42
  305 0000021A         ;   BL  TRANSMIT
  306 0000021A         ;   MOV  R5, #0X61
  307 0000021A         ;   BL  TRANSMIT
  308 0000021A         ;   MOV  R5, #0X51
  309 0000021A         ;   BL  TRANSMIT   
  310 0000021A         ;   MOV  R5, #0X49
  311 0000021A         ;   BL  TRANSMIT
  312 0000021A         ;   MOV  R5, #0X46
  313 0000021A         ;   BL  TRANSMIT   
  314 0000021A         ;   POP  {LR}



ARM Macro Assembler    Page 7 


  315 0000021A         ;   BX  LR
  316 0000021A         ; 
  317 0000021A         ;N3   PUSH  {LR} 
  318 0000021A         ;   MOV  R5, #0X21
  319 0000021A         ;   BL  TRANSMIT
  320 0000021A         ;   MOV  R5, #0X41
  321 0000021A         ;   BL  TRANSMIT
  322 0000021A         ;   MOV  R5, #0X45
  323 0000021A         ;   BL  TRANSMIT   
  324 0000021A         ;   MOV  R5, #0X4B
  325 0000021A         ;   BL  TRANSMIT
  326 0000021A         ;   MOV  R5, #0X31
  327 0000021A         ;   BL  TRANSMIT   
  328 0000021A         ;   POP  {LR}
  329 0000021A         ;   BX  LR
  330 0000021A         
  331 0000021A         ;N4   PUSH  {LR} 
  332 0000021A         ;   MOV  R5, #0X18
  333 0000021A         ;   BL  TRANSMIT
  334 0000021A         ;   MOV  R5, #0X14
  335 0000021A         ;   BL  TRANSMIT
  336 0000021A         ;   MOV  R5, #0X12
  337 0000021A         ;   BL  TRANSMIT   
  338 0000021A         ;   MOV  R5, #0X7F
  339 0000021A         ;   BL  TRANSMIT
  340 0000021A         ;   MOV  R5, #0X10
  341 0000021A         ;   BL  TRANSMIT   
  342 0000021A         ;   POP  {LR}
  343 0000021A         ;   BX  LR
  344 0000021A         
  345 0000021A         ;N5   PUSH  {LR} 
  346 0000021A         ;   MOV  R5, #0X27
  347 0000021A         ;   BL  TRANSMIT
  348 0000021A         ;   MOV  R5, #0X45
  349 0000021A         ;   BL  TRANSMIT
  350 0000021A         ;   MOV  R5, #0X45
  351 0000021A         ;   BL  TRANSMIT   
  352 0000021A         ;   MOV  R5, #0X45
  353 0000021A         ;   BL  TRANSMIT
  354 0000021A         ;   MOV  R5, #0X39
  355 0000021A         ;   BL  TRANSMIT   
  356 0000021A         ;   POP  {LR}
  357 0000021A         ;   BX  LR
  358 0000021A         
  359 0000021A         ;N6   PUSH  {LR} 
  360 0000021A         ;   MOV  R5, #0X3C
  361 0000021A         ;   BL  TRANSMIT
  362 0000021A         ;   MOV  R5, #0X4A
  363 0000021A         ;   BL  TRANSMIT
  364 0000021A         ;   MOV  R5, #0X49
  365 0000021A         ;   BL  TRANSMIT   
  366 0000021A         ;   MOV  R5, #0X49
  367 0000021A         ;   BL  TRANSMIT
  368 0000021A         ;   MOV  R5, #0X30
  369 0000021A         ;   BL  TRANSMIT   
  370 0000021A         ;   POP  {LR}
  371 0000021A         ;   BX  LR
  372 0000021A         
  373 0000021A         ;N7   PUSH  {LR} 



ARM Macro Assembler    Page 8 


  374 0000021A         ;   MOV  R5, #0X1
  375 0000021A         ;   BL  TRANSMIT
  376 0000021A         ;   MOV  R5, #0X71
  377 0000021A         ;   BL  TRANSMIT
  378 0000021A         ;   MOV  R5, #0X9
  379 0000021A         ;   BL  TRANSMIT   
  380 0000021A         ;   MOV  R5, #0X5
  381 0000021A         ;   BL  TRANSMIT
  382 0000021A         ;   MOV  R5, #0X3
  383 0000021A         ;   BL  TRANSMIT   
  384 0000021A         ;   POP  {LR}
  385 0000021A         ;   BX  LR
  386 0000021A         
  387 0000021A         ;N8   PUSH  {LR} 
  388 0000021A         ;   MOV  R5, #0X36
  389 0000021A         ;   BL  TRANSMIT
  390 0000021A         ;   MOV  R5, #0X49
  391 0000021A         ;   BL  TRANSMIT
  392 0000021A         ;   MOV  R5, #0X49
  393 0000021A         ;   BL  TRANSMIT   
  394 0000021A         ;   MOV  R5, #0X49
  395 0000021A         ;   BL  TRANSMIT
  396 0000021A         ;   MOV  R5, #0X36
  397 0000021A         ;   BL  TRANSMIT   
  398 0000021A         ;   POP  {LR}
  399 0000021A         ;   BX  LR
  400 0000021A         
  401 0000021A         ;N9   PUSH  {LR} 
  402 0000021A         ;   MOV  R5, #0X6
  403 0000021A         ;   BL  TRANSMIT
  404 0000021A         ;   MOV  R5, #0X49
  405 0000021A         ;   BL  TRANSMIT
  406 0000021A         ;   MOV  R5, #0X49
  407 0000021A         ;   BL  TRANSMIT   
  408 0000021A         ;   MOV  R5, #0X29
  409 0000021A         ;   BL  TRANSMIT
  410 0000021A         ;   MOV  R5, #0X1E
  411 0000021A         ;   BL  TRANSMIT   
  412 0000021A         ;   POP  {LR}
  413 0000021A         ;   BX  LR
  414 0000021A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  415 0000021A         ;;;;; NUMBERS 0-9 FINISH
  416 0000021A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
  417 0000021A         
  418 0000021A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  419 0000021A         ;;;;; CHAR A-Z BEGINNING
  420 0000021A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  421 0000021A         ;A   
  422 0000021A         ;   PUSH  {LR}
  423 0000021A         ;   MOV  R5, #0X7E
  424 0000021A         ;   BL  TRANSMIT
  425 0000021A         ;   MOV  R5, #0X11
  426 0000021A         ;   BL  TRANSMIT
  427 0000021A         ;   MOV  R5, #0X11
  428 0000021A         ;   BL  TRANSMIT   
  429 0000021A         ;   MOV  R5, #0X11
  430 0000021A         ;   BL  TRANSMIT
  431 0000021A         ;   MOV  R5, #0X7E
  432 0000021A         ;   BL  TRANSMIT 



ARM Macro Assembler    Page 9 


  433 0000021A         ;   POP  {LR}
  434 0000021A         ;   BX  LR
  435 0000021A         ;B_   PUSH  {LR} 
  436 0000021A         ;   
  437 0000021A         ;   POP  {LR}
  438 0000021A         ;   BX  LR   
  439 0000021A         ;C   PUSH  {LR} 
  440 0000021A         ;   
  441 0000021A         ;   POP  {LR}
  442 0000021A         ;   BX  LR
  443 0000021A         ;D   PUSH  {LR} 
  444 0000021A         ;   
  445 0000021A         ;   POP  {LR}
  446 0000021A         ;   BX  LR
  447 0000021A         ;E   PUSH  {LR} 
  448 0000021A         ;   
  449 0000021A         ;   POP  {LR}
  450 0000021A         ;   BX  LR   
  451 0000021A         
  452 0000021A         ;I   PUSH  {LR} 
  453 0000021A         ;   MOV  R5, #0X00
  454 0000021A         ;   BL  TRANSMIT
  455 0000021A         ;   MOV  R5, #0X41
  456 0000021A         ;   BL  TRANSMIT
  457 0000021A         ;   MOV  R5, #0X7F
  458 0000021A         ;   BL  TRANSMIT   
  459 0000021A         ;   MOV  R5, #0X41
  460 0000021A         ;   BL  TRANSMIT
  461 0000021A         ;   MOV  R5, #0X00
  462 0000021A         ;   BL  TRANSMIT
  463 0000021A         ;   POP  {LR}
  464 0000021A         ;   BX  LR
  465 0000021A         ; 
  466 0000021A         ;K   PUSH  {LR}
  467 0000021A         ;   MOV  R5, #0X7F
  468 0000021A         ;   BL  TRANSMIT
  469 0000021A         ;   MOV  R5, #0X8
  470 0000021A         ;   BL  TRANSMIT
  471 0000021A         ;   MOV  R5, #0X14
  472 0000021A         ;   BL  TRANSMIT
  473 0000021A         ;   MOV  R5, #0X22
  474 0000021A         ;   BL  TRANSMIT   
  475 0000021A         ;   MOV  R5, #0X41
  476 0000021A         ;   BL  TRANSMIT
  477 0000021A         ;   POP  {LR}
  478 0000021A         ;   BX  LR 
  479 0000021A         ;   
  480 0000021A         ;L   PUSH  {LR}
  481 0000021A         ;   MOV  R5, #0X7F
  482 0000021A         ;   BL  TRANSMIT
  483 0000021A         ;   MOV  R5, #0X40
  484 0000021A         ;   BL  TRANSMIT
  485 0000021A         ;   MOV  R5, #0X40
  486 0000021A         ;   BL  TRANSMIT
  487 0000021A         ;   MOV  R5, #0X40
  488 0000021A         ;   BL  TRANSMIT   
  489 0000021A         ;   MOV  R5, #0X40
  490 0000021A         ;   BL  TRANSMIT   
  491 0000021A         ;   POP  {LR}



ARM Macro Assembler    Page 10 


  492 0000021A         ;   BX  LR 
  493 0000021A         
  494 0000021A         
  495 0000021A         
  496 0000021A         ;M   PUSH  {LR}
  497 0000021A         ;   MOV  R5, #0X7F
  498 0000021A         ;   BL  TRANSMIT
  499 0000021A         ;   MOV  R5, #0X02
  500 0000021A         ;   BL  TRANSMIT
  501 0000021A         ;   MOV  R5, #0XC
  502 0000021A         ;   BL  TRANSMIT
  503 0000021A         ;   MOV  R5, #0X2
  504 0000021A         ;   BL  TRANSMIT   
  505 0000021A         ;   MOV  R5, #0X7F
  506 0000021A         ;   BL  TRANSMIT    
  507 0000021A         ;   POP  {LR}
  508 0000021A         ;   BX  LR
  509 0000021A         
  510 0000021A         ;N   PUSH  {LR}   
  511 0000021A         ;   MOV  R5, #0X7F
  512 0000021A         ;   BL  TRANSMIT
  513 0000021A         ;   MOV  R5, #0X04
  514 0000021A         ;   BL  TRANSMIT
  515 0000021A         ;   MOV  R5, #0X8
  516 0000021A         ;   BL  TRANSMIT
  517 0000021A         ;   MOV  R5, #0X10
  518 0000021A         ;   BL  TRANSMIT   
  519 0000021A         ;   MOV  R5, #0X7F
  520 0000021A         ;   BL  TRANSMIT   
  521 0000021A         ;   POP  {LR}
  522 0000021A         ;   BX  LR 
  523 0000021A         
  524 0000021A         ;S   PUSH  {LR}   
  525 0000021A         ;   MOV  R5, #0X46
  526 0000021A         ;   BL  TRANSMIT
  527 0000021A         ;   MOV  R5, #0X49
  528 0000021A         ;   BL  TRANSMIT
  529 0000021A         ;   MOV  R5, #0X49
  530 0000021A         ;   BL  TRANSMIT
  531 0000021A         ;   MOV  R5, #0X49
  532 0000021A         ;   BL  TRANSMIT   
  533 0000021A         ;   MOV  R5, #0X31
  534 0000021A         ;   BL  TRANSMIT   
  535 0000021A         ;   POP  {LR}
  536 0000021A         ;   BX  LR  
  537 0000021A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  538 0000021A         ;;;;; CHAR A-Z FINISH
  539 0000021A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  540 0000021A 00 00           ALIGN
  541 0000021C                 END
              400043FC 
              20000419 
              2000041A 
              40038028 
              40038004 
              4003800C 
              20000400 
              20000403 
              20000406 



ARM Macro Assembler    Page 11 


              2000040D 
              20000410 
              20000413 
              20000416 
              40038088 
              400380A8 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\__main.d -o.\objects\__main.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\__main.lst __main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BATTLE 0000006E

Symbol: BATTLE
   Definitions
      At line 91 in file __main.s
   Uses
      At line 80 in file __main.s
      At line 84 in file __main.s
      At line 88 in file __main.s

CLEAR 0000013A

Symbol: CLEAR
   Definitions
      At line 174 in file __main.s
   Uses
      At line 35 in file __main.s
Comment: CLEAR used once
CLEARBOX1 0000015A

Symbol: CLEARBOX1
   Definitions
      At line 189 in file __main.s
   Uses
      None
Comment: CLEARBOX1 unused
CLEARBOX2 0000019A

Symbol: CLEARBOX2
   Definitions
      At line 217 in file __main.s
   Uses
      None
Comment: CLEARBOX2 unused
CLEARBOX3 000001DA

Symbol: CLEARBOX3
   Definitions
      At line 245 in file __main.s
   Uses
      None
Comment: CLEARBOX3 unused
CURSOR 0000009A

Symbol: CURSOR
   Definitions
      At line 110 in file __main.s
   Uses
      At line 95 in file __main.s
      At line 99 in file __main.s
      At line 103 in file __main.s
      At line 107 in file __main.s

LOOP 00000144

Symbol: LOOP
   Definitions
      At line 177 in file __main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 181 in file __main.s
Comment: LOOP used once
LOOP_C 00000184

Symbol: LOOP_C
   Definitions
      At line 206 in file __main.s
   Uses
      At line 210 in file __main.s
Comment: LOOP_C used once
LOOP_C_2 000001C4

Symbol: LOOP_C_2
   Definitions
      At line 234 in file __main.s
   Uses
      At line 238 in file __main.s
Comment: LOOP_C_2 used once
LOOP_C_3 00000204

Symbol: LOOP_C_3
   Definitions
      At line 262 in file __main.s
   Uses
      At line 266 in file __main.s
Comment: LOOP_C_3 used once
LOP 000000CC

Symbol: LOP
   Definitions
      At line 127 in file __main.s
   Uses
      At line 167 in file __main.s
Comment: LOP used once
WORK 0000010A

Symbol: WORK
   Definitions
      At line 152 in file __main.s
   Uses
      At line 145 in file __main.s
Comment: WORK used once
__main 00000000

Symbol: __main
   Definitions
      At line 27 in file __main.s
   Uses
      At line 25 in file __main.s
Comment: __main used once
getsample 0000002E

Symbol: getsample
   Definitions
      At line 61 in file __main.s
   Uses
      At line 168 in file __main.s
Comment: getsample used once
loop 00000038



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: loop
   Definitions
      At line 66 in file __main.s
   Uses
      At line 69 in file __main.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 11 in file __main.s
   Uses
      None
Comment: main unused
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 5 in file __main.s
   Uses
      At line 71 in file __main.s
Comment: ADC0_ISC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 4 in file __main.s
   Uses
      At line 61 in file __main.s
Comment: ADC0_PSSI used once
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 1 in file __main.s
   Uses
      At line 66 in file __main.s
Comment: ADC0_RIS used once
ADC0_SSFIFO2 40038088

Symbol: ADC0_SSFIFO2
   Definitions
      At line 2 in file __main.s
   Uses
      At line 111 in file __main.s
Comment: ADC0_SSFIFO2 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 3 in file __main.s
   Uses
      At line 115 in file __main.s
Comment: ADC0_SSFIFO3 used once
ADC0_SSFSTAT2 4003808C

Symbol: ADC0_SSFSTAT2
   Definitions
      At line 6 in file __main.s
   Uses
      None
Comment: ADC0_SSFSTAT2 unused
BATTLE_COUNTER 20000419

Symbol: BATTLE_COUNTER
   Definitions
      At line 9 in file __main.s
   Uses
      At line 57 in file __main.s
      At line 92 in file __main.s

CIV_COUNTER 2000041A




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: CIV_COUNTER
   Definitions
      At line 10 in file __main.s
   Uses
      At line 59 in file __main.s
      At line 77 in file __main.s

PORTA_DATA 400043FC

Symbol: PORTA_DATA
   Definitions
      At line 7 in file __main.s
   Uses
      At line 31 in file __main.s
      At line 128 in file __main.s
      At line 138 in file __main.s
      At line 190 in file __main.s
      At line 200 in file __main.s
      At line 218 in file __main.s
      At line 228 in file __main.s
      At line 246 in file __main.s
      At line 256 in file __main.s

POSITION 20000400

Symbol: POSITION
   Definitions
      At line 8 in file __main.s
   Uses
      At line 81 in file __main.s
      At line 85 in file __main.s
      At line 89 in file __main.s
      At line 96 in file __main.s
      At line 100 in file __main.s
      At line 104 in file __main.s
      At line 108 in file __main.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BATTLESHIP 00000000

Symbol: BATTLESHIP
   Definitions
      At line 19 in file __main.s
   Uses
      At line 97 in file __main.s
      At line 101 in file __main.s
      At line 105 in file __main.s
      At line 109 in file __main.s

BOUNDARY 00000000

Symbol: BOUNDARY
   Definitions
      At line 20 in file __main.s
   Uses
      At line 36 in file __main.s
Comment: BOUNDARY used once
CIVILIAN 00000000

Symbol: CIVILIAN
   Definitions
      At line 21 in file __main.s
   Uses
      At line 82 in file __main.s
      At line 86 in file __main.s
      At line 90 in file __main.s

DELAY 00000000

Symbol: DELAY
   Definitions
      At line 15 in file __main.s
   Uses
      None
Comment: DELAY unused
GPIOPortF_Handler 00000000

Symbol: GPIOPortF_Handler
   Definitions
      At line 23 in file __main.s
   Uses
      None
Comment: GPIOPortF_Handler unused
GPIO_INIT 00000000

Symbol: GPIO_INIT
   Definitions
      At line 24 in file __main.s
   Uses
      At line 30 in file __main.s
Comment: GPIO_INIT used once
Init 00000000

Symbol: Init
   Definitions
      At line 14 in file __main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 28 in file __main.s
Comment: Init used once
LCD_INIT 00000000

Symbol: LCD_INIT
   Definitions
      At line 13 in file __main.s
   Uses
      At line 29 in file __main.s
Comment: LCD_INIT used once
OutChar 00000000

Symbol: OutChar
   Definitions
      At line 16 in file __main.s
   Uses
      None
Comment: OutChar unused
TIMER_INIT 00000000

Symbol: TIMER_INIT
   Definitions
      At line 18 in file __main.s
   Uses
      None
Comment: TIMER_INIT unused
TRANSMIT 00000000

Symbol: TRANSMIT
   Definitions
      At line 17 in file __main.s
   Uses
      At line 134 in file __main.s
      At line 136 in file __main.s
      At line 156 in file __main.s
      At line 158 in file __main.s
      At line 160 in file __main.s
      At line 162 in file __main.s
      At line 164 in file __main.s
      At line 178 in file __main.s
      At line 196 in file __main.s
      At line 198 in file __main.s
      At line 207 in file __main.s
      At line 224 in file __main.s
      At line 226 in file __main.s
      At line 235 in file __main.s
      At line 252 in file __main.s
      At line 254 in file __main.s
      At line 263 in file __main.s

Timer0A_Handler 00000000

Symbol: Timer0A_Handler
   Definitions
      At line 22 in file __main.s
   Uses
      None
Comment: Timer0A_Handler unused
12 symbols



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

374 symbols in table
