


ARM Macro Assembler    Page 1 


    1 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
    2 00000000 40038088 
                       ADC0_SSFIFO2
                               EQU              0x40038088  ; Channel 2 results
                                                            
    3 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                             
    4 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
    5 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C  ; ISC
    6 00000000 4003808C 
                       ADC0_SSFSTAT2
                               EQU              0X4003808C
    7 00000000 400043FC 
                       PORTA_DATA
                               EQU              0x400043FC
    8 00000000         
    9 00000000                 AREA             main, CODE, READONLY
   10 00000000                 THUMB
   11 00000000                 IMPORT           LCD_INIT
   12 00000000                 IMPORT           Init
   13 00000000                 IMPORT           DELAY
   14 00000000                 EXTERN           OutChar
   15 00000000                 EXTERN           TRANSMIT
   16 00000000                 EXTERN           TIMER_INIT
   17 00000000                 EXTERN           BATTLESHIP
   18 00000000                 EXTERN           BOUNDARY
   19 00000000                 EXTERN           CIVILIAN
   20 00000000                 EXTERN           Timer0A_Handler
   21 00000000                 EXTERN           GPIOPortF_Handler
   22 00000000                 EXTERN           GPIO_INIT
   23 00000000                 EXPORT           __main
   24 00000000         
   25 00000000         __main
   26 00000000 F7FF FFFE       BL               Init
   27 00000004 F7FF FFFE       BL               LCD_INIT
   28 00000008 F7FF FFFE       BL               GPIO_INIT
   29 0000000C 4990            LDR              R1,=PORTA_DATA
   30 0000000E 6808            LDR              R0,[R1]
   31 00000010 F040 0040       ORR              R0,#0x40
   32 00000014 6008            STR              R0,[R1]
   33 00000016         
   34 00000016         
   35 00000016 F000 F8AA       BL               CLEAR
   36 0000001A F7FF FFFE       BL               BOUNDARY
   37 0000001E         ;   BL  TIMER_INIT
   38 0000001E         ;   MOV R7, #21  ;this counter for timer 
   39 0000001E F04F 0600       MOV              R6,#0       ;
   40 00000022 F04F 0700       MOV              R7, #0
   41 00000026 F04F 0B00       MOV              R11, #0
   42 0000002A 498A    getsample
                               LDR              R1,=ADC0_PSSI 



ARM Macro Assembler    Page 2 


                                                            ; request a sample
   43 0000002C 6808            LDR              R0,[R1]     ;
   44 0000002E F040 000C       ORR              R0,R0,#0x0C ; get a sample
   45 00000032 6008            STR              R0,[R1]     ;
   46 00000034         
   47 00000034 4988    loop    LDR              R1,=ADC0_RIS ; check for interr
                                                            up flag
   48 00000036 6808            LDR              R0,[R1]     ;
   49 00000038 F010 000C       ANDS             R0,#0x0C    ;
   50 0000003C D0FA            BEQ              loop
   51 0000003E         
   52 0000003E 4987            LDR              R1,=ADC0_ISC ; clear the interr
                                                            upt flag
   53 00000040 6808            LDR              R0,[R1]     ;
   54 00000042 F040 000C       ORR              R0,#0x0C    ;
   55 00000046 6008            STR              R0,[R1]     ; Interrupt flag is
                                                             cleared
   56 00000048         
   57 00000048 4985            LDR              R1,=ADC0_SSFIFO2 ;
   58 0000004A F8D1 8000       LDR              R8,[R1]     ; R8 is the data PE
                                                            3
   59 0000004E         
   60 0000004E         
   61 0000004E 4985            LDR              R1, =ADC0_SSFIFO3
   62 00000050 F8D1 9000       LDR              R9,[R1]
   63 00000054         
   64 00000054 EBA9 0006       SUB              R0,R9,R6    ; check sampled dat
                                                            a - previous > 1pix
                                                            
   65 00000058 2846            CMP              R0,#70      ;
   66 0000005A BFC8 2101       MOVGT            R1, #1
   67 0000005E EBA8 0007       SUB              R0,R8,R7    ; check sampled dat
                                                            a - previous > 1pix
                                                            
   68 00000062 28A0            CMP              R0,#160     ;
   69 00000064 BFC8 2001       MOVGT            R0, #1
   70 00000068 EA40 0001       ORR              R0, R1
   71 0000006C D100            BNE              CURSOR
   72 0000006E D0DC            BEQ              getsample
   73 00000070         
   74 00000070         CURSOR
   75 00000070         ;   BL  BOUNDARY
   76 00000070         ;   BL  BATTLESHIP
   77 00000070         ;   BL  CIVILIAN
   78 00000070 464E            MOV              R6,R9       ;
   79 00000072 F04F 0049       MOV              R0,#73      ; get the first dig
                                                            it
   80 00000076 FBB9 F3F0       UDIV             R3,R9,R0    ;
   81 0000007A F103 0384       ADD              R3, #0X84
   82 0000007E         
   83 0000007E 4647            MOV              R7,R8       ;
   84 00000080 F04F 00AB       MOV              R0,#171     ; get the first dig
                                                            it
   85 00000084 FBB8 F8F0       UDIV             R8,R8,R0    ;
   86 00000088 F1B8 0F08       CMP              R8, #8
   87 0000008C BF38 2441       MOVCC            R4, #0X41
   88 00000090 D30D            BCC              ROW1
   89 00000092 F1B8 0F10       CMP              R8, #16
   90 00000096 BF3C 2442       MOVCC            R4, #0X42



ARM Macro Assembler    Page 3 


   91 0000009A F1A8 0808       SUBCC            R8, #8
   92 0000009E D307            BCC              ROW2
   93 000000A0 F1B8 0F18       CMP              R8, #24
   94 000000A4 BF3C 2443       MOVCC            R4, #0X43
   95 000000A8 F1A8 0810       SUBCC            R8, #16
   96 000000AC         ;   BL  CLEARBOX2
   97 000000AC E000            B                CURSOR_2
   98 000000AE         ROW1
   99 000000AE         ;   BL CLEARBOX2
  100 000000AE E7FF            B                CURSOR_2
  101 000000B0         ROW2
  102 000000B0         ;   BL CLEARBOX1
  103 000000B0         ;   BL CLEARBOX3   
  104 000000B0         CURSOR_2
  105 000000B0 4967            LDR              R1,=PORTA_DATA
  106 000000B2 6808            LDR              R0,[R1]
  107 000000B4 F020 0040       BIC              R0,#0x40
  108 000000B8 6008            STR              R0,[R1]
  109 000000BA         
  110 000000BA 461D            MOV              R5, R3
  111 000000BC F7FF FFFE       BL               TRANSMIT
  112 000000C0 4625            MOV              R5, R4
  113 000000C2 F7FF FFFE       BL               TRANSMIT
  114 000000C6         
  115 000000C6 4962            LDR              R1,=PORTA_DATA
  116 000000C8 6808            LDR              R0,[R1]
  117 000000CA F040 0040       ORR              R0,#0x40
  118 000000CE 6008            STR              R0,[R1]
  119 000000D0         
  120 000000D0 2B85            CMP              R3, #0X85
  121 000000D2 BF0C 25FF       MOVEQ            R5, #0XFF
  122 000000D6 2500            MOVNE            R5, #0X0
  123 000000D8 F7FF FFFE       BL               TRANSMIT
  124 000000DC F1B8 0F00       CMP              R8, #0
  125 000000E0 D01E            BEQ              ZERO
  126 000000E2 F1B8 0F07       CMP              R8, #7
  127 000000E6 D02E            BEQ              SEVEN
  128 000000E8 F1A8 0801       SUB              R8, #1
  129 000000EC 2B84            CMP              R3, #0X84
  130 000000EE BF0B 20FF       MOVEQ            R0, #0XFF
  131 000000F2 2002            MOVNE            R0, #0X2
  132 000000F4 4605            MOVEQ            R5, R0
  133 000000F6 FA00 F508       MOVNE            R5, R0, LSL R8
  134 000000FA F7FF FFFE       BL               TRANSMIT
  135 000000FE F04F 0007       MOV              R0, #0X7
  136 00000102 FA00 F508       MOV              R5, R0, LSL R8
  137 00000106 F7FF FFFE       BL               TRANSMIT
  138 0000010A F04F 0002       MOV              R0, #0X2
  139 0000010E FA00 F508       MOV              R5, R0, LSL R8
  140 00000112 F7FF FFFE       BL               TRANSMIT
  141 00000116 F04F 0500       MOV              R5, #0X0
  142 0000011A F7FF FFFE       BL               TRANSMIT
  143 0000011E E784            B                getsample   ;   
  144 00000120         
  145 00000120         ZERO
  146 00000120 2B84            CMP              R3, #0X84
  147 00000122 BF0C 25FF       MOVEQ            R5, #0XFF
  148 00000126 2501            MOVNE            R5, #0X1
  149 00000128 F7FF FFFE       BL               TRANSMIT



ARM Macro Assembler    Page 4 


  150 0000012C F04F 0503       MOV              R5, #0X3
  151 00000130 F7FF FFFE       BL               TRANSMIT
  152 00000134 F04F 0501       MOV              R5, #0X1
  153 00000138 F7FF FFFE       BL               TRANSMIT
  154 0000013C F04F 0500       MOV              R5, #0X0
  155 00000140 F7FF FFFE       BL               TRANSMIT
  156 00000144 E771            B                getsample   ;
  157 00000146         
  158 00000146         SEVEN
  159 00000146 2B84            CMP              R3, #0X84
  160 00000148 BF0C 25FF       MOVEQ            R5, #0XFF
  161 0000014C 2580            MOVNE            R5, #0X80
  162 0000014E F7FF FFFE       BL               TRANSMIT
  163 00000152 F04F 05C0       MOV              R5, #0XC0
  164 00000156 F7FF FFFE       BL               TRANSMIT
  165 0000015A F04F 0580       MOV              R5, #0X80
  166 0000015E F7FF FFFE       BL               TRANSMIT
  167 00000162 F04F 0500       MOV              R5, #0X0
  168 00000166 F7FF FFFE       BL               TRANSMIT
  169 0000016A E75E            B                getsample   ;
  170 0000016C         
  171 0000016C         
  172 0000016C         FIN
  173 0000016C E7FE            B                FIN
  174 0000016E         
  175 0000016E         
  176 0000016E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  177 0000016E         ;;;;;; CLEAR WHOLE SCREEN
  178 0000016E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  179 0000016E B503    CLEAR   PUSH             {R0,R1,LR}
  180 00000170 F04F 0000       MOV              R0,#0
  181 00000174 F240 11F7       MOV              R1, #503
  182 00000178 F04F 0500 
                       LOOP    MOV              R5, #0X0
  183 0000017C F7FF FFFE       BL               TRANSMIT
  184 00000180 F100 0001       ADD              R0, #1
  185 00000184 4288            CMP              R0,R1
  186 00000186 D1F7            BNE              LOOP
  187 00000188 E8BD 4003       POP              {R0,R1,LR}
  188 0000018C 4770            BX               LR
  189 0000018E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  190 0000018E         
  191 0000018E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  192 0000018E         ;;;;;; CLEAR Y = 1 ROW
  193 0000018E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  194 0000018E B507    CLEARBOX1
                               PUSH{R0,         R1, R2, LR}
  195 00000190 492F            LDR              R1,=PORTA_DATA
  196 00000192 6808            LDR              R0,[R1]
  197 00000194 F020 0040       BIC              R0,#0x40
  198 00000198 6008            STR              R0,[R1]
  199 0000019A         
  200 0000019A F04F 0586       MOV              R5, #0X86
  201 0000019E F7FF FFFE       BL               TRANSMIT
  202 000001A2 F04F 0541       MOV              R5, #0X41
  203 000001A6 F7FF FFFE       BL               TRANSMIT
  204 000001AA         
  205 000001AA 4929            LDR              R1,=PORTA_DATA
  206 000001AC 6808            LDR              R0,[R1]



ARM Macro Assembler    Page 5 


  207 000001AE F040 0040       ORR              R0,#0x40
  208 000001B2 6008            STR              R0,[R1]
  209 000001B4 F04F 0286       MOV              R2, #0X86
  210 000001B8         
  211 000001B8 F04F 0500 
                       LOOP_C  MOV              R5, #0X0
  212 000001BC F7FF FFFE       BL               TRANSMIT
  213 000001C0 F102 0201       ADD              R2, #1
  214 000001C4 2AC5            CMP              R2, #0XC5
  215 000001C6 D1F7            BNE              LOOP_C
  216 000001C8         
  217 000001C8 E8BD 4007       POP{R0,          R1, R2, LR}
  218 000001CC 4770            BX               LR
  219 000001CE         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  220 000001CE         ;;;;;; CLEAR Y = 2 ROW
  221 000001CE         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  222 000001CE B507    CLEARBOX2
                               PUSH{R0,         R1, R2, LR}
  223 000001D0 491F            LDR              R1,=PORTA_DATA
  224 000001D2 6808            LDR              R0,[R1]
  225 000001D4 F020 0040       BIC              R0,#0x40
  226 000001D8 6008            STR              R0,[R1]
  227 000001DA         
  228 000001DA F04F 0586       MOV              R5, #0X86
  229 000001DE F7FF FFFE       BL               TRANSMIT
  230 000001E2 F04F 0542       MOV              R5, #0X42
  231 000001E6 F7FF FFFE       BL               TRANSMIT
  232 000001EA         
  233 000001EA 4919            LDR              R1,=PORTA_DATA
  234 000001EC 6808            LDR              R0,[R1]
  235 000001EE F040 0040       ORR              R0,#0x40
  236 000001F2 6008            STR              R0,[R1]
  237 000001F4 F04F 0286       MOV              R2, #0X86
  238 000001F8         
  239 000001F8 F04F 0500 
                       LOOP_C_2
                               MOV              R5, #0X0
  240 000001FC F7FF FFFE       BL               TRANSMIT
  241 00000200 F102 0201       ADD              R2, #1
  242 00000204 2AC5            CMP              R2, #0XC5
  243 00000206 D1F7            BNE              LOOP_C_2
  244 00000208         
  245 00000208 E8BD 4007       POP{R0,          R1, R2, LR}
  246 0000020C 4770            BX               LR
  247 0000020E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  248 0000020E         ;;;;;; CLEAR Y = 3 ROW
  249 0000020E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  250 0000020E B507    CLEARBOX3
                               PUSH{R0,         R1, R2, LR}
  251 00000210 490F            LDR              R1,=PORTA_DATA
  252 00000212 6808            LDR              R0,[R1]
  253 00000214 F020 0040       BIC              R0,#0x40
  254 00000218 6008            STR              R0,[R1]
  255 0000021A         
  256 0000021A F04F 0586       MOV              R5, #0X86
  257 0000021E F7FF FFFE       BL               TRANSMIT
  258 00000222 F04F 0543       MOV              R5, #0X43
  259 00000226 F7FF FFFE       BL               TRANSMIT
  260 0000022A         



ARM Macro Assembler    Page 6 


  261 0000022A 4909            LDR              R1,=PORTA_DATA
  262 0000022C 6808            LDR              R0,[R1]
  263 0000022E F040 0040       ORR              R0,#0x40
  264 00000232 6008            STR              R0,[R1]
  265 00000234 F04F 0286       MOV              R2, #0X86
  266 00000238         
  267 00000238 F04F 0500 
                       LOOP_C_3
                               MOV              R5, #0X0
  268 0000023C F7FF FFFE       BL               TRANSMIT
  269 00000240 F102 0201       ADD              R2, #1
  270 00000244 2AC5            CMP              R2, #0XC5
  271 00000246 D1F7            BNE              LOOP_C_3
  272 00000248         
  273 00000248 E8BD 4007       POP{R0,          R1, R2, LR}
  274 0000024C 4770            BX               LR
  275 0000024E         
  276 0000024E         
  277 0000024E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  278 0000024E         ;;;;; NUMBERS 0-9 BEGINNING
  279 0000024E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  280 0000024E         ;N0   PUSH  {LR} 
  281 0000024E         ;   MOV  R5, #0X3E
  282 0000024E         ;   BL  TRANSMIT
  283 0000024E         ;   MOV  R5, #0X51
  284 0000024E         ;   BL  TRANSMIT
  285 0000024E         ;   MOV  R5, #0X49
  286 0000024E         ;   BL  TRANSMIT   
  287 0000024E         ;   MOV  R5, #0X45
  288 0000024E         ;   BL  TRANSMIT
  289 0000024E         ;   MOV  R5, #0X3E
  290 0000024E         ;   BL  TRANSMIT   
  291 0000024E         ;   POP  {LR}
  292 0000024E         ;   BX  LR
  293 0000024E         
  294 0000024E         ;N1   PUSH  {LR} 
  295 0000024E         ;   MOV  R5, #0X0
  296 0000024E         ;   BL  TRANSMIT
  297 0000024E         ;   MOV  R5, #0X42
  298 0000024E         ;   BL  TRANSMIT
  299 0000024E         ;   MOV  R5, #0X7F
  300 0000024E         ;   BL  TRANSMIT   
  301 0000024E         ;   MOV  R5, #0X40
  302 0000024E         ;   BL  TRANSMIT
  303 0000024E         ;   MOV  R5, #0X0
  304 0000024E         ;   BL  TRANSMIT   
  305 0000024E         ;   POP  {LR}
  306 0000024E         ;   BX  LR
  307 0000024E         
  308 0000024E         ;N2   PUSH  {LR} 
  309 0000024E         ;   MOV  R5, #0X42
  310 0000024E         ;   BL  TRANSMIT
  311 0000024E         ;   MOV  R5, #0X61
  312 0000024E         ;   BL  TRANSMIT
  313 0000024E         ;   MOV  R5, #0X51
  314 0000024E         ;   BL  TRANSMIT   
  315 0000024E         ;   MOV  R5, #0X49
  316 0000024E         ;   BL  TRANSMIT
  317 0000024E         ;   MOV  R5, #0X46



ARM Macro Assembler    Page 7 


  318 0000024E         ;   BL  TRANSMIT   
  319 0000024E         ;   POP  {LR}
  320 0000024E         ;   BX  LR
  321 0000024E         ; 
  322 0000024E         ;N3   PUSH  {LR} 
  323 0000024E         ;   MOV  R5, #0X21
  324 0000024E         ;   BL  TRANSMIT
  325 0000024E         ;   MOV  R5, #0X41
  326 0000024E         ;   BL  TRANSMIT
  327 0000024E         ;   MOV  R5, #0X45
  328 0000024E         ;   BL  TRANSMIT   
  329 0000024E         ;   MOV  R5, #0X4B
  330 0000024E         ;   BL  TRANSMIT
  331 0000024E         ;   MOV  R5, #0X31
  332 0000024E         ;   BL  TRANSMIT   
  333 0000024E         ;   POP  {LR}
  334 0000024E         ;   BX  LR
  335 0000024E         
  336 0000024E         ;N4   PUSH  {LR} 
  337 0000024E         ;   MOV  R5, #0X18
  338 0000024E         ;   BL  TRANSMIT
  339 0000024E         ;   MOV  R5, #0X14
  340 0000024E         ;   BL  TRANSMIT
  341 0000024E         ;   MOV  R5, #0X12
  342 0000024E         ;   BL  TRANSMIT   
  343 0000024E         ;   MOV  R5, #0X7F
  344 0000024E         ;   BL  TRANSMIT
  345 0000024E         ;   MOV  R5, #0X10
  346 0000024E         ;   BL  TRANSMIT   
  347 0000024E         ;   POP  {LR}
  348 0000024E         ;   BX  LR
  349 0000024E         
  350 0000024E         ;N5   PUSH  {LR} 
  351 0000024E         ;   MOV  R5, #0X27
  352 0000024E         ;   BL  TRANSMIT
  353 0000024E         ;   MOV  R5, #0X45
  354 0000024E         ;   BL  TRANSMIT
  355 0000024E         ;   MOV  R5, #0X45
  356 0000024E         ;   BL  TRANSMIT   
  357 0000024E         ;   MOV  R5, #0X45
  358 0000024E         ;   BL  TRANSMIT
  359 0000024E         ;   MOV  R5, #0X39
  360 0000024E         ;   BL  TRANSMIT   
  361 0000024E         ;   POP  {LR}
  362 0000024E         ;   BX  LR
  363 0000024E         
  364 0000024E         ;N6   PUSH  {LR} 
  365 0000024E         ;   MOV  R5, #0X3C
  366 0000024E         ;   BL  TRANSMIT
  367 0000024E         ;   MOV  R5, #0X4A
  368 0000024E         ;   BL  TRANSMIT
  369 0000024E         ;   MOV  R5, #0X49
  370 0000024E         ;   BL  TRANSMIT   
  371 0000024E         ;   MOV  R5, #0X49
  372 0000024E         ;   BL  TRANSMIT
  373 0000024E         ;   MOV  R5, #0X30
  374 0000024E         ;   BL  TRANSMIT   
  375 0000024E         ;   POP  {LR}
  376 0000024E         ;   BX  LR



ARM Macro Assembler    Page 8 


  377 0000024E         
  378 0000024E         ;N7   PUSH  {LR} 
  379 0000024E         ;   MOV  R5, #0X1
  380 0000024E         ;   BL  TRANSMIT
  381 0000024E         ;   MOV  R5, #0X71
  382 0000024E         ;   BL  TRANSMIT
  383 0000024E         ;   MOV  R5, #0X9
  384 0000024E         ;   BL  TRANSMIT   
  385 0000024E         ;   MOV  R5, #0X5
  386 0000024E         ;   BL  TRANSMIT
  387 0000024E         ;   MOV  R5, #0X3
  388 0000024E         ;   BL  TRANSMIT   
  389 0000024E         ;   POP  {LR}
  390 0000024E         ;   BX  LR
  391 0000024E         
  392 0000024E         ;N8   PUSH  {LR} 
  393 0000024E         ;   MOV  R5, #0X36
  394 0000024E         ;   BL  TRANSMIT
  395 0000024E         ;   MOV  R5, #0X49
  396 0000024E         ;   BL  TRANSMIT
  397 0000024E         ;   MOV  R5, #0X49
  398 0000024E         ;   BL  TRANSMIT   
  399 0000024E         ;   MOV  R5, #0X49
  400 0000024E         ;   BL  TRANSMIT
  401 0000024E         ;   MOV  R5, #0X36
  402 0000024E         ;   BL  TRANSMIT   
  403 0000024E         ;   POP  {LR}
  404 0000024E         ;   BX  LR
  405 0000024E         
  406 0000024E         ;N9   PUSH  {LR} 
  407 0000024E         ;   MOV  R5, #0X6
  408 0000024E         ;   BL  TRANSMIT
  409 0000024E         ;   MOV  R5, #0X49
  410 0000024E         ;   BL  TRANSMIT
  411 0000024E         ;   MOV  R5, #0X49
  412 0000024E         ;   BL  TRANSMIT   
  413 0000024E         ;   MOV  R5, #0X29
  414 0000024E         ;   BL  TRANSMIT
  415 0000024E         ;   MOV  R5, #0X1E
  416 0000024E         ;   BL  TRANSMIT   
  417 0000024E         ;   POP  {LR}
  418 0000024E         ;   BX  LR
  419 0000024E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  420 0000024E         ;;;;; NUMBERS 0-9 FINISH
  421 0000024E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
  422 0000024E         
  423 0000024E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  424 0000024E         ;;;;; CHAR A-Z BEGINNING
  425 0000024E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  426 0000024E         ;A   
  427 0000024E         ;   PUSH  {LR}
  428 0000024E         ;   MOV  R5, #0X7E
  429 0000024E         ;   BL  TRANSMIT
  430 0000024E         ;   MOV  R5, #0X11
  431 0000024E         ;   BL  TRANSMIT
  432 0000024E         ;   MOV  R5, #0X11
  433 0000024E         ;   BL  TRANSMIT   
  434 0000024E         ;   MOV  R5, #0X11
  435 0000024E         ;   BL  TRANSMIT



ARM Macro Assembler    Page 9 


  436 0000024E         ;   MOV  R5, #0X7E
  437 0000024E         ;   BL  TRANSMIT 
  438 0000024E         ;   POP  {LR}
  439 0000024E         ;   BX  LR
  440 0000024E         ;B_   PUSH  {LR} 
  441 0000024E         ;   
  442 0000024E         ;   POP  {LR}
  443 0000024E         ;   BX  LR   
  444 0000024E         ;C   PUSH  {LR} 
  445 0000024E         ;   
  446 0000024E         ;   POP  {LR}
  447 0000024E         ;   BX  LR
  448 0000024E         ;D   PUSH  {LR} 
  449 0000024E         ;   
  450 0000024E         ;   POP  {LR}
  451 0000024E         ;   BX  LR
  452 0000024E         ;E   PUSH  {LR} 
  453 0000024E         ;   
  454 0000024E         ;   POP  {LR}
  455 0000024E         ;   BX  LR   
  456 0000024E         
  457 0000024E         ;I   PUSH  {LR} 
  458 0000024E         ;   MOV  R5, #0X00
  459 0000024E         ;   BL  TRANSMIT
  460 0000024E         ;   MOV  R5, #0X41
  461 0000024E         ;   BL  TRANSMIT
  462 0000024E         ;   MOV  R5, #0X7F
  463 0000024E         ;   BL  TRANSMIT   
  464 0000024E         ;   MOV  R5, #0X41
  465 0000024E         ;   BL  TRANSMIT
  466 0000024E         ;   MOV  R5, #0X00
  467 0000024E         ;   BL  TRANSMIT
  468 0000024E         ;   POP  {LR}
  469 0000024E         ;   BX  LR
  470 0000024E         ; 
  471 0000024E         ;K   PUSH  {LR}
  472 0000024E         ;   MOV  R5, #0X7F
  473 0000024E         ;   BL  TRANSMIT
  474 0000024E         ;   MOV  R5, #0X8
  475 0000024E         ;   BL  TRANSMIT
  476 0000024E         ;   MOV  R5, #0X14
  477 0000024E         ;   BL  TRANSMIT
  478 0000024E         ;   MOV  R5, #0X22
  479 0000024E         ;   BL  TRANSMIT   
  480 0000024E         ;   MOV  R5, #0X41
  481 0000024E         ;   BL  TRANSMIT
  482 0000024E         ;   POP  {LR}
  483 0000024E         ;   BX  LR 
  484 0000024E         ;   
  485 0000024E         ;L   PUSH  {LR}
  486 0000024E         ;   MOV  R5, #0X7F
  487 0000024E         ;   BL  TRANSMIT
  488 0000024E         ;   MOV  R5, #0X40
  489 0000024E         ;   BL  TRANSMIT
  490 0000024E         ;   MOV  R5, #0X40
  491 0000024E         ;   BL  TRANSMIT
  492 0000024E         ;   MOV  R5, #0X40
  493 0000024E         ;   BL  TRANSMIT   
  494 0000024E         ;   MOV  R5, #0X40



ARM Macro Assembler    Page 10 


  495 0000024E         ;   BL  TRANSMIT   
  496 0000024E         ;   POP  {LR}
  497 0000024E         ;   BX  LR 
  498 0000024E         
  499 0000024E         
  500 0000024E         
  501 0000024E         ;M   PUSH  {LR}
  502 0000024E         ;   MOV  R5, #0X7F
  503 0000024E         ;   BL  TRANSMIT
  504 0000024E         ;   MOV  R5, #0X02
  505 0000024E         ;   BL  TRANSMIT
  506 0000024E         ;   MOV  R5, #0XC
  507 0000024E         ;   BL  TRANSMIT
  508 0000024E         ;   MOV  R5, #0X2
  509 0000024E         ;   BL  TRANSMIT   
  510 0000024E         ;   MOV  R5, #0X7F
  511 0000024E         ;   BL  TRANSMIT    
  512 0000024E         ;   POP  {LR}
  513 0000024E         ;   BX  LR
  514 0000024E         
  515 0000024E         ;N   PUSH  {LR}   
  516 0000024E         ;   MOV  R5, #0X7F
  517 0000024E         ;   BL  TRANSMIT
  518 0000024E         ;   MOV  R5, #0X04
  519 0000024E         ;   BL  TRANSMIT
  520 0000024E         ;   MOV  R5, #0X8
  521 0000024E         ;   BL  TRANSMIT
  522 0000024E         ;   MOV  R5, #0X10
  523 0000024E         ;   BL  TRANSMIT   
  524 0000024E         ;   MOV  R5, #0X7F
  525 0000024E         ;   BL  TRANSMIT   
  526 0000024E         ;   POP  {LR}
  527 0000024E         ;   BX  LR 
  528 0000024E         
  529 0000024E         ;S   PUSH  {LR}   
  530 0000024E         ;   MOV  R5, #0X46
  531 0000024E         ;   BL  TRANSMIT
  532 0000024E         ;   MOV  R5, #0X49
  533 0000024E         ;   BL  TRANSMIT
  534 0000024E         ;   MOV  R5, #0X49
  535 0000024E         ;   BL  TRANSMIT
  536 0000024E         ;   MOV  R5, #0X49
  537 0000024E         ;   BL  TRANSMIT   
  538 0000024E         ;   MOV  R5, #0X31
  539 0000024E         ;   BL  TRANSMIT   
  540 0000024E         ;   POP  {LR}
  541 0000024E         ;   BX  LR  
  542 0000024E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  543 0000024E         ;;;;; CHAR A-Z FINISH
  544 0000024E         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  545 0000024E 00 00           ALIGN
  546 00000250                 END
              400043FC 
              40038028 
              40038004 
              4003800C 
              40038088 
              400380A8 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int



ARM Macro Assembler    Page 11 


erwork --depend=.\objects\__main.d -o.\objects\__main.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\__main.lst __main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CLEAR 0000016E

Symbol: CLEAR
   Definitions
      At line 179 in file __main.s
   Uses
      At line 35 in file __main.s
Comment: CLEAR used once
CLEARBOX1 0000018E

Symbol: CLEARBOX1
   Definitions
      At line 194 in file __main.s
   Uses
      None
Comment: CLEARBOX1 unused
CLEARBOX2 000001CE

Symbol: CLEARBOX2
   Definitions
      At line 222 in file __main.s
   Uses
      None
Comment: CLEARBOX2 unused
CLEARBOX3 0000020E

Symbol: CLEARBOX3
   Definitions
      At line 250 in file __main.s
   Uses
      None
Comment: CLEARBOX3 unused
CURSOR 00000070

Symbol: CURSOR
   Definitions
      At line 74 in file __main.s
   Uses
      At line 71 in file __main.s
Comment: CURSOR used once
CURSOR_2 000000B0

Symbol: CURSOR_2
   Definitions
      At line 104 in file __main.s
   Uses
      At line 97 in file __main.s
      At line 100 in file __main.s

FIN 0000016C

Symbol: FIN
   Definitions
      At line 172 in file __main.s
   Uses
      At line 173 in file __main.s
Comment: FIN used once
LOOP 00000178




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: LOOP
   Definitions
      At line 182 in file __main.s
   Uses
      At line 186 in file __main.s
Comment: LOOP used once
LOOP_C 000001B8

Symbol: LOOP_C
   Definitions
      At line 211 in file __main.s
   Uses
      At line 215 in file __main.s
Comment: LOOP_C used once
LOOP_C_2 000001F8

Symbol: LOOP_C_2
   Definitions
      At line 239 in file __main.s
   Uses
      At line 243 in file __main.s
Comment: LOOP_C_2 used once
LOOP_C_3 00000238

Symbol: LOOP_C_3
   Definitions
      At line 267 in file __main.s
   Uses
      At line 271 in file __main.s
Comment: LOOP_C_3 used once
ROW1 000000AE

Symbol: ROW1
   Definitions
      At line 98 in file __main.s
   Uses
      At line 88 in file __main.s
Comment: ROW1 used once
ROW2 000000B0

Symbol: ROW2
   Definitions
      At line 101 in file __main.s
   Uses
      At line 92 in file __main.s
Comment: ROW2 used once
SEVEN 00000146

Symbol: SEVEN
   Definitions
      At line 158 in file __main.s
   Uses
      At line 127 in file __main.s
Comment: SEVEN used once
ZERO 00000120

Symbol: ZERO
   Definitions
      At line 145 in file __main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 125 in file __main.s
Comment: ZERO used once
__main 00000000

Symbol: __main
   Definitions
      At line 25 in file __main.s
   Uses
      At line 23 in file __main.s
Comment: __main used once
getsample 0000002A

Symbol: getsample
   Definitions
      At line 42 in file __main.s
   Uses
      At line 72 in file __main.s
      At line 143 in file __main.s
      At line 156 in file __main.s
      At line 169 in file __main.s

loop 00000034

Symbol: loop
   Definitions
      At line 47 in file __main.s
   Uses
      At line 50 in file __main.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 9 in file __main.s
   Uses
      None
Comment: main unused
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 5 in file __main.s
   Uses
      At line 52 in file __main.s
Comment: ADC0_ISC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 4 in file __main.s
   Uses
      At line 42 in file __main.s
Comment: ADC0_PSSI used once
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 1 in file __main.s
   Uses
      At line 47 in file __main.s
Comment: ADC0_RIS used once
ADC0_SSFIFO2 40038088

Symbol: ADC0_SSFIFO2
   Definitions
      At line 2 in file __main.s
   Uses
      At line 57 in file __main.s
Comment: ADC0_SSFIFO2 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 3 in file __main.s
   Uses
      At line 61 in file __main.s
Comment: ADC0_SSFIFO3 used once
ADC0_SSFSTAT2 4003808C

Symbol: ADC0_SSFSTAT2
   Definitions
      At line 6 in file __main.s
   Uses
      None
Comment: ADC0_SSFSTAT2 unused
PORTA_DATA 400043FC

Symbol: PORTA_DATA
   Definitions
      At line 7 in file __main.s
   Uses
      At line 29 in file __main.s
      At line 105 in file __main.s
      At line 115 in file __main.s
      At line 195 in file __main.s
      At line 205 in file __main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 223 in file __main.s
      At line 233 in file __main.s
      At line 251 in file __main.s
      At line 261 in file __main.s

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BATTLESHIP 00000000

Symbol: BATTLESHIP
   Definitions
      At line 17 in file __main.s
   Uses
      None
Comment: BATTLESHIP unused
BOUNDARY 00000000

Symbol: BOUNDARY
   Definitions
      At line 18 in file __main.s
   Uses
      At line 36 in file __main.s
Comment: BOUNDARY used once
CIVILIAN 00000000

Symbol: CIVILIAN
   Definitions
      At line 19 in file __main.s
   Uses
      None
Comment: CIVILIAN unused
DELAY 00000000

Symbol: DELAY
   Definitions
      At line 13 in file __main.s
   Uses
      None
Comment: DELAY unused
GPIOPortF_Handler 00000000

Symbol: GPIOPortF_Handler
   Definitions
      At line 21 in file __main.s
   Uses
      None
Comment: GPIOPortF_Handler unused
GPIO_INIT 00000000

Symbol: GPIO_INIT
   Definitions
      At line 22 in file __main.s
   Uses
      At line 28 in file __main.s
Comment: GPIO_INIT used once
Init 00000000

Symbol: Init
   Definitions
      At line 12 in file __main.s
   Uses
      At line 26 in file __main.s
Comment: Init used once
LCD_INIT 00000000

Symbol: LCD_INIT



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 11 in file __main.s
   Uses
      At line 27 in file __main.s
Comment: LCD_INIT used once
OutChar 00000000

Symbol: OutChar
   Definitions
      At line 14 in file __main.s
   Uses
      None
Comment: OutChar unused
TIMER_INIT 00000000

Symbol: TIMER_INIT
   Definitions
      At line 16 in file __main.s
   Uses
      None
Comment: TIMER_INIT unused
TRANSMIT 00000000

Symbol: TRANSMIT
   Definitions
      At line 15 in file __main.s
   Uses
      At line 111 in file __main.s
      At line 113 in file __main.s
      At line 123 in file __main.s
      At line 134 in file __main.s
      At line 137 in file __main.s
      At line 140 in file __main.s
      At line 142 in file __main.s
      At line 149 in file __main.s
      At line 151 in file __main.s
      At line 153 in file __main.s
      At line 155 in file __main.s
      At line 162 in file __main.s
      At line 164 in file __main.s
      At line 166 in file __main.s
      At line 168 in file __main.s
      At line 183 in file __main.s
      At line 201 in file __main.s
      At line 203 in file __main.s
      At line 212 in file __main.s
      At line 229 in file __main.s
      At line 231 in file __main.s
      At line 240 in file __main.s
      At line 257 in file __main.s
      At line 259 in file __main.s
      At line 268 in file __main.s

Timer0A_Handler 00000000

Symbol: Timer0A_Handler
   Definitions
      At line 20 in file __main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      None
Comment: Timer0A_Handler unused
12 symbols
374 symbols in table
