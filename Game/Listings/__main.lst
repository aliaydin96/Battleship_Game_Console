


ARM Macro Assembler    Page 1 


    1 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
    2 00000000 40038088 
                       ADC0_SSFIFO2
                               EQU              0x40038088  ; Channel 2 results
                                                            
    3 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                             
    4 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
    5 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C  ; ISC
    6 00000000 4003808C 
                       ADC0_SSFSTAT2
                               EQU              0X4003808C
    7 00000000 400043FC 
                       PORTA_DATA
                               EQU              0x400043FC
    8 00000000 20000400 
                       POSITION
                               EQU              0X20000400
    9 00000000 2000040F 
                       BATTLE_COUNTER
                               EQU              0X2000040F
   10 00000000 20000410 
                       CIV_COUNTER
                               EQU              0X20000410
   11 00000000 20000411 
                       SCREEN_COUNTER
                               EQU              0X20000411
   12 00000000 20000412 
                       MINE_POSITION
                               EQU              0X20000412
   13 00000000 4003000C 
                       TIMER0_CTL
                               EQU              0x4003000C
   14 00000000 20000424 
                       MINE_COUNTER
                               EQU              0X20000424
   15 00000000 20000428 
                       RESTART EQU              0X20000428
   16 00000000         
   17 00000000                 AREA             main, CODE, READONLY
   18 00000000                 THUMB
   19 00000000                 IMPORT           LCD_INIT
   20 00000000                 IMPORT           Init
   21 00000000                 IMPORT           DELAY
   22 00000000                 EXTERN           OutChar
   23 00000000                 EXTERN           TRANSMIT
   24 00000000                 EXTERN           TIMER_INIT
   25 00000000                 EXTERN           BATTLESHIP
   26 00000000                 EXTERN           BOUNDARY
   27 00000000                 EXTERN           CIVILIAN
   28 00000000                 EXTERN           Timer0A_Handler



ARM Macro Assembler    Page 2 


   29 00000000                 EXTERN           GPIOPortF_Handler
   30 00000000                 EXTERN           GPIO_INIT
   31 00000000                 EXTERN           FINAL
   32 00000000                 EXTERN           BEGINING
   33 00000000                 EXPORT           __main
   34 00000000         
   35 00000000         __main
   36 00000000         
   37 00000000         
   38 00000000 F7FF FFFE       BL               Init
   39 00000004 F7FF FFFE       BL               LCD_INIT
   40 00000008 F7FF FFFE       BL               GPIO_INIT
   41 0000000C 49AE            LDR              R1,=PORTA_DATA
   42 0000000E 6808            LDR              R0,[R1]
   43 00000010 F040 0040       ORR              R0,#0x40
   44 00000014 6008            STR              R0,[R1]
   45 00000016 F000 F8F6       BL               CLEAR
   46 0000001A F7FF FFFE       BL               BEGINING
   47 0000001E F64F 70FF 
              F2C0 00FF        MOV32            R0, #0XFFFFFF
   48 00000026 F7FF FFFE       BL               DELAY
   49 0000002A 49A7            LDR              R1,=PORTA_DATA
   50 0000002C 6808            LDR              R0,[R1]
   51 0000002E F020 0040       BIC              R0,#0x40
   52 00000032 6008            STR              R0,[R1]
   53 00000034         
   54 00000034 F04F 0580       MOV              R5, #0x80
   55 00000038 F7FF FFFE       BL               TRANSMIT
   56 0000003C F04F 0540       MOV              R5, #0X40
   57 00000040 F7FF FFFE       BL               TRANSMIT
   58 00000044 F04F 050C       MOV              R5, #0X0C
   59 00000048 F7FF FFFE       BL               TRANSMIT
   60 0000004C 499E            LDR              R1,=PORTA_DATA
   61 0000004E 6808            LDR              R0,[R1]
   62 00000050 F040 0040       ORR              R0,#0x40
   63 00000054 6008            STR              R0,[R1]
   64 00000056         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   65 00000056         ;;;;; REGISTERS
   66 00000056         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   67 00000056         ;;;;; R0  ==> GENERAL PURPOSES
   68 00000056         ;;;;; R1  ==> GENERAL PURPOSES
   69 00000056         ;;;;; R2  ==> CURSOR'S POSITION
   70 00000056         ;;;;; R3  ==> X POSITION
   71 00000056         ;;;;; R4  ==> CURSOR'S POSITION
   72 00000056         ;;;;; R5  ==> DISPLAY REGISTER
   73 00000056         ;;;;; R6  ==> Y POSITION
   74 00000056         ;;;;; R7  ==> TIMER'S COUNTER
   75 00000056         ;;;;; R8  ==> ADC RESULT 
   76 00000056         ;;;;; R9  ==> ADC RESULT
   77 00000056         ;;;;; R10 ==> FREE
   78 00000056         ;;;;; R11 ==> FREE
   79 00000056         ;;;;; R12 ==> FREE
   80 00000056         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   81 00000056 F000 F923       BL               CL_REG
   82 0000005A F64F 79FF 
              F6CF 79FF        MOV32            R9,  #0xFFFFFFFF
   83 00000062 F8C1 A000       STR              R10, [R1]
   84 00000066 4999            LDR              R1,=POSITION
   85 00000068 F8C1 9000       STR              R9, [R1]



ARM Macro Assembler    Page 3 


   86 0000006C 4998            LDR              R1,=MINE_POSITION
   87 0000006E F8C1 A000       STR              R10, [R1]
   88 00000072 4998            LDR              R1,=RESTART
   89 00000074 F8C1 A000       STR              R10, [R1]
   90 00000078 4997    getsample
                               LDR              R1,=ADC0_PSSI 
                                                            ; request a sample
   91 0000007A 6808            LDR              R0,[R1]     ;
   92 0000007C F040 000C       ORR              R0,R0,#0x0C ; get a sample
   93 00000080 6008            STR              R0,[R1]     ;
   94 00000082         
   95 00000082 4996    loop    LDR              R1,=ADC0_RIS ; check for interr
                                                            up flag
   96 00000084 6808            LDR              R0,[R1]     ;
   97 00000086 F010 000C       ANDS             R0,#0x0C    ;
   98 0000008A D0FA            BEQ              loop
   99 0000008C         
  100 0000008C 4994            LDR              R1,=ADC0_ISC ; clear the interr
                                                            upt flag
  101 0000008E 6808            LDR              R0,[R1]     ;
  102 00000090 F040 000C       ORR              R0,#0x0C    ;
  103 00000094 6008            STR              R0,[R1]     ; Interrupt flag is
                                                             cleared
  104 00000096         
  105 00000096 4993            LDR              R1, =SCREEN_COUNTER
  106 00000098 780C            LDRB             R4, [R1]
  107 0000009A 2C00            CMP              R4, #0
  108 0000009C BF08 F000 
              F886             BLEQ             DISPLAY_SHIP
  109 000000A2 2C01            CMP              R4, #1
  110 000000A4 BF08 F000 
              F882             BLEQ             DISPLAY_SHIP
  111 000000AA 2C02            CMP              R4, #2
  112 000000AC BF08 F000 
              F8CD             BLEQ             CLEARBOX
  113 000000B2 2C04            CMP              R4, #4
  114 000000B4 BF08 F000 
              F8B6             BLEQ             DELAY_5MS
  115 000000BA 498A            LDR              R1, =SCREEN_COUNTER
  116 000000BC 780C            LDRB             R4, [R1]
  117 000000BE 2C06            CMP              R4, #6
  118 000000C0 BF08 3401       ADDEQ            R4,#1
  119 000000C4 700C            STRB             R4,[R1]
  120 000000C6 BF04 2303       MOVEQ            R3, #0X03
  121 000000CA F7FF FFFE       BLEQ             TIMER_INIT
  122 000000CE BF08 2714       MOVEQ            R7, #20     ;this counter for t
                                                            imer
  123 000000D2 F8DF A210       LDR              R10, =SCREEN_COUNTER
  124 000000D6 F89A 9000       LDRB             R9,[R10]
  125 000000DA F1B9 0F0C       CMP              R9,#12
  126 000000DE BF04 2300       MOVEQ            R3, #0X0
  127 000000E2 F7FF FFFE       BLEQ             TIMER_INIT
  128 000000E6 BF08 F7FF 
              FFFE             BLEQ             FINAL
  129 000000EC 497D            LDR              R1, =SCREEN_COUNTER
  130 000000EE 780C            LDRB             R4, [R1]
  131 000000F0 2C0D            CMP              R4, #13
  132 000000F2 BF08 F000 
              F8D4             BLEQ             CL_REG



ARM Macro Assembler    Page 4 


  133 000000F8 497A            LDR              R1, =SCREEN_COUNTER
  134 000000FA 780C            LDRB             R4, [R1]
  135 000000FC 2C0B            CMP              R4, #11
  136 000000FE BF82 F64F 
              70FF F2C0 
              0000             MOV32HI          R0, #0XFFFF
  137 00000108 F7FF FFFE       BLHI             DELAY
  138 0000010C D8B4            BHI              getsample
  139 0000010E         
  140 0000010E         CURSOR
  141 0000010E 4976            LDR              R1,=ADC0_SSFIFO2 ;
  142 00000110 F8D1 8000       LDR              R8,[R1]     ; R8 is the data PE
                                                            3
  143 00000114 F04F 00AB       MOV              R0,#171     ; get the first dig
                                                            it
  144 00000118 FBB8 F8F0       UDIV             R8,R8,R0    ;   
  145 0000011C 4973            LDR              R1, =ADC0_SSFIFO3
  146 0000011E F8D1 9000       LDR              R9,[R1]
  147 00000122 F04F 004B       MOV              R0,#75      ; get the first dig
                                                            it
  148 00000126 FBB9 F3F0       UDIV             R3,R9,R0    ;
  149 0000012A F103 0385       ADD              R3, R3,#0x85
  150 0000012E F04F 0641       MOV              R6, #0x41
  151 00000132 F1B8 0801       SUBS             R8, #1
  152 00000136 BF0B 2201       MOVEQ            R2, #0x1
  153 0000013A 2202            MOVNE            R2, #0x2
  154 0000013C 2403            MOVEQ            R4, #0x3
  155 0000013E 2407            MOVNE            R4, #0x7
  156 00000140         
  157 00000140         LOP
  158 00000140 4961            LDR              R1,=PORTA_DATA
  159 00000142 6808            LDR              R0,[R1]
  160 00000144 F020 0040       BIC              R0,#0x40
  161 00000148 6008            STR              R0,[R1]
  162 0000014A         
  163 0000014A 461D            MOV              R5, R3
  164 0000014C F7FF FFFE       BL               TRANSMIT
  165 00000150 4635            MOV              R5, R6
  166 00000152 F7FF FFFE       BL               TRANSMIT
  167 00000156         
  168 00000156 495C            LDR              R1,=PORTA_DATA
  169 00000158 6808            LDR              R0,[R1]
  170 0000015A F040 0040       ORR              R0,#0x40
  171 0000015E 6008            STR              R0,[R1]
  172 00000160 2E41            CMP              R6, #0x41
  173 00000162 BF04 FA02 
              F208             LSLEQ            R2, R8
  174 00000168 FA04 F408       LSLEQ            R4, R8
  175 0000016C D007            BEQ              WORK
  176 0000016E 2E42            CMP              R6, #0X42
  177 00000170 BF04 BA52       REV16EQ          R2, R2
  178 00000174 BA64            REV16EQ          R4, R4
  179 00000176 2E43            CMP              R6, #0X43
  180 00000178 BF04 BA12       REVEQ            R2, R2
  181 0000017C BA24            REVEQ            R4, R4
  182 0000017E         WORK
  183 0000017E 2B85            CMP              R3, #0x85
  184 00000180 BF0C 25FF       MOVEQ            R5, #0XFF
  185 00000184 2500            MOVNE            R5, #0X0



ARM Macro Assembler    Page 5 


  186 00000186 F7FF FFFE       BL               TRANSMIT
  187 0000018A 4615            MOV              R5, R2      ;NE
  188 0000018C F7FF FFFE       BL               TRANSMIT
  189 00000190 4625            MOV              R5, R4
  190 00000192 F7FF FFFE       BL               TRANSMIT
  191 00000196 4615            MOV              R5, R2
  192 00000198 F7FF FFFE       BL               TRANSMIT
  193 0000019C F04F 0500       MOV              R5, #0X0
  194 000001A0 F7FF FFFE       BL               TRANSMIT
  195 000001A4 F106 0601       ADD              R6, #1
  196 000001A8 2E44            CMP              R6, #0X44
  197 000001AA D1C9            BNE              LOP
  198 000001AC E764            B                getsample   ;      
  199 000001AE         
  200 000001AE         DISPLAY_SHIP
  201 000001AE B510            PUSH             {R4, LR}
  202 000001B0 494F            LDR              R1, =CIV_COUNTER
  203 000001B2 780C            LDRB             R4, [R1]
  204 000001B4 2C00            CMP              R4, #0
  205 000001B6 D90C            BLS              BATTLE
  206 000001B8 4944            LDR              R1, =POSITION
  207 000001BA F7FF FFFE       BL               CIVILIAN
  208 000001BE 2C01            CMP              R4, #1
  209 000001C0 D907            BLS              BATTLE
  210 000001C2 494C            LDR              R1, =(POSITION + 2)
  211 000001C4 F7FF FFFE       BL               CIVILIAN
  212 000001C8 2C02            CMP              R4, #2
  213 000001CA D902            BLS              BATTLE
  214 000001CC 494A            LDR              R1, =(POSITION + 4)
  215 000001CE F7FF FFFE       BL               CIVILIAN
  216 000001D2         
  217 000001D2         BATTLE
  218 000001D2 484A            LDR              R0, =BATTLE_COUNTER
  219 000001D4 7802            LDRB             R2, [R0]
  220 000001D6 2A00            CMP              R2, #0
  221 000001D8 D912            BLS              FINISH
  222 000001DA 4949            LDR              R1, =(POSITION + 6)
  223 000001DC F7FF FFFE       BL               BATTLESHIP
  224 000001E0 2A01            CMP              R2, #1
  225 000001E2 D90D            BLS              FINISH
  226 000001E4 4947            LDR              R1, =(POSITION + 8)
  227 000001E6 F7FF FFFE       BL               BATTLESHIP
  228 000001EA 2A02            CMP              R2, #2
  229 000001EC D908            BLS              FINISH
  230 000001EE 4946            LDR              R1, =(POSITION + 10)
  231 000001F0 F7FF FFFE       BL               BATTLESHIP
  232 000001F4 2A03            CMP              R2, #3
  233 000001F6 D903            BLS              FINISH
  234 000001F8 4944            LDR              R1, =(POSITION + 12)
  235 000001FA F7FF FFFE       BL               BATTLESHIP
  236 000001FE E7FF            B                FINISH
  237 00000200         FINISH
  238 00000200 E8BD 4010       POP              {R4, LR}
  239 00000204 4770            BX               LR
  240 00000206         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  241 00000206         ;;;;;; CLEAR WHOLE SCREEN
  242 00000206         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  243 00000206 B503    CLEAR   PUSH             {R0,R1,LR}
  244 00000208 F04F 0000       MOV              R0,#0



ARM Macro Assembler    Page 6 


  245 0000020C F240 11F7       MOV              R1, #503
  246 00000210 F04F 0500 
                       LOOP    MOV              R5, #0X0
  247 00000214 F7FF FFFE       BL               TRANSMIT
  248 00000218 F100 0001       ADD              R0, #1
  249 0000021C 4288            CMP              R0,R1
  250 0000021E D1F7            BNE              LOOP
  251 00000220 E8BD 4003       POP              {R0,R1,LR}
  252 00000224 4770            BX               LR
  253 00000226         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  254 00000226         
  255 00000226         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  256 00000226         ;;;;;; 5 msec delay
  257 00000226         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  258 00000226         DELAY_5MS
  259 00000226 B500            PUSH             {LR}
  260 00000228 F7FF FFC1       BL               DISPLAY_SHIP
  261 0000022C F640 1000 
              F2C0 003D        MOV32            R0, #4000000
  262 00000234 F7FF FFFE       BL               DELAY
  263 00000238 F000 F808       BL               CLEARBOX
  264 0000023C 4929            LDR              R1, =SCREEN_COUNTER
  265 0000023E 780C            LDRB             R4, [R1]
  266 00000240 F104 0401       ADD              R4, #1
  267 00000244 700C            STRB             R4, [R1]
  268 00000246 F85D EB04       POP              {LR}
  269 0000024A 4770            BX               LR
  270 0000024C         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  271 0000024C         ;;;;;; CLEAR Y = 1-2-3-4 ROWS
  272 0000024C         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  273 0000024C B507    CLEARBOX
                               PUSH{R0,         R1, R2, LR}
  274 0000024E F04F 0641       MOV              R6, #0X41
  275 00000252         LOOP_CL
  276 00000252 491D            LDR              R1,=PORTA_DATA
  277 00000254 6808            LDR              R0,[R1]
  278 00000256 F020 0040       BIC              R0,#0x40
  279 0000025A 6008            STR              R0,[R1]
  280 0000025C         
  281 0000025C F04F 0586       MOV              R5, #0X86
  282 00000260 F7FF FFFE       BL               TRANSMIT
  283 00000264 4635            MOV              R5, R6
  284 00000266 F7FF FFFE       BL               TRANSMIT
  285 0000026A         
  286 0000026A 4917            LDR              R1,=PORTA_DATA
  287 0000026C 6808            LDR              R0,[R1]
  288 0000026E F040 0040       ORR              R0,#0x40
  289 00000272 6008            STR              R0,[R1]
  290 00000274         
  291 00000274 F04F 0286       MOV              R2, #0X86
  292 00000278 F04F 0500 
                       LOOP_C  MOV              R5, #0X0
  293 0000027C F7FF FFFE       BL               TRANSMIT
  294 00000280 F102 0201       ADD              R2, #1
  295 00000284 2AC5            CMP              R2, #0XC5
  296 00000286 D1F7            BNE              LOOP_C
  297 00000288 F106 0601       ADD              R6, #1
  298 0000028C 2E45            CMP              R6, #0X45
  299 0000028E D1E0            BNE              LOOP_CL



ARM Macro Assembler    Page 7 


  300 00000290         
  301 00000290 4914            LDR              R1, =SCREEN_COUNTER
  302 00000292 780C            LDRB             R4, [R1]
  303 00000294 F104 0401       ADD              R4, #1
  304 00000298 700C            STRB             R4, [R1]
  305 0000029A E8BD 4007       POP{R0,          R1, R2, LR}
  306 0000029E 4770            BX               LR
  307 000002A0         
  308 000002A0         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  309 000002A0         
  310 000002A0         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  311 000002A0         CL_REG
  312 000002A0 B500            PUSH             {LR}
  313 000002A2         ;   LDR R1,=PORTA_DATA  
  314 000002A2         ;   LDR R0,[R1]
  315 000002A2         ;   ORR R0,#0x40    
  316 000002A2         ;   STR R0,[R1] 
  317 000002A2 F7FF FFB0       BL               CLEAR
  318 000002A6 F7FF FFFE       BL               BOUNDARY
  319 000002AA F04F 0A00       MOV              R10, #0
  320 000002AE 4813            LDR              R0, =BATTLE_COUNTER
  321 000002B0 F8C0 A000       STR              R10, [R0]
  322 000002B4 490E            LDR              R1, =CIV_COUNTER
  323 000002B6 F8C1 A000       STR              R10, [R1]
  324 000002BA 490A            LDR              R1, =SCREEN_COUNTER
  325 000002BC 4914            LDR              R1,=MINE_COUNTER
  326 000002BE F8C1 A000       STR              R10, [R1]
  327 000002C2 F85D EB04       POP              {LR}
  328 000002C6 4770            BX               LR
  329 000002C8         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  330 000002C8         ;;;;; NUMBERS 0-9 BEGINNING
  331 000002C8         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  332 000002C8         ;N0   PUSH  {LR} 
  333 000002C8         ;   MOV  R5, #0X3E
  334 000002C8         ;   BL  TRANSMIT
  335 000002C8         ;   MOV  R5, #0X51
  336 000002C8         ;   BL  TRANSMIT
  337 000002C8         ;   MOV  R5, #0X49
  338 000002C8         ;   BL  TRANSMIT   
  339 000002C8         ;   MOV  R5, #0X45
  340 000002C8         ;   BL  TRANSMIT
  341 000002C8         ;   MOV  R5, #0X3E
  342 000002C8         ;   BL  TRANSMIT   
  343 000002C8         ;   POP  {LR}
  344 000002C8         ;   BX  LR
  345 000002C8         
  346 000002C8         ;N1   PUSH  {LR} 
  347 000002C8         ;   MOV  R5, #0X0
  348 000002C8         ;   BL  TRANSMIT
  349 000002C8         ;   MOV  R5, #0X42
  350 000002C8         ;   BL  TRANSMIT
  351 000002C8         ;   MOV  R5, #0X7F
  352 000002C8         ;   BL  TRANSMIT   
  353 000002C8         ;   MOV  R5, #0X40
  354 000002C8         ;   BL  TRANSMIT
  355 000002C8         ;   MOV  R5, #0X0
  356 000002C8         ;   BL  TRANSMIT   
  357 000002C8         ;   POP  {LR}
  358 000002C8         ;   BX  LR



ARM Macro Assembler    Page 8 


  359 000002C8         
  360 000002C8         ;N2   PUSH  {LR} 
  361 000002C8         ;   MOV  R5, #0X42
  362 000002C8         ;   BL  TRANSMIT
  363 000002C8         ;   MOV  R5, #0X61
  364 000002C8         ;   BL  TRANSMIT
  365 000002C8         ;   MOV  R5, #0X51
  366 000002C8         ;   BL  TRANSMIT   
  367 000002C8         ;   MOV  R5, #0X49
  368 000002C8         ;   BL  TRANSMIT
  369 000002C8         ;   MOV  R5, #0X46
  370 000002C8         ;   BL  TRANSMIT   
  371 000002C8         ;   POP  {LR}
  372 000002C8         ;   BX  LR
  373 000002C8         ; 
  374 000002C8         ;N3   PUSH  {LR} 
  375 000002C8         ;   MOV  R5, #0X21
  376 000002C8         ;   BL  TRANSMIT
  377 000002C8         ;   MOV  R5, #0X41
  378 000002C8         ;   BL  TRANSMIT
  379 000002C8         ;   MOV  R5, #0X45
  380 000002C8         ;   BL  TRANSMIT   
  381 000002C8         ;   MOV  R5, #0X4B
  382 000002C8         ;   BL  TRANSMIT
  383 000002C8         ;   MOV  R5, #0X31
  384 000002C8         ;   BL  TRANSMIT   
  385 000002C8         ;   POP  {LR}
  386 000002C8         ;   BX  LR
  387 000002C8         
  388 000002C8         ;N4   PUSH  {LR} 
  389 000002C8         ;   MOV  R5, #0X18
  390 000002C8         ;   BL  TRANSMIT
  391 000002C8         ;   MOV  R5, #0X14
  392 000002C8         ;   BL  TRANSMIT
  393 000002C8         ;   MOV  R5, #0X12
  394 000002C8         ;   BL  TRANSMIT   
  395 000002C8         ;   MOV  R5, #0X7F
  396 000002C8         ;   BL  TRANSMIT
  397 000002C8         ;   MOV  R5, #0X10
  398 000002C8         ;   BL  TRANSMIT   
  399 000002C8         ;   POP  {LR}
  400 000002C8         ;   BX  LR
  401 000002C8         
  402 000002C8         ;N5   PUSH  {LR} 
  403 000002C8         ;   MOV  R5, #0X27
  404 000002C8         ;   BL  TRANSMIT
  405 000002C8         ;   MOV  R5, #0X45
  406 000002C8         ;   BL  TRANSMIT
  407 000002C8         ;   MOV  R5, #0X45
  408 000002C8         ;   BL  TRANSMIT   
  409 000002C8         ;   MOV  R5, #0X45
  410 000002C8         ;   BL  TRANSMIT
  411 000002C8         ;   MOV  R5, #0X39
  412 000002C8         ;   BL  TRANSMIT   
  413 000002C8         ;   POP  {LR}
  414 000002C8         ;   BX  LR
  415 000002C8         
  416 000002C8         ;N6   PUSH  {LR} 
  417 000002C8         ;   MOV  R5, #0X3C



ARM Macro Assembler    Page 9 


  418 000002C8         ;   BL  TRANSMIT
  419 000002C8         ;   MOV  R5, #0X4A
  420 000002C8         ;   BL  TRANSMIT
  421 000002C8         ;   MOV  R5, #0X49
  422 000002C8         ;   BL  TRANSMIT   
  423 000002C8         ;   MOV  R5, #0X49
  424 000002C8         ;   BL  TRANSMIT
  425 000002C8         ;   MOV  R5, #0X30
  426 000002C8         ;   BL  TRANSMIT   
  427 000002C8         ;   POP  {LR}
  428 000002C8         ;   BX  LR
  429 000002C8         
  430 000002C8         ;N7   PUSH  {LR} 
  431 000002C8         ;   MOV  R5, #0X1
  432 000002C8         ;   BL  TRANSMIT
  433 000002C8         ;   MOV  R5, #0X71
  434 000002C8         ;   BL  TRANSMIT
  435 000002C8         ;   MOV  R5, #0X9
  436 000002C8         ;   BL  TRANSMIT   
  437 000002C8         ;   MOV  R5, #0X5
  438 000002C8         ;   BL  TRANSMIT
  439 000002C8         ;   MOV  R5, #0X3
  440 000002C8         ;   BL  TRANSMIT   
  441 000002C8         ;   POP  {LR}
  442 000002C8         ;   BX  LR
  443 000002C8         
  444 000002C8         ;N8   PUSH  {LR} 
  445 000002C8         ;   MOV  R5, #0X36
  446 000002C8         ;   BL  TRANSMIT
  447 000002C8         ;   MOV  R5, #0X49
  448 000002C8         ;   BL  TRANSMIT
  449 000002C8         ;   MOV  R5, #0X49
  450 000002C8         ;   BL  TRANSMIT   
  451 000002C8         ;   MOV  R5, #0X49
  452 000002C8         ;   BL  TRANSMIT
  453 000002C8         ;   MOV  R5, #0X36
  454 000002C8         ;   BL  TRANSMIT   
  455 000002C8         ;   POP  {LR}
  456 000002C8         ;   BX  LR
  457 000002C8         
  458 000002C8         ;N9   PUSH  {LR} 
  459 000002C8         ;   MOV  R5, #0X6
  460 000002C8         ;   BL  TRANSMIT
  461 000002C8         ;   MOV  R5, #0X49
  462 000002C8         ;   BL  TRANSMIT
  463 000002C8         ;   MOV  R5, #0X49
  464 000002C8         ;   BL  TRANSMIT   
  465 000002C8         ;   MOV  R5, #0X29
  466 000002C8         ;   BL  TRANSMIT
  467 000002C8         ;   MOV  R5, #0X1E
  468 000002C8         ;   BL  TRANSMIT   
  469 000002C8         ;   POP  {LR}
  470 000002C8         ;   BX  LR
  471 000002C8         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  472 000002C8         ;;;;; NUMBERS 0-9 FINISH
  473 000002C8         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
  474 000002C8         
  475 000002C8         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  476 000002C8         ;;;;; CHAR A-Z BEGINNING



ARM Macro Assembler    Page 10 


  477 000002C8         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  478 000002C8         ;A   
  479 000002C8         ;   PUSH  {LR}
  480 000002C8         ;   MOV  R5, #0X7E
  481 000002C8         ;   BL  TRANSMIT
  482 000002C8         ;   MOV  R5, #0X11
  483 000002C8         ;   BL  TRANSMIT
  484 000002C8         ;   MOV  R5, #0X11
  485 000002C8         ;   BL  TRANSMIT   
  486 000002C8         ;   MOV  R5, #0X11
  487 000002C8         ;   BL  TRANSMIT
  488 000002C8         ;   MOV  R5, #0X7E
  489 000002C8         ;   BL  TRANSMIT 
  490 000002C8         ;   POP  {LR}
  491 000002C8         ;   BX  LR
  492 000002C8         ;B_   PUSH  {LR} 
  493 000002C8         ;   
  494 000002C8         ;   POP  {LR}
  495 000002C8         ;   BX  LR   
  496 000002C8         ;C   PUSH  {LR} 
  497 000002C8         ;   
  498 000002C8         ;   POP  {LR}
  499 000002C8         ;   BX  LR
  500 000002C8         ;D   PUSH  {LR} 
  501 000002C8         ;   
  502 000002C8         ;   POP  {LR}
  503 000002C8         ;   BX  LR
  504 000002C8         ;E   PUSH  {LR} 
  505 000002C8         ;   
  506 000002C8         ;   POP  {LR}
  507 000002C8         ;   BX  LR   
  508 000002C8         
  509 000002C8         ;I   PUSH  {LR} 
  510 000002C8         ;   MOV  R5, #0X00
  511 000002C8         ;   BL  TRANSMIT
  512 000002C8         ;   MOV  R5, #0X41
  513 000002C8         ;   BL  TRANSMIT
  514 000002C8         ;   MOV  R5, #0X7F
  515 000002C8         ;   BL  TRANSMIT   
  516 000002C8         ;   MOV  R5, #0X41
  517 000002C8         ;   BL  TRANSMIT
  518 000002C8         ;   MOV  R5, #0X00
  519 000002C8         ;   BL  TRANSMIT
  520 000002C8         ;   POP  {LR}
  521 000002C8         ;   BX  LR
  522 000002C8         ; 
  523 000002C8         ;K   PUSH  {LR}
  524 000002C8         ;   MOV  R5, #0X7F
  525 000002C8         ;   BL  TRANSMIT
  526 000002C8         ;   MOV  R5, #0X8
  527 000002C8         ;   BL  TRANSMIT
  528 000002C8         ;   MOV  R5, #0X14
  529 000002C8         ;   BL  TRANSMIT
  530 000002C8         ;   MOV  R5, #0X22
  531 000002C8         ;   BL  TRANSMIT   
  532 000002C8         ;   MOV  R5, #0X41
  533 000002C8         ;   BL  TRANSMIT
  534 000002C8         ;   POP  {LR}
  535 000002C8         ;   BX  LR 



ARM Macro Assembler    Page 11 


  536 000002C8         ;   
  537 000002C8         ;L   PUSH  {LR}
  538 000002C8         ;   MOV  R5, #0X7F
  539 000002C8         ;   BL  TRANSMIT
  540 000002C8         ;   MOV  R5, #0X40
  541 000002C8         ;   BL  TRANSMIT
  542 000002C8         ;   MOV  R5, #0X40
  543 000002C8         ;   BL  TRANSMIT
  544 000002C8         ;   MOV  R5, #0X40
  545 000002C8         ;   BL  TRANSMIT   
  546 000002C8         ;   MOV  R5, #0X40
  547 000002C8         ;   BL  TRANSMIT   
  548 000002C8         ;   POP  {LR}
  549 000002C8         ;   BX  LR 
  550 000002C8         
  551 000002C8         
  552 000002C8         
  553 000002C8         ;M   PUSH  {LR}
  554 000002C8         ;   MOV  R5, #0X7F
  555 000002C8         ;   BL  TRANSMIT
  556 000002C8         ;   MOV  R5, #0X02
  557 000002C8         ;   BL  TRANSMIT
  558 000002C8         ;   MOV  R5, #0XC
  559 000002C8         ;   BL  TRANSMIT
  560 000002C8         ;   MOV  R5, #0X2
  561 000002C8         ;   BL  TRANSMIT   
  562 000002C8         ;   MOV  R5, #0X7F
  563 000002C8         ;   BL  TRANSMIT    
  564 000002C8         ;   POP  {LR}
  565 000002C8         ;   BX  LR
  566 000002C8         
  567 000002C8         ;N   PUSH  {LR}   
  568 000002C8         ;   MOV  R5, #0X7F
  569 000002C8         ;   BL  TRANSMIT
  570 000002C8         ;   MOV  R5, #0X04
  571 000002C8         ;   BL  TRANSMIT
  572 000002C8         ;   MOV  R5, #0X8
  573 000002C8         ;   BL  TRANSMIT
  574 000002C8         ;   MOV  R5, #0X10
  575 000002C8         ;   BL  TRANSMIT   
  576 000002C8         ;   MOV  R5, #0X7F
  577 000002C8         ;   BL  TRANSMIT   
  578 000002C8         ;   POP  {LR}
  579 000002C8         ;   BX  LR 
  580 000002C8         
  581 000002C8         ;S   PUSH  {LR}   
  582 000002C8         ;   MOV  R5, #0X46
  583 000002C8         ;   BL  TRANSMIT
  584 000002C8         ;   MOV  R5, #0X49
  585 000002C8         ;   BL  TRANSMIT
  586 000002C8         ;   MOV  R5, #0X49
  587 000002C8         ;   BL  TRANSMIT
  588 000002C8         ;   MOV  R5, #0X49
  589 000002C8         ;   BL  TRANSMIT   
  590 000002C8         ;   MOV  R5, #0X31
  591 000002C8         ;   BL  TRANSMIT   
  592 000002C8         ;   POP  {LR}
  593 000002C8         ;   BX  LR  
  594 000002C8         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



ARM Macro Assembler    Page 12 


  595 000002C8         ;;;;; CHAR A-Z FINISH
  596 000002C8         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  597 000002C8                 ALIGN
  598 000002C8                 END
              400043FC 
              20000400 
              20000412 
              20000428 
              40038028 
              40038004 
              4003800C 
              20000411 
              40038088 
              400380A8 
              20000410 
              20000402 
              20000404 
              2000040F 
              20000406 
              20000408 
              2000040A 
              2000040C 
              20000424 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\__main.d -o.\objects\__main.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\__main.lst __main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BATTLE 000001D2

Symbol: BATTLE
   Definitions
      At line 217 in file __main.s
   Uses
      At line 205 in file __main.s
      At line 209 in file __main.s
      At line 213 in file __main.s

CLEAR 00000206

Symbol: CLEAR
   Definitions
      At line 243 in file __main.s
   Uses
      At line 45 in file __main.s
      At line 317 in file __main.s

CLEARBOX 0000024C

Symbol: CLEARBOX
   Definitions
      At line 273 in file __main.s
   Uses
      At line 112 in file __main.s
      At line 263 in file __main.s

CL_REG 000002A0

Symbol: CL_REG
   Definitions
      At line 311 in file __main.s
   Uses
      At line 81 in file __main.s
      At line 132 in file __main.s

CURSOR 0000010E

Symbol: CURSOR
   Definitions
      At line 140 in file __main.s
   Uses
      None
Comment: CURSOR unused
DELAY_5MS 00000226

Symbol: DELAY_5MS
   Definitions
      At line 258 in file __main.s
   Uses
      At line 114 in file __main.s
Comment: DELAY_5MS used once
DISPLAY_SHIP 000001AE

Symbol: DISPLAY_SHIP
   Definitions
      At line 200 in file __main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 108 in file __main.s
      At line 110 in file __main.s
      At line 260 in file __main.s

FINISH 00000200

Symbol: FINISH
   Definitions
      At line 237 in file __main.s
   Uses
      At line 221 in file __main.s
      At line 225 in file __main.s
      At line 229 in file __main.s
      At line 233 in file __main.s
      At line 236 in file __main.s

LOOP 00000210

Symbol: LOOP
   Definitions
      At line 246 in file __main.s
   Uses
      At line 250 in file __main.s
Comment: LOOP used once
LOOP_C 00000278

Symbol: LOOP_C
   Definitions
      At line 292 in file __main.s
   Uses
      At line 296 in file __main.s
Comment: LOOP_C used once
LOOP_CL 00000252

Symbol: LOOP_CL
   Definitions
      At line 275 in file __main.s
   Uses
      At line 299 in file __main.s
Comment: LOOP_CL used once
LOP 00000140

Symbol: LOP
   Definitions
      At line 157 in file __main.s
   Uses
      At line 197 in file __main.s
Comment: LOP used once
WORK 0000017E

Symbol: WORK
   Definitions
      At line 182 in file __main.s
   Uses
      At line 175 in file __main.s
Comment: WORK used once
__main 00000000

Symbol: __main



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 35 in file __main.s
   Uses
      At line 33 in file __main.s
Comment: __main used once
getsample 00000078

Symbol: getsample
   Definitions
      At line 90 in file __main.s
   Uses
      At line 138 in file __main.s
      At line 198 in file __main.s

loop 00000082

Symbol: loop
   Definitions
      At line 95 in file __main.s
   Uses
      At line 98 in file __main.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 17 in file __main.s
   Uses
      None
Comment: main unused
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 5 in file __main.s
   Uses
      At line 100 in file __main.s
Comment: ADC0_ISC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 4 in file __main.s
   Uses
      At line 90 in file __main.s
Comment: ADC0_PSSI used once
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 1 in file __main.s
   Uses
      At line 95 in file __main.s
Comment: ADC0_RIS used once
ADC0_SSFIFO2 40038088

Symbol: ADC0_SSFIFO2
   Definitions
      At line 2 in file __main.s
   Uses
      At line 141 in file __main.s
Comment: ADC0_SSFIFO2 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 3 in file __main.s
   Uses
      At line 145 in file __main.s
Comment: ADC0_SSFIFO3 used once
ADC0_SSFSTAT2 4003808C

Symbol: ADC0_SSFSTAT2
   Definitions
      At line 6 in file __main.s
   Uses
      None
Comment: ADC0_SSFSTAT2 unused
BATTLE_COUNTER 2000040F

Symbol: BATTLE_COUNTER
   Definitions
      At line 9 in file __main.s
   Uses
      At line 218 in file __main.s
      At line 320 in file __main.s

CIV_COUNTER 20000410




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: CIV_COUNTER
   Definitions
      At line 10 in file __main.s
   Uses
      At line 202 in file __main.s
      At line 322 in file __main.s

MINE_COUNTER 20000424

Symbol: MINE_COUNTER
   Definitions
      At line 14 in file __main.s
   Uses
      At line 325 in file __main.s
Comment: MINE_COUNTER used once
MINE_POSITION 20000412

Symbol: MINE_POSITION
   Definitions
      At line 12 in file __main.s
   Uses
      At line 86 in file __main.s
Comment: MINE_POSITION used once
PORTA_DATA 400043FC

Symbol: PORTA_DATA
   Definitions
      At line 7 in file __main.s
   Uses
      At line 41 in file __main.s
      At line 49 in file __main.s
      At line 60 in file __main.s
      At line 158 in file __main.s
      At line 168 in file __main.s
      At line 276 in file __main.s
      At line 286 in file __main.s

POSITION 20000400

Symbol: POSITION
   Definitions
      At line 8 in file __main.s
   Uses
      At line 84 in file __main.s
      At line 206 in file __main.s
      At line 210 in file __main.s
      At line 214 in file __main.s
      At line 222 in file __main.s
      At line 226 in file __main.s
      At line 230 in file __main.s
      At line 234 in file __main.s

RESTART 20000428

Symbol: RESTART
   Definitions
      At line 15 in file __main.s
   Uses
      At line 88 in file __main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Comment: RESTART used once
SCREEN_COUNTER 20000411

Symbol: SCREEN_COUNTER
   Definitions
      At line 11 in file __main.s
   Uses
      At line 105 in file __main.s
      At line 115 in file __main.s
      At line 123 in file __main.s
      At line 129 in file __main.s
      At line 133 in file __main.s
      At line 264 in file __main.s
      At line 301 in file __main.s
      At line 324 in file __main.s

TIMER0_CTL 4003000C

Symbol: TIMER0_CTL
   Definitions
      At line 13 in file __main.s
   Uses
      None
Comment: TIMER0_CTL unused
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BATTLESHIP 00000000

Symbol: BATTLESHIP
   Definitions
      At line 25 in file __main.s
   Uses
      At line 223 in file __main.s
      At line 227 in file __main.s
      At line 231 in file __main.s
      At line 235 in file __main.s

BEGINING 00000000

Symbol: BEGINING
   Definitions
      At line 32 in file __main.s
   Uses
      At line 46 in file __main.s
Comment: BEGINING used once
BOUNDARY 00000000

Symbol: BOUNDARY
   Definitions
      At line 26 in file __main.s
   Uses
      At line 318 in file __main.s
Comment: BOUNDARY used once
CIVILIAN 00000000

Symbol: CIVILIAN
   Definitions
      At line 27 in file __main.s
   Uses
      At line 207 in file __main.s
      At line 211 in file __main.s
      At line 215 in file __main.s

DELAY 00000000

Symbol: DELAY
   Definitions
      At line 21 in file __main.s
   Uses
      At line 48 in file __main.s
      At line 137 in file __main.s
      At line 262 in file __main.s

FINAL 00000000

Symbol: FINAL
   Definitions
      At line 31 in file __main.s
   Uses
      At line 128 in file __main.s
Comment: FINAL used once
GPIOPortF_Handler 00000000

Symbol: GPIOPortF_Handler
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 29 in file __main.s
   Uses
      None
Comment: GPIOPortF_Handler unused
GPIO_INIT 00000000

Symbol: GPIO_INIT
   Definitions
      At line 30 in file __main.s
   Uses
      At line 40 in file __main.s
Comment: GPIO_INIT used once
Init 00000000

Symbol: Init
   Definitions
      At line 20 in file __main.s
   Uses
      At line 38 in file __main.s
Comment: Init used once
LCD_INIT 00000000

Symbol: LCD_INIT
   Definitions
      At line 19 in file __main.s
   Uses
      At line 39 in file __main.s
Comment: LCD_INIT used once
OutChar 00000000

Symbol: OutChar
   Definitions
      At line 22 in file __main.s
   Uses
      None
Comment: OutChar unused
TIMER_INIT 00000000

Symbol: TIMER_INIT
   Definitions
      At line 24 in file __main.s
   Uses
      At line 121 in file __main.s
      At line 127 in file __main.s

TRANSMIT 00000000

Symbol: TRANSMIT
   Definitions
      At line 23 in file __main.s
   Uses
      At line 55 in file __main.s
      At line 57 in file __main.s
      At line 59 in file __main.s
      At line 164 in file __main.s
      At line 166 in file __main.s
      At line 186 in file __main.s
      At line 188 in file __main.s
      At line 190 in file __main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 192 in file __main.s
      At line 194 in file __main.s
      At line 247 in file __main.s
      At line 282 in file __main.s
      At line 284 in file __main.s
      At line 293 in file __main.s

Timer0A_Handler 00000000

Symbol: Timer0A_Handler
   Definitions
      At line 28 in file __main.s
   Uses
      None
Comment: Timer0A_Handler unused
14 symbols
382 symbols in table
