


ARM Macro Assembler    Page 1 


    1 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
    2 00000000 40038088 
                       ADC0_SSFIFO2
                               EQU              0x40038088  ; Channel 2 results
                                                            
    3 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                             
    4 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
    5 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C  ; ISC
    6 00000000 4003808C 
                       ADC0_SSFSTAT2
                               EQU              0X4003808C
    7 00000000 400043FC 
                       PORTA_DATA
                               EQU              0x400043FC
    8 00000000 20000400 
                       POSITION
                               EQU              0X20000400
    9 00000000 2000040F 
                       BATTLE_COUNTER
                               EQU              0X2000040F
   10 00000000 20000410 
                       CIV_COUNTER
                               EQU              0X20000410
   11 00000000 20000411 
                       SCREEN_COUNTER
                               EQU              0X20000411
   12 00000000 20000412 
                       MINE_POSITION
                               EQU              0X20000412
   13 00000000 4003000C 
                       TIMER0_CTL
                               EQU              0x4003000C
   14 00000000 20000424 
                       MINE_COUNTER
                               EQU              0X20000424
   15 00000000 20000428 
                       RESTART EQU              0X20000428
   16 00000000         
   17 00000000                 AREA             main, CODE, READONLY
   18 00000000                 THUMB
   19 00000000                 IMPORT           LCD_INIT
   20 00000000                 IMPORT           Init
   21 00000000                 IMPORT           DELAY
   22 00000000                 EXTERN           OutChar
   23 00000000                 EXTERN           TRANSMIT
   24 00000000                 EXTERN           TIMER_INIT
   25 00000000                 EXTERN           BATTLESHIP
   26 00000000                 EXTERN           BOUNDARY
   27 00000000                 EXTERN           CIVILIAN
   28 00000000                 EXTERN           Timer0A_Handler



ARM Macro Assembler    Page 2 


   29 00000000                 EXTERN           GPIOPortF_Handler
   30 00000000                 EXTERN           GPIO_INIT
   31 00000000                 EXTERN           FINAL
   32 00000000                 EXTERN           BEGINING
   33 00000000                 EXPORT           __main
   34 00000000         
   35 00000000         __main
   36 00000000         
   37 00000000         
   38 00000000 F7FF FFFE       BL               Init
   39 00000004 F7FF FFFE       BL               LCD_INIT
   40 00000008 F7FF FFFE       BL               GPIO_INIT
   41 0000000C 49AD            LDR              R1,=PORTA_DATA
   42 0000000E 6808            LDR              R0,[R1]
   43 00000010 F040 0040       ORR              R0,#0x40
   44 00000014 6008            STR              R0,[R1]
   45 00000016 F000 F8F3       BL               CLEAR
   46 0000001A F7FF FFFE       BL               BEGINING
   47 0000001E F64F 70FF 
              F2C0 00FF        MOV32            R0, #0XFFFFFF
   48 00000026 F7FF FFFE       BL               DELAY
   49 0000002A 49A6            LDR              R1,=PORTA_DATA
   50 0000002C 6808            LDR              R0,[R1]
   51 0000002E F020 0040       BIC              R0,#0x40
   52 00000032 6008            STR              R0,[R1]
   53 00000034         
   54 00000034 F04F 0580       MOV              R5, #0x80
   55 00000038 F7FF FFFE       BL               TRANSMIT
   56 0000003C F04F 0540       MOV              R5, #0X40
   57 00000040 F7FF FFFE       BL               TRANSMIT
   58 00000044 F04F 050C       MOV              R5, #0X0C
   59 00000048 F7FF FFFE       BL               TRANSMIT
   60 0000004C 499D            LDR              R1,=PORTA_DATA
   61 0000004E 6808            LDR              R0,[R1]
   62 00000050 F040 0040       ORR              R0,#0x40
   63 00000054 6008            STR              R0,[R1]
   64 00000056         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   65 00000056         ;;;;; REGISTERS
   66 00000056         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   67 00000056         ;;;;; R0  ==> GENERAL PURPOSES
   68 00000056         ;;;;; R1  ==> GENERAL PURPOSES
   69 00000056         ;;;;; R2  ==> CURSOR'S POSITION
   70 00000056         ;;;;; R3  ==> X POSITION
   71 00000056         ;;;;; R4  ==> CURSOR'S POSITION
   72 00000056         ;;;;; R5  ==> DISPLAY REGISTER
   73 00000056         ;;;;; R6  ==> Y POSITION
   74 00000056         ;;;;; R7  ==> TIMER'S COUNTER
   75 00000056         ;;;;; R8  ==> ADC RESULT 
   76 00000056         ;;;;; R9  ==> ADC RESULT
   77 00000056         ;;;;; R10 ==> FREE
   78 00000056         ;;;;; R11 ==> FREE
   79 00000056         ;;;;; R12 ==> FREE
   80 00000056         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   81 00000056 F000 F920       BL               CL_REG
   82 0000005A F64F 79FF 
              F6CF 79FF        MOV32            R9,  #0xFFFFFFFF
   83 00000062 F8C1 A000       STR              R10, [R1]
   84 00000066 4998            LDR              R1,=POSITION
   85 00000068 F8C1 9000       STR              R9, [R1]



ARM Macro Assembler    Page 3 


   86 0000006C 4997            LDR              R1,=MINE_POSITION
   87 0000006E F8C1 A000       STR              R10, [R1]
   88 00000072         ;   LDR  R1,=RESTART
   89 00000072         ;   STR  R10, [R1]   
   90 00000072 4997    getsample
                               LDR              R1,=ADC0_PSSI 
                                                            ; request a sample
   91 00000074 6808            LDR              R0,[R1]     ;
   92 00000076 F040 000C       ORR              R0,R0,#0x0C ; get a sample
   93 0000007A 6008            STR              R0,[R1]     ;
   94 0000007C         
   95 0000007C 4995    loop    LDR              R1,=ADC0_RIS ; check for interr
                                                            up flag
   96 0000007E 6808            LDR              R0,[R1]     ;
   97 00000080 F010 000C       ANDS             R0,#0x0C    ;
   98 00000084 D0FA            BEQ              loop
   99 00000086         
  100 00000086 4994            LDR              R1,=ADC0_ISC ; clear the interr
                                                            upt flag
  101 00000088 6808            LDR              R0,[R1]     ;
  102 0000008A F040 000C       ORR              R0,#0x0C    ;
  103 0000008E 6008            STR              R0,[R1]     ; Interrupt flag is
                                                             cleared
  104 00000090         
  105 00000090 4992            LDR              R1, =SCREEN_COUNTER
  106 00000092 780C            LDRB             R4, [R1]
  107 00000094 2C00            CMP              R4, #0
  108 00000096 BF08 F000 
              F886             BLEQ             DISPLAY_SHIP
  109 0000009C 2C01            CMP              R4, #1
  110 0000009E BF08 F000 
              F882             BLEQ             DISPLAY_SHIP
  111 000000A4 2C02            CMP              R4, #2
  112 000000A6 BF08 F000 
              F8CD             BLEQ             CLEARBOX
  113 000000AC 2C04            CMP              R4, #4
  114 000000AE BF08 F000 
              F8B6             BLEQ             DELAY_5MS
  115 000000B4 4989            LDR              R1, =SCREEN_COUNTER
  116 000000B6 780C            LDRB             R4, [R1]
  117 000000B8 2C06            CMP              R4, #6
  118 000000BA BF08 3401       ADDEQ            R4,#1
  119 000000BE 700C            STRB             R4,[R1]
  120 000000C0 BF04 2303       MOVEQ            R3, #0X03
  121 000000C4 F7FF FFFE       BLEQ             TIMER_INIT
  122 000000C8 BF08 2714       MOVEQ            R7, #20     ;this counter for t
                                                            imer
  123 000000CC F8DF A20C       LDR              R10, =SCREEN_COUNTER
  124 000000D0 F89A 9000       LDRB             R9,[R10]
  125 000000D4 F1B9 0F0C       CMP              R9,#12
  126 000000D8 BF04 2300       MOVEQ            R3, #0X0
  127 000000DC F7FF FFFE       BLEQ             TIMER_INIT
  128 000000E0 BF08 F7FF 
              FFFE             BLEQ             FINAL
  129 000000E6 497D            LDR              R1, =SCREEN_COUNTER
  130 000000E8 780C            LDRB             R4, [R1]
  131 000000EA 2C0D            CMP              R4, #13
  132 000000EC BF08 F000 
              F8D4             BLEQ             CL_REG



ARM Macro Assembler    Page 4 


  133 000000F2 497A            LDR              R1, =SCREEN_COUNTER
  134 000000F4 780C            LDRB             R4, [R1]
  135 000000F6 2C0B            CMP              R4, #11
  136 000000F8 BF82 F64F 
              70FF F2C0 
              0000             MOV32HI          R0, #0XFFFF
  137 00000102 F7FF FFFE       BLHI             DELAY
  138 00000106 D8B4            BHI              getsample
  139 00000108         
  140 00000108         CURSOR
  141 00000108 4975            LDR              R1,=ADC0_SSFIFO2 ;
  142 0000010A F8D1 8000       LDR              R8,[R1]     ; R8 is the data PE
                                                            3
  143 0000010E F04F 00AB       MOV              R0,#171     ; get the first dig
                                                            it
  144 00000112 FBB8 F8F0       UDIV             R8,R8,R0    ;   
  145 00000116 4973            LDR              R1, =ADC0_SSFIFO3
  146 00000118 F8D1 9000       LDR              R9,[R1]
  147 0000011C F04F 004B       MOV              R0,#75      ; get the first dig
                                                            it
  148 00000120 FBB9 F3F0       UDIV             R3,R9,R0    ;
  149 00000124 F103 0385       ADD              R3, R3,#0x85
  150 00000128 F04F 0641       MOV              R6, #0x41
  151 0000012C F1B8 0801       SUBS             R8, #1
  152 00000130 BF0B 2201       MOVEQ            R2, #0x1
  153 00000134 2202            MOVNE            R2, #0x2
  154 00000136 2403            MOVEQ            R4, #0x3
  155 00000138 2407            MOVNE            R4, #0x7
  156 0000013A         
  157 0000013A         LOP
  158 0000013A 4962            LDR              R1,=PORTA_DATA
  159 0000013C 6808            LDR              R0,[R1]
  160 0000013E F020 0040       BIC              R0,#0x40
  161 00000142 6008            STR              R0,[R1]
  162 00000144         
  163 00000144 461D            MOV              R5, R3
  164 00000146 F7FF FFFE       BL               TRANSMIT
  165 0000014A 4635            MOV              R5, R6
  166 0000014C F7FF FFFE       BL               TRANSMIT
  167 00000150         
  168 00000150 495C            LDR              R1,=PORTA_DATA
  169 00000152 6808            LDR              R0,[R1]
  170 00000154 F040 0040       ORR              R0,#0x40
  171 00000158 6008            STR              R0,[R1]
  172 0000015A 2E41            CMP              R6, #0x41
  173 0000015C BF04 FA02 
              F208             LSLEQ            R2, R8
  174 00000162 FA04 F408       LSLEQ            R4, R8
  175 00000166 D007            BEQ              WORK
  176 00000168 2E42            CMP              R6, #0X42
  177 0000016A BF04 BA52       REV16EQ          R2, R2
  178 0000016E BA64            REV16EQ          R4, R4
  179 00000170 2E43            CMP              R6, #0X43
  180 00000172 BF04 BA12       REVEQ            R2, R2
  181 00000176 BA24            REVEQ            R4, R4
  182 00000178         WORK
  183 00000178 2B85            CMP              R3, #0x85
  184 0000017A BF0C 25FF       MOVEQ            R5, #0XFF
  185 0000017E 2500            MOVNE            R5, #0X0



ARM Macro Assembler    Page 5 


  186 00000180 F7FF FFFE       BL               TRANSMIT
  187 00000184 4615            MOV              R5, R2      ;NE
  188 00000186 F7FF FFFE       BL               TRANSMIT
  189 0000018A 4625            MOV              R5, R4
  190 0000018C F7FF FFFE       BL               TRANSMIT
  191 00000190 4615            MOV              R5, R2
  192 00000192 F7FF FFFE       BL               TRANSMIT
  193 00000196 F04F 0500       MOV              R5, #0X0
  194 0000019A F7FF FFFE       BL               TRANSMIT
  195 0000019E F106 0601       ADD              R6, #1
  196 000001A2 2E44            CMP              R6, #0X44
  197 000001A4 D1C9            BNE              LOP
  198 000001A6 E764            B                getsample   ;      
  199 000001A8         
  200 000001A8         DISPLAY_SHIP
  201 000001A8 B510            PUSH             {R4, LR}
  202 000001AA 494F            LDR              R1, =CIV_COUNTER
  203 000001AC 780C            LDRB             R4, [R1]
  204 000001AE 2C00            CMP              R4, #0
  205 000001B0 D90C            BLS              BATTLE
  206 000001B2 4945            LDR              R1, =POSITION
  207 000001B4 F7FF FFFE       BL               CIVILIAN
  208 000001B8 2C01            CMP              R4, #1
  209 000001BA D907            BLS              BATTLE
  210 000001BC 494B            LDR              R1, =(POSITION + 2)
  211 000001BE F7FF FFFE       BL               CIVILIAN
  212 000001C2 2C02            CMP              R4, #2
  213 000001C4 D902            BLS              BATTLE
  214 000001C6 494A            LDR              R1, =(POSITION + 4)
  215 000001C8 F7FF FFFE       BL               CIVILIAN
  216 000001CC         
  217 000001CC         BATTLE
  218 000001CC 4849            LDR              R0, =BATTLE_COUNTER
  219 000001CE 7802            LDRB             R2, [R0]
  220 000001D0 2A00            CMP              R2, #0
  221 000001D2 D912            BLS              FINISH
  222 000001D4 4948            LDR              R1, =(POSITION + 6)
  223 000001D6 F7FF FFFE       BL               BATTLESHIP
  224 000001DA 2A01            CMP              R2, #1
  225 000001DC D90D            BLS              FINISH
  226 000001DE 4947            LDR              R1, =(POSITION + 8)
  227 000001E0 F7FF FFFE       BL               BATTLESHIP
  228 000001E4 2A02            CMP              R2, #2
  229 000001E6 D908            BLS              FINISH
  230 000001E8 4945            LDR              R1, =(POSITION + 10)
  231 000001EA F7FF FFFE       BL               BATTLESHIP
  232 000001EE 2A03            CMP              R2, #3
  233 000001F0 D903            BLS              FINISH
  234 000001F2 4944            LDR              R1, =(POSITION + 12)
  235 000001F4 F7FF FFFE       BL               BATTLESHIP
  236 000001F8 E7FF            B                FINISH
  237 000001FA         FINISH
  238 000001FA E8BD 4010       POP              {R4, LR}
  239 000001FE 4770            BX               LR
  240 00000200         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  241 00000200         ;;;;;; CLEAR WHOLE SCREEN
  242 00000200         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  243 00000200 B503    CLEAR   PUSH             {R0,R1,LR}
  244 00000202 F04F 0000       MOV              R0,#0



ARM Macro Assembler    Page 6 


  245 00000206 F240 11F7       MOV              R1, #503
  246 0000020A F04F 0500 
                       LOOP    MOV              R5, #0X0
  247 0000020E F7FF FFFE       BL               TRANSMIT
  248 00000212 F100 0001       ADD              R0, #1
  249 00000216 4288            CMP              R0,R1
  250 00000218 D1F7            BNE              LOOP
  251 0000021A E8BD 4003       POP              {R0,R1,LR}
  252 0000021E 4770            BX               LR
  253 00000220         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  254 00000220         
  255 00000220         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  256 00000220         ;;;;;; 5 msec delay
  257 00000220         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  258 00000220         DELAY_5MS
  259 00000220 B500            PUSH             {LR}
  260 00000222 F7FF FFC1       BL               DISPLAY_SHIP
  261 00000226 F640 1000 
              F2C0 003D        MOV32            R0, #4000000
  262 0000022E F7FF FFFE       BL               DELAY
  263 00000232 F000 F808       BL               CLEARBOX
  264 00000236 4929            LDR              R1, =SCREEN_COUNTER
  265 00000238 780C            LDRB             R4, [R1]
  266 0000023A F104 0401       ADD              R4, #1
  267 0000023E 700C            STRB             R4, [R1]
  268 00000240 F85D EB04       POP              {LR}
  269 00000244 4770            BX               LR
  270 00000246         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  271 00000246         ;;;;;; CLEAR Y = 1-2-3-4 ROWS
  272 00000246         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  273 00000246 B507    CLEARBOX
                               PUSH{R0,         R1, R2, LR}
  274 00000248 F04F 0641       MOV              R6, #0X41
  275 0000024C         LOOP_CL
  276 0000024C 491D            LDR              R1,=PORTA_DATA
  277 0000024E 6808            LDR              R0,[R1]
  278 00000250 F020 0040       BIC              R0,#0x40
  279 00000254 6008            STR              R0,[R1]
  280 00000256         
  281 00000256 F04F 0586       MOV              R5, #0X86
  282 0000025A F7FF FFFE       BL               TRANSMIT
  283 0000025E 4635            MOV              R5, R6
  284 00000260 F7FF FFFE       BL               TRANSMIT
  285 00000264         
  286 00000264 4917            LDR              R1,=PORTA_DATA
  287 00000266 6808            LDR              R0,[R1]
  288 00000268 F040 0040       ORR              R0,#0x40
  289 0000026C 6008            STR              R0,[R1]
  290 0000026E         
  291 0000026E F04F 0286       MOV              R2, #0X86
  292 00000272 F04F 0500 
                       LOOP_C  MOV              R5, #0X0
  293 00000276 F7FF FFFE       BL               TRANSMIT
  294 0000027A F102 0201       ADD              R2, #1
  295 0000027E 2AC5            CMP              R2, #0XC5
  296 00000280 D1F7            BNE              LOOP_C
  297 00000282 F106 0601       ADD              R6, #1
  298 00000286 2E45            CMP              R6, #0X45
  299 00000288 D1E0            BNE              LOOP_CL



ARM Macro Assembler    Page 7 


  300 0000028A         
  301 0000028A 4914            LDR              R1, =SCREEN_COUNTER
  302 0000028C 780C            LDRB             R4, [R1]
  303 0000028E F104 0401       ADD              R4, #1
  304 00000292 700C            STRB             R4, [R1]
  305 00000294 E8BD 4007       POP{R0,          R1, R2, LR}
  306 00000298 4770            BX               LR
  307 0000029A         
  308 0000029A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  309 0000029A         
  310 0000029A         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  311 0000029A         CL_REG
  312 0000029A B500            PUSH             {LR}
  313 0000029C         ;   LDR R1,=PORTA_DATA  
  314 0000029C         ;   LDR R0,[R1]
  315 0000029C         ;   ORR R0,#0x40    
  316 0000029C         ;   STR R0,[R1] 
  317 0000029C F7FF FFB0       BL               CLEAR
  318 000002A0 F7FF FFFE       BL               BOUNDARY
  319 000002A4 F04F 0A00       MOV              R10, #0
  320 000002A8 4812            LDR              R0, =BATTLE_COUNTER
  321 000002AA F8C0 A000       STR              R10, [R0]
  322 000002AE 490E            LDR              R1, =CIV_COUNTER
  323 000002B0 F8C1 A000       STR              R10, [R1]
  324 000002B4 4909            LDR              R1, =SCREEN_COUNTER
  325 000002B6 4914            LDR              R1,=MINE_COUNTER
  326 000002B8 F8C1 A000       STR              R10, [R1]
  327 000002BC F85D EB04       POP              {LR}
  328 000002C0 4770            BX               LR
  329 000002C2         
  330 000002C2 00 00           ALIGN
  331 000002C4                 END
              400043FC 
              20000400 
              20000412 
              40038028 
              40038004 
              4003800C 
              20000411 
              40038088 
              400380A8 
              20000410 
              20000402 
              20000404 
              2000040F 
              20000406 
              20000408 
              2000040A 
              2000040C 
              20000424 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\__main.d -o.\objects\__main.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\__main.lst __main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BATTLE 000001CC

Symbol: BATTLE
   Definitions
      At line 217 in file __main.s
   Uses
      At line 205 in file __main.s
      At line 209 in file __main.s
      At line 213 in file __main.s

CLEAR 00000200

Symbol: CLEAR
   Definitions
      At line 243 in file __main.s
   Uses
      At line 45 in file __main.s
      At line 317 in file __main.s

CLEARBOX 00000246

Symbol: CLEARBOX
   Definitions
      At line 273 in file __main.s
   Uses
      At line 112 in file __main.s
      At line 263 in file __main.s

CL_REG 0000029A

Symbol: CL_REG
   Definitions
      At line 311 in file __main.s
   Uses
      At line 81 in file __main.s
      At line 132 in file __main.s

CURSOR 00000108

Symbol: CURSOR
   Definitions
      At line 140 in file __main.s
   Uses
      None
Comment: CURSOR unused
DELAY_5MS 00000220

Symbol: DELAY_5MS
   Definitions
      At line 258 in file __main.s
   Uses
      At line 114 in file __main.s
Comment: DELAY_5MS used once
DISPLAY_SHIP 000001A8

Symbol: DISPLAY_SHIP
   Definitions
      At line 200 in file __main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 108 in file __main.s
      At line 110 in file __main.s
      At line 260 in file __main.s

FINISH 000001FA

Symbol: FINISH
   Definitions
      At line 237 in file __main.s
   Uses
      At line 221 in file __main.s
      At line 225 in file __main.s
      At line 229 in file __main.s
      At line 233 in file __main.s
      At line 236 in file __main.s

LOOP 0000020A

Symbol: LOOP
   Definitions
      At line 246 in file __main.s
   Uses
      At line 250 in file __main.s
Comment: LOOP used once
LOOP_C 00000272

Symbol: LOOP_C
   Definitions
      At line 292 in file __main.s
   Uses
      At line 296 in file __main.s
Comment: LOOP_C used once
LOOP_CL 0000024C

Symbol: LOOP_CL
   Definitions
      At line 275 in file __main.s
   Uses
      At line 299 in file __main.s
Comment: LOOP_CL used once
LOP 0000013A

Symbol: LOP
   Definitions
      At line 157 in file __main.s
   Uses
      At line 197 in file __main.s
Comment: LOP used once
WORK 00000178

Symbol: WORK
   Definitions
      At line 182 in file __main.s
   Uses
      At line 175 in file __main.s
Comment: WORK used once
__main 00000000

Symbol: __main



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 35 in file __main.s
   Uses
      At line 33 in file __main.s
Comment: __main used once
getsample 00000072

Symbol: getsample
   Definitions
      At line 90 in file __main.s
   Uses
      At line 138 in file __main.s
      At line 198 in file __main.s

loop 0000007C

Symbol: loop
   Definitions
      At line 95 in file __main.s
   Uses
      At line 98 in file __main.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 17 in file __main.s
   Uses
      None
Comment: main unused
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 5 in file __main.s
   Uses
      At line 100 in file __main.s
Comment: ADC0_ISC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 4 in file __main.s
   Uses
      At line 90 in file __main.s
Comment: ADC0_PSSI used once
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 1 in file __main.s
   Uses
      At line 95 in file __main.s
Comment: ADC0_RIS used once
ADC0_SSFIFO2 40038088

Symbol: ADC0_SSFIFO2
   Definitions
      At line 2 in file __main.s
   Uses
      At line 141 in file __main.s
Comment: ADC0_SSFIFO2 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 3 in file __main.s
   Uses
      At line 145 in file __main.s
Comment: ADC0_SSFIFO3 used once
ADC0_SSFSTAT2 4003808C

Symbol: ADC0_SSFSTAT2
   Definitions
      At line 6 in file __main.s
   Uses
      None
Comment: ADC0_SSFSTAT2 unused
BATTLE_COUNTER 2000040F

Symbol: BATTLE_COUNTER
   Definitions
      At line 9 in file __main.s
   Uses
      At line 218 in file __main.s
      At line 320 in file __main.s

CIV_COUNTER 20000410




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: CIV_COUNTER
   Definitions
      At line 10 in file __main.s
   Uses
      At line 202 in file __main.s
      At line 322 in file __main.s

MINE_COUNTER 20000424

Symbol: MINE_COUNTER
   Definitions
      At line 14 in file __main.s
   Uses
      At line 325 in file __main.s
Comment: MINE_COUNTER used once
MINE_POSITION 20000412

Symbol: MINE_POSITION
   Definitions
      At line 12 in file __main.s
   Uses
      At line 86 in file __main.s
Comment: MINE_POSITION used once
PORTA_DATA 400043FC

Symbol: PORTA_DATA
   Definitions
      At line 7 in file __main.s
   Uses
      At line 41 in file __main.s
      At line 49 in file __main.s
      At line 60 in file __main.s
      At line 158 in file __main.s
      At line 168 in file __main.s
      At line 276 in file __main.s
      At line 286 in file __main.s

POSITION 20000400

Symbol: POSITION
   Definitions
      At line 8 in file __main.s
   Uses
      At line 84 in file __main.s
      At line 206 in file __main.s
      At line 210 in file __main.s
      At line 214 in file __main.s
      At line 222 in file __main.s
      At line 226 in file __main.s
      At line 230 in file __main.s
      At line 234 in file __main.s

RESTART 20000428

Symbol: RESTART
   Definitions
      At line 15 in file __main.s
   Uses
      None



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Comment: RESTART unused
SCREEN_COUNTER 20000411

Symbol: SCREEN_COUNTER
   Definitions
      At line 11 in file __main.s
   Uses
      At line 105 in file __main.s
      At line 115 in file __main.s
      At line 123 in file __main.s
      At line 129 in file __main.s
      At line 133 in file __main.s
      At line 264 in file __main.s
      At line 301 in file __main.s
      At line 324 in file __main.s

TIMER0_CTL 4003000C

Symbol: TIMER0_CTL
   Definitions
      At line 13 in file __main.s
   Uses
      None
Comment: TIMER0_CTL unused
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BATTLESHIP 00000000

Symbol: BATTLESHIP
   Definitions
      At line 25 in file __main.s
   Uses
      At line 223 in file __main.s
      At line 227 in file __main.s
      At line 231 in file __main.s
      At line 235 in file __main.s

BEGINING 00000000

Symbol: BEGINING
   Definitions
      At line 32 in file __main.s
   Uses
      At line 46 in file __main.s
Comment: BEGINING used once
BOUNDARY 00000000

Symbol: BOUNDARY
   Definitions
      At line 26 in file __main.s
   Uses
      At line 318 in file __main.s
Comment: BOUNDARY used once
CIVILIAN 00000000

Symbol: CIVILIAN
   Definitions
      At line 27 in file __main.s
   Uses
      At line 207 in file __main.s
      At line 211 in file __main.s
      At line 215 in file __main.s

DELAY 00000000

Symbol: DELAY
   Definitions
      At line 21 in file __main.s
   Uses
      At line 48 in file __main.s
      At line 137 in file __main.s
      At line 262 in file __main.s

FINAL 00000000

Symbol: FINAL
   Definitions
      At line 31 in file __main.s
   Uses
      At line 128 in file __main.s
Comment: FINAL used once
GPIOPortF_Handler 00000000

Symbol: GPIOPortF_Handler
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 29 in file __main.s
   Uses
      None
Comment: GPIOPortF_Handler unused
GPIO_INIT 00000000

Symbol: GPIO_INIT
   Definitions
      At line 30 in file __main.s
   Uses
      At line 40 in file __main.s
Comment: GPIO_INIT used once
Init 00000000

Symbol: Init
   Definitions
      At line 20 in file __main.s
   Uses
      At line 38 in file __main.s
Comment: Init used once
LCD_INIT 00000000

Symbol: LCD_INIT
   Definitions
      At line 19 in file __main.s
   Uses
      At line 39 in file __main.s
Comment: LCD_INIT used once
OutChar 00000000

Symbol: OutChar
   Definitions
      At line 22 in file __main.s
   Uses
      None
Comment: OutChar unused
TIMER_INIT 00000000

Symbol: TIMER_INIT
   Definitions
      At line 24 in file __main.s
   Uses
      At line 121 in file __main.s
      At line 127 in file __main.s

TRANSMIT 00000000

Symbol: TRANSMIT
   Definitions
      At line 23 in file __main.s
   Uses
      At line 55 in file __main.s
      At line 57 in file __main.s
      At line 59 in file __main.s
      At line 164 in file __main.s
      At line 166 in file __main.s
      At line 186 in file __main.s
      At line 188 in file __main.s
      At line 190 in file __main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 192 in file __main.s
      At line 194 in file __main.s
      At line 247 in file __main.s
      At line 282 in file __main.s
      At line 284 in file __main.s
      At line 293 in file __main.s

Timer0A_Handler 00000000

Symbol: Timer0A_Handler
   Definitions
      At line 28 in file __main.s
   Uses
      None
Comment: Timer0A_Handler unused
14 symbols
382 symbols in table
